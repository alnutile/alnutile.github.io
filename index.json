[{"content":"Just keeping track of some nuances to LiveWire\ninitialData.fingerprint The table with rows was not interating. The rows had two columns of for-each loops so as always you need keys, but I think my mistake was not making the keys different for either of them.\nYou can see the table below\n@foreach( $imports as $import) \u0026lt;tr class=\u0026quot;bg-emerald-200\u0026quot;\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt;{{ $import-\u0026gt;id }}\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt;{{ $import-\u0026gt;name }}\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt;{{ optional($import-\u0026gt;source)-\u0026gt;type }}\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt; \u0026lt;div\u0026gt;@if($import-\u0026gt;file_path) @livewire('download-import', ['import' =\u0026gt; $import], key('download-' . $import-\u0026gt;id)) @else \u0026lt;div\u0026gt;no file\u0026lt;/div\u0026gt; @endif \u0026lt;/div\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt; @livewire(\u0026quot;status-link\u0026quot;, [ 'import' =\u0026gt; $import ], key('link-' . $import-\u0026gt;id)) \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach The keys\nkey('download-' . $import-\u0026gt;id)) and\nkey('link-' . $import-\u0026gt;id)) Did not work when I was using key($import-\u0026gt;id)\nThe table and search all just stopped :(\nAnyways hope this saves the future me an hour!\n","relPermalink":"/posts/livewire/","summary":"Just keeping track of some nuances to LiveWire\ninitialData.fingerprint The table with rows was not interating. The rows had two columns of for-each loops so as always you need keys, but I think my mistake was not making the keys different for either of them.\nYou can see the table below\n@foreach( $imports as $import) \u0026lt;tr class=\u0026quot;bg-emerald-200\u0026quot;\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt;{{ $import-\u0026gt;id }}\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt;{{ $import-\u0026gt;name }}\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt;{{ optional($import-\u0026gt;source)-\u0026gt;type }}\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026quot;border px-8 py-4\u0026quot;\u0026gt; \u0026lt;div\u0026gt;@if($import-\u0026gt;file_path) @livewire('download-import', ['import' =\u0026gt; $import], key('download-' .","tags":["laravel","livewire","note"],"title":"Odd Livewire Error(s)"},{"content":" The point is GitHub Actions should be revolutionizing your team\u0026rsquo;s workflows; if it is not, you are missing something important.\n This first post is part one of three. In this series I will cover the following topics.\n PT 1 CI - Simple Continuous Integration using GitHub Actions PT 2 CD - Simple Continuous Deployment using GitHub Actions PT 3 Security - Shifting Left on Security  Please keep in mind that the repository and code below I am sharing is not an end product and will evolve. The \u0026ldquo;Links\u0026rdquo; section below will have many of the links needed.\nIf I do not get any interest in this post, I will not do PT 2 or PT 2 as I try to use Build Measure Learn 1 with writing these articles. ¬Ø_(„ÉÑ)_/¬Ø\nBy the end of this post, you will easily be able to add CI to your open-source project, independent private project, team project, or even, dare I say, \u0026ldquo;enterprise\u0026rdquo; project. ( more on that later ü§î)\nI will reference material in numerous books and research papers you can see many of them here\nContinuous Delivery Book  The commit stage begins with a change to the state of the project‚Äîthat is, a commit to the version control system. It ends with either a report of failure or, if successful, a collection of binary artifacts and deployable assemblies to be used in subsequent test and release stages, as well as reports on the state of the application. Ideally, a commit stage should take less than five minutes to run, and certainly no more than ten. Humble, Jez; Farley, David. Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation 2\n This book is the \u0026ldquo;why\u0026rdquo; behind this article. You can not deliver quality code without a CI system that embraces automation and tooling to vet code quickly. To that end the company paying for this code can not succeed either with out this level of thinking.\n Those who excel at delivering profitability, productivity, and customer satisfaction survive. Anything less than excellence leads to failure. pg 32 3\n  Continuous delivery for the sake of continuous delivery is not enough if you want your organization to succeed, however. It must be done with an eye to organizational goals such as profitability, productivity, and customer satisfaction. pg 49 3\n  Our analysis this year shows elite performers are twice as likely to meet or exceed their organizational performance goals. Pg 54 3\n These quotes make it clear that a company that says NO proper CI and CD is also saying NO to success. And most companies have to see the sentence \u0026ldquo;We are a company that does x and happens to have a technology team\u0026rdquo; flipped around to say, \u0026ldquo;We are a technology company that happens to focuses on x.\u0026rdquo;\nThe Twelve-Factor App Read more about that here\nThis article is how I started years ago to consider any application I was building. In this post I am writing, CI will include the following principles.\n CodeBase Dependencies Config  The article will use the repo https://github.com/alnutile/codenames as if it is an application. I mean it is, even though a very silly one.\nWe will in this case, focus more on the \u0026ldquo;shifting left\u0026rdquo; when it comes to \u0026ldquo;quality and security\u0026rdquo; and other goals like \u0026ldquo;peer review-based approval process.\u0026rdquo;\n We recommend that organizations move away from external change approval because of the negative effects on performance. Instead, organizations should \u0026ldquo;shift left\u0026rdquo; to peer review-based approval during the development process. 3\n I will apply some base GitHub Actions to the codebase to help confidence in quality and security from the start. By then end we will have the start of a CI system to help you and your team achieve \u0026ldquo;Elite\u0026rdquo; levels of performance.\nAccelerate The book Accelerate 4 is not just a technology game-changer; it is a culture-changing strategy that can be implemented on any team today.\nJust the habit of working in \u0026ldquo;small batches\u0026rdquo; will change the performance level of any team. This book will impact all parts of these three articles.\nOn that note, the only way to get to the \u0026ldquo;Elite\u0026rdquo; levels this book talks about is by putting CI and CD first. You have to believe in it, do it no matter how much time pressure is on your team because it will succeed in the long run. What will not succeed is cutting corners, building technical debt, and having too many non-automated processes between your code and going to production. All of this is proven by the data in this book and the ongoing reports it offers 3\n We also see that elite performers automate and integrate tools more frequently into their toolchains on almost all dimensions. Although automation may be seen as too expensive to implement (we often hear, \u0026ldquo;I don\u0026rsquo;t have time or budget to automate‚Äî it\u0026rsquo;s not a feature!\u0026quot;), automation is truly a sound investment. Pg 60 3\n Branching  PR is another way of saying Pull-Request\n To begin this CI process and all the GitHub Actions will assume a trunk-based branching process. Basically, you have \u0026ldquo;mainline\u0026rdquo; and ONE level of branching off of that, e.g. the \u0026ldquo;small batch\u0026rdquo; of the feature you are working on. This size of this \u0026ldquo;batch\u0026rdquo; should be under four hours of work, ideally, two. Consider a daily goal to merge two pull requests a day of work. This strategy will make more sense as I cover Feature Flags in part two of the article.\n Our research shows that effective trunk-based development is characterized by fewer than three active branches and branches and forks having lifetimes of less than a day before being merged to master. Pg 41 3\n All Pull Request will trigger these automations leaving only one real manual step that is a peer developer on the project to review the code WHILE you work on the pull request or the next part of the feature.\nKeep in mind, we are working in small batches. Your code is not a days worth of work thrown to some poor teammate who has barely enough time to get a hot cup of coffee ‚òïÔ∏è. No, it is a small batch of code they can quickly review and even suggest an update for the next PR cause they know you will be at it quickly enough.\nEvery merged PR is not a final stoke on some great renascence painting but a small step toward building a feature. If you think in line with Build Measure Learn 1, you start realize that the feature might never get used or even eventually removed. Some statistics show this to be about 2/3 of the code pushed!\nThis PR process asks a teammate to review the code, and if they are too busy after thirty minutes, go find someone else. Please keep it to ONE person. This is not a time to philosophize around the merits of style and ideals. Those conversations can happen, but a team should have time to do that during the week and build standards together. Maybe, for example, the reviewer thinks you should not do x, then agree to come back to it later, set up a time to talk as the larger team and or in chat, make a decision, document it, or better add it to automation. These pull requests are about the feature and the known best practices the team has agreed to.\nThe short of it is, make a branch from trunk, push to your version control system a pull request with the first bit of code-test you write. Get someone\u0026rsquo;s eyes on it sooner than later. When approved, merge that one branch back into trunk (main, master, mainline).\nLastly, if you find yourself waiting for someone to review the branch, you can branch-off of it since, by the time you are done with your second PR, you should have enough feedback from your teammate to merge and then rebase your current branch from trunk. Leaving you never more than one branch out at most from trunk.\nOne good question I had been asked about this was when I presented this workflow to another team was, \u0026ldquo;Won\u0026rsquo;t this distract my team from the work they are doing if all day there are looking at PRs\u0026rdquo; and I asked my team about this, and overall, the answer is no.\nFor one, these are small batches of work; the dev does not have to switch their context that significantly unlike if they are handed days of code. Second, the devs do not and should not be coding eight hours a day. There should be other things going on in their day to make sure the health of the project and team are being built and maintained as well. We are preventing debt by doing this. 5\nGitHub Actions Okay, this is huge; we are going to start talking about GitHub Actions. And yes, GitLabs and BitBucket have comparable features, so this article can be considered for all of them. The point is GitHub Actions should be revolutionizing your team\u0026rsquo;s workflows; if it is not, you are missing something important. It empowers DevOps at the developer level in a way that years ago took heavy server administration skills to set up. But now it is like Lego bricks, pre-built automation to truly shift-left in all things.\nStep One: Setting up the actions This is easy; I will show you in order every action used to make this all happen.\nFirst, it happens in one file https://github.com/alnutile/codenames/blob/main/.github/workflows/ci-cd.yml maybe it can be broken up into more, etc. I am not a GitHub Actions expert, so feel free to Google more about this.\nWe start with the \u0026ldquo;when\u0026rdquo; to run the action.\nname: CI-CD on: [push] The \u0026ldquo;when\u0026rdquo; in this case is when code is pushed to any branch we run this.\nOkay, then there is some base setup I will breeze over since the GitHub Action Docs are good and I rather focus on the \u0026ldquo;how\u0026rdquo; and \u0026ldquo;why\u0026rdquo;.\nruns-on: ubuntu-latest env: DB_DATABASE: test DB_USERNAME: root DB_PASSWORD: password BROADCAST_DRIVER: log services: mysql: image: mysql:5.7 env: MYSQL_ALLOW_EMPTY_PASSWORD: false MYSQL_ROOT_PASSWORD: password MYSQL_DATABASE: test ports: - 3306/tcp options: --health-cmd=\u0026#34;mysqladmin ping\u0026#34; --health-interval=10s --health-timeout=5s --health-retries=3 strategy: fail-fast: true matrix: php-versions: [\u0026#34;8.0\u0026#34;] So we are going to lean heavily on https://github.com/shivammathur/setup-php and after we check out our repo\nsteps: - uses: actions/checkout@v2 Once that is done, we can get to work.\nI set up PHP with some extensions I need, especially Xdebug even though it slows things down but it is how we will measure coverage.\n- name: Setup PHP, with composer and extensions uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php with: php-version: ${{ matrix.php-versions }} tools: phpmd extensions: mbstring, dom, fileinfo, mysql coverage: xdebug #optional I then prepare the application:\n- name: Start mysql service run: sudo /etc/init.d/mysql start - name: Get composer cache directory id: composer-cache run: echo \u0026#34;::set-output name=dir::$(composer config cache-files-dir)\u0026#34; - name: Cache composer dependencies uses: actions/cache@v2 with: path: ${{ steps.composer-cache.outputs.dir }} # Use composer.json for key, if composer.lock is not committed. # key: ${{ runner.os }}-composer-${{ hashFiles(\u0026#39;**/composer.json\u0026#39;) }} key: ${{ runner.os }}-composer-${{ hashFiles(\u0026#39;**/composer.lock\u0026#39;) }} restore-keys: ${{ runner.os }}-composer- - name: Install Composer dependencies run: composer install --no-progress --prefer-dist --optimize-autoloader - name: Prepare the application run: |php -r \u0026#34;file_exists(\u0026#39;.env\u0026#39;) || copy(\u0026#39;.env.example\u0026#39;, \u0026#39;.env\u0026#39;);\u0026#34; php artisan key:generate We depend on composer.lock as being part of this. One key thing here is to never reference dev-master in your composer.json file. Please make sure you use the MAJOR version that you want and let itself updated at the MINOR version levels 6\nOkay, now we have the system setup, PHP, MySQL, Composer files installed, and the .env setup.\n We\u0026rsquo;re sucking diesel now!\n Now let\u0026rsquo;s check our code for \u0026ldquo;quality.\u0026rdquo; Before we do that, let\u0026rsquo;s ask what quality is? Some of it is opinion-based, but as a team, something is better than nothing. A bar, a standard, something you all can agree to. The choices I show here are used in actual day to day work and does not slow down the team. But at the same time, it catches those little things and helps us to have consistent code that we can all share the workload on.\n# Setup Done now to test and lint the code - name: Run PHPMD run: phpmd app GitHub phpmd.ruleset.xml To begin with, we use PHPMD as a simple way to verify some standards and or quality. There is a ruleset file that the team can modify as needed.\n# Run linting to make sure it is worthwhile before NPM - name: phpstan run: | ./vendor/bin/phpstan analyse PHPStan is a Static Analysis Tool\n PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code. It moves PHP closer to compiled languages in the sense that the correctness of each line of the code can be checked before you run the actual line.\n It can catch many little things that our Unit tests (more on those in a moment) may not catch. Another option is LaraStan to help with the more specific Laravel code styles that may throw off PHPStan. Note we are not \u0026ldquo;boiling the ocean\u0026rdquo; here, we are setting things to levels that are \u0026ldquo;good enough\u0026rdquo;. Finding the right balance for your team is key here.\n# Again another lint before we do the js build - name: PHP Code Style (phpcs) uses: chindit/actions-phpcs@master with: cli: \u0026#34;--standard=PSR12\u0026#34; dir: app/ This one will help with linting, and some agreed to standards amongst the team. This makes our PR process not about looking at style but looking at logic.\n- name: Test with phpunit run: XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-text --coverage-clover clover.xml env: DB_PORT: ${{ job.services.mysql.ports[\u0026#39;3306\u0026#39;] }} - name: Do we pass the coverage amount run: vendor/bin/coverage-check clover.xml 60 Okay, this is the big one-time to PHPUnit test. Sixty percent is a bit low. I think 70% is a better goal. I will quote Kent Beck about 100%. Also note we focus on the Happy Paths\n No Dusk tests? Right, so I might add Dusk for some End2End. The work I do day to day depends on Python Pytest for End2End testing. Since those projects have an embedded QA person, they tend to know Python. Dusk is fantastic and there are actions running selenium and what not, so it should plug in fine. Maybe I will come back later to this. If this app had a JavaScript framework like VueJS I would not use Dusk I would use Jest or some other well-known testing framework for JavaScript. Since this app is Livewire, I depend on its testing at the PHPUnit level, but I do see the value here of some e2e testing in Dusk.\nOkay, so that is it; you now have these automations running with every PR. Let\u0026rsquo;s see what a PR looks like.\nStep Two: Using GitHub Branch Protection First, we have to get GitHub into a place that \u0026ldquo;forces\u0026rdquo; a PR flow. Honestly, a team should have \u0026ldquo;trust\u0026rdquo; enough maybe not to do this but two things here. One it prevents accidents. We have all been on the wrong branch before and pushed up without seeing. Second it can help with management to know there are guardrails.\nWe set the rule to match our trunk branch main We make sure that all Pull Requests require someone to create a PR beforehand and have one approver. Finally, we add this one Status check to pass before we can merge this into trunk.\nBelow is an example.\nWhat we get here is a Pull Request interface to see the critical aspects of this workflow. The upper right corner will be a Green \u0026ldquo;Review Pr\u0026rdquo; button if another team member was looking at this PR.\nThe middle section shows the running state of the Actions we made above and if they pass or fail. If they fail, then no matter what, we can not merge this easily.\nLastly is the \u0026ldquo;break glass\u0026rdquo; button to merge the PR if you are an admin. This will be Green if your PR is approved and the Actions are all passing.\nThat is it really for the PR. Review, comment, or approve, and your team is ready to have a high-speed flow to ensure quality is in from the start.\nFinal Thoughts tl;dr Take time to automate and place tools from the start of the chain in place to make sure quality is baked in. As your deploy code to production multiple times a day (coming in part two of this), you will see how important this is to speed and stability. And Actions let you do this easily.\nEnterprise  Developers should be empowered to do ops, and this is a great place to start.\n I mention this above and just want to take a moment to say that even a solution this simple is better than nothing. Developers should be empowered to do ops, and this is a great place to start. Actions do not require different teams to approve or implement. It can streamline the work it takes to innovate, and innovation at this level will work its way up to the business as the data in Accelerate shows over and over again.\nReferences Links  Example Repo Intro Post to all things State of DevOps PHP Actions  Follow Up  I will work on using CodeClimate as a code check action since this works with so many languages and seems to plugin easily using docker    https://www.mindtools.com/pages/article/build-measure-learn.htm \u0026#x21a9;\u0026#xfe0e;\n https://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912 \u0026#x21a9;\u0026#xfe0e;\n State of DevOps Report 2019 \u0026#x21a9;\u0026#xfe0e;\n Accelerate \u0026#x21a9;\u0026#xfe0e;\n (https://www.linkedin.com/pulse/being-offense-when-comes-day-scheduling-alfred-nutile/?trackingId=o9EJPZ73zVJOR6MeQ1HN3w%3D%3D) \u0026#x21a9;\u0026#xfe0e;\n Semantic Verision \u0026#x21a9;\u0026#xfe0e;\n   ","relPermalink":"/posts/ci_cd_part_one/","summary":"The point is GitHub Actions should be revolutionizing your team\u0026rsquo;s workflows; if it is not, you are missing something important.\n This first post is part one of three. In this series I will cover the following topics.\n PT 1 CI - Simple Continuous Integration using GitHub Actions PT 2 CD - Simple Continuous Deployment using GitHub Actions PT 3 Security - Shifting Left on Security  Please keep in mind that the repository and code below I am sharing is not an end product and will evolve.","tags":["laravel","ci","cd","accelerate","devops"],"title":"CI - GitHub Actions and Laravel (Part 1 of 3)"},{"content":"Some notes to self will add more after time if needed.\nMac M1 Had a MySQL error:\nERROR: no matching manifest for linux/arm64/v8 in the manifest list entries All I had to do was update docker-composer.yml:\nFile: docker-compose.yml 24: mysql: 25: image: 'mysql:8.0' 26: ports: 27: - '${FORWARD_DB_PORT:-3306}:3306' To:\n mysql: image: mariadb:10.5.8 ports: - \u0026quot;${FORWARD_DB_PORT:-3306}:3306\u0026quot; Then I disabled meilisearch else everytime I ran sail anything it would stop the docker container.\nFile: docker-compose.yml 50: # meilisearch: 51: # image: \u0026quot;getmeili/meilisearch:latest\u0026quot; 52: # ports: 53: # - \u0026quot;${FORWARD_MEILISEARCH_PORT:-7700}:7700\u0026quot; 54: # volumes: 55: # - \u0026quot;sailmeilisearch:/data.ms\u0026quot; 56: # networks: 57: # - sail I will have to come back to this one to fix it some info is here\nXdebug The article is a great start here\nBut a couple of things I think need to be made more clear or might even be an error:\nSet the SAIL_DEBUG=true not SAILDEBUG=true\nWhen running the build do:\n‚ùØ sail build --no-cache --build-arg XDEBUG=true To pass the args. And as he notes run sail php -v after sail is running to make sure you do not see any errors and xdebug is working.\nLinks  Xdebug Some overall m1 issues here  ","relPermalink":"/posts/sail/","summary":"Some notes to self will add more after time if needed.\nMac M1 Had a MySQL error:\nERROR: no matching manifest for linux/arm64/v8 in the manifest list entries All I had to do was update docker-composer.yml:\nFile: docker-compose.yml 24: mysql: 25: image: 'mysql:8.0' 26: ports: 27: - '${FORWARD_DB_PORT:-3306}:3306' To:\n mysql: image: mariadb:10.5.8 ports: - \u0026quot;${FORWARD_DB_PORT:-3306}:3306\u0026quot; Then I disabled meilisearch else everytime I ran sail anything it would stop the docker container.","tags":["laravel","note"],"title":"Laravel Sail and M1 Mac"},{"content":" How do we go on the \u0026ldquo;offensive\u0026rdquo; leaving behind what has only become a \u0026ldquo;defensive\u0026rdquo; effort to save our day from becoming unproductive?¬†Leaving us at the end of the day feeling like we need to make up some time after work or the weekend\n This post will be a look at how to manage your time in the midst of what can seem to be endless distractions and too many things needing to be done at once. It may seem mostly from a developer\u0026rsquo;s perspective, but it might help others who feel like they no longer have enough time to focus during the workday to get their actual work done. In the end, I hope to show that part of being a professional developer or many other roles is knowing your limitations of time. Knowing your limits, you can say \u0026ldquo;Yes\u0026rdquo; to requests with confidence and \u0026ldquo;No\u0026rdquo; to requests because you can see the more negative significant impact of saying yes will have on the project and on you as a professional.\nDay to day \u0026ldquo;popcorn\u0026rdquo; interactions Even before all the chat systems we now use, the day could quickly have been filled with numerous interruptions. Working in an office with your teammates knocking on your door for small talk while you are working through complex coding logic only to have it all topple over like a house of cards when that person asks, \u0026ldquo;how was your weekend\u0026rdquo; or \u0026ldquo;have you see the show‚Ä¶.\u0026rdquo; Or \u0026ldquo;what are you working on?\u0026rdquo;\nAnd now, with these chat systems as an integral part of our remote work-life, we further have our time filled with \u0026ldquo;obligations\u0026rdquo; to respond to others. How do we go on the \u0026ldquo;offensive\u0026rdquo; leaving behind what has only become a \u0026ldquo;defensive\u0026rdquo; effort to save our day from becoming unproductive?¬†Leaving us at the end of the day feeling like we need to make up some time after work or the weekend (btw, I typed workend here by accident, hmm). Or maybe even worse, feeling like you are no longer able to experience those creative flows and those days that leave you with a sense of accomplishment.\nSetting expectations To begin with, I want to first make clear that this strategy will not try to achieve an eight-hour day of total flow or focus. You will never get there, nor do you need to. Sure, you might have enjoyed that at the start of your career, but looking back, I think many of those hours working had really been learning your skills, so that what took eight hours then takes two hours now. This does not mean you have six hours to do more. But my goal is to help you find those two to four hours a day to once again have that feeling that you created something or completed something that really was the work you knew you had to do.\nWith this in mind, part of the work is figuring out how to manage those other hours you have in the day to consistently protect the hours you need to get your job done. One thing I think that has to be realized here is the \u0026ldquo;flow\u0026rdquo; that you might have experienced in the early years; hacking on code for eight hours a day is actually to your detriment today. Anyone working on a feature or project needs time to check out from \u0026ldquo;the flow\u0026rdquo; to make sure they are still on target. This \u0026ldquo;small batch\u0026rdquo; flow is key to pivot and not getting so attached to your work that you avoid change.\n In software organizations, the capability to work and deliver in small batches is especially important - Forsgren PhD, Nicole; Humble, Jez; Kim, Gene. Accelerate (p. 131)\n  Lean manufacturers discovered the benefits of small batches decades ago. - Ries, Eric. The Lean Startup: How Today\u0026rsquo;s Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses (p. 186).\n Scheduling Depending on your situation, there are different options here. Sometimes you are working on a feature with deadlines and have to get a certain amount of work done in a certain amount of time. But even then, you have to communicate with your boss about your progress or lack of it. Doing this in a scheduled manner can help you get lost in work and have one of those \u0026ldquo;wow, what happened to the day\u0026rdquo; moments not checking in with anyone to proactively give them a sense of the status of the work in progress. This puts you in the \u0026ldquo;offensive\u0026rdquo; mode by proactively giving reports about the status of the work being done. A manager should listen to your situation, and with your help, assess if an update should be given to the product owners. Also giving your team time to consider the overall timeline and not end up having to pull all-nighters just to create something that is a fraction of what it should have been.\n By creating a safer system of work, the value they created included fewer late night cram sessions, with more time to develop new, innovative features. - Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook (p. 137)\n To do this, break up your day into chunks ahead of time. For example, Monday, the first thing is to set up your calendar for all the times you need to get the work done for the week. For example, if you work better in the morning, protect that with your life. Need to take a walk in the day to get going again, schedule that in. You need to put this in a system so when you are asked if you can attend meeting x or y you can say \u0026ldquo;No\u0026rdquo; and then suggest options. Either way, part of being a professional is knowing what it takes to produce professional-level work. And staying up late at night when you are tired and worn out from a day of meetings will not produce that level of work ever.\n part of being a professional is knowing what it takes for you to produce professional-level work\n Again you are not blocking out six hours or four hours. Aim for small batches of forty-five-minute chunks. During that time, close all chat rooms, do not multitask (more on that shortly), close email, close Twitter, close all social networks, etc. Turn off phone notifications (you can typically set your phone to allow calls from people in your contact even when silenced). Then after this time is up, open all those up again, work comms especially and see if anything needs your attention. Or walk, stretch, do those other things that make you able to work well. For me, immediately after coming out of a 45-minute flow, I will write in my notepad (Evernote, Bear, Notes, whatever) what I was working on and where I left off; this way I can more easily get back into it after the check-in phase.\nSomething came up I must do it now? Those moments that you do come up for air and look at all the different communication channels and some things need your attention; what do you do? Well, each situation will vary, but here are some ways to assess and manage them.\nFirst, chat systems like Slack, Teams etc. are good tools, but sometimes you can save time by just taking a moment to do audio and if needed, video with the person making the request. Then you can talk with them about when do they really need this request to be taken care of. Sometimes just by having the moment of more personal communications, everyone can take a breath and truly assess how urgent the situation is.\nThen if it is something that truly needs to be done now, you should take a moment to look at your schedule. If there is something else due this week and you now no longer have time to do that, outside of working the weekend or late at night, and this person is your boss, let them know. Sometimes managers need to hear that cost to what they are asking. \u0026ldquo;If I do this today that that other feature can not get done till next week, and the chain effect goes on from there!\u0026rdquo;.\n Saying \u0026ldquo;Yes\u0026rdquo; to everything is not going to help anyone in the long run.\n Saying \u0026ldquo;Yes\u0026rdquo; to everything is not going to help anyone in the long run. As you are starting out, you may feel this is key to getting more work, or getting ahead, and honestly, it might be. Still, at some point, part of being a professional is knowing when the direction of the situation will have a negative impact on the project. This can be from you knowing you have to cut corners in the code or security or what not to get the other work done. Or knowing that you have to work late nights and weekends will lead to less quality work, and eventually, you will be burnt out. Come to think of it, most of my \u0026ldquo;oh carp moments, e.g. a deleted database, deleted application, destroyed server, etc., happened when I was tired and working late or lacked sleep.\nAnother thing to consider is that people on the other end of the request, once they understand how busy you are and know that you can give it your full attention at such a time, understand and be ok with you not doing it now. Ironically I was on the other end of this last week, assuming my important task would have been first on a colleague\u0026rsquo;s schedule. One video chat later reminded me he has a few other things on his immediate list to get to first, and I was reminded my request is not the only one on his plate.\nSecond, by actually asking when is this needed, you can see how it can fit into the schedule you already made for your week. One good way to do this is to say, \u0026ldquo;What is the latest this can get done\u0026rdquo; and then see how it fits into your schedule. Heck, you might have an opening tomorrow, and they want it next week, but you can just get it done. Because you took time to slot out your schedule, you can be more \u0026ldquo;offensive\u0026rdquo; in your scheduling than defensive and reacting to all the \u0026ldquo;newest\u0026rdquo; things coming in.\nSaying No Saying \u0026ldquo;No\u0026rdquo; or \u0026ldquo;Not now\u0026rdquo; for some might be hardest part of all of this, especially when we are coming up in your career. It may be scary since you want to be the go-to person the next time something important comes up. But saying no the right way means saying yes to the overall goal of a project, team, and company culture. You are saying \u0026ldquo;no\u0026rdquo; not because you do not want to do something but because you are actually saying \u0026ldquo;no\u0026rdquo; to some other item on your calendar by saying \u0026ldquo;yes\u0026rdquo; to this request. You are saying \u0026ldquo;no\u0026rdquo; to the quality of another feature down the line. Or you might be saying \u0026ldquo;no\u0026rdquo; to some training you had on your schedule for a month now. Or maybe saying \u0026ldquo;no\u0026rdquo; to technical-debt, or the personal time needed so you can remain healthy.\nOne immediate place to consider saying \u0026ldquo;no\u0026rdquo; to is meetings. Not to all meetings but ones you do not have to be in. I know it can feel nice at first to be asked to meetings, but many of them you really are not needed. Let\u0026rsquo;s say you have a standup every day and retro at the end of two weeks. Then you have a planning meeting as well that can be one to two hours long. Your day and week already have several scheduled meetings breaking it up. And after you put your 45-minute chunks on the calendar, you might not have a ton of other time for these impromptu meetings. So you can say no to those meetings, or if the meeting is needed, try to tie it to the end of another meeting, so you are not having two meetings breaking up your time.\nOr course sometimes the meeting is required and takes hours, again a manager needs to realize the cost of this. This meeting cost of getting a feature X done this week and feature Y next week! Do not assume they know this. And if that manager can not consider that cost or thinks you can just work the weekend, you really need to consider if this is the right team for you.\nWalk away from chat When will email go away for work communications now that most of it takes place in chat? Most of us are currently on some type of chat system for work, often trying to manage several conversations at once because we do not want to wait for the other person to write back. Sure chat is a very fantastic tool helping us more easily share information when a phone call or email would be too much or too slow, but it has its limits.\nAs mentioned above, the key to any of this is turning these things off, including chat when you start your focus time. In forty-five minutes flow, NOTHING is going to happen that you can not miss. Sure, you need to keep up with things but NOT every minute of the day and not five different things at once.\nWhen you are on your \u0026ldquo;chat\u0026rdquo; time, I would suggest knowing when it is best to turn a chat question into an audio call (video can sometimes depend on the situation). This can save you time waiting in the chat for someone to type back and prevent the complications from trying to explain something complex in chat.\nEven though, for me, there is sometimes a productivity buzz that comes popping around multiple chats \u0026ldquo;helping out.\u0026rdquo; But rarely does that last long or end up going well, from my experience. Either I lose momentum for the work I am supposed to be getting done, or before long, I get wires mixed in one chat vs. another and end up causing more work and confusion than I might have saved.\nToo much WIP Another common issue with saying \u0026ldquo;yes\u0026rdquo; to all things is you end up having too much work in progress or WIP. I will quote a couple of books about this to show that it is not a good place to be. Hopefully this will help you to see that in saying \u0026ldquo;No\u0026rdquo; you are preventing this condition from happening which is proven to lead to projects and teams failing.\n To enable fast and predictable lead times in any value stream there is usually a relentless focus on creating a smooth and even flow of work, using techniques such as small batch sizes, reducing work in process (WIP), preventing rework to ensure we don‚Äôt pass defects to downstream work centers, and constantly optimizing our system toward our global goals.- Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook (p. 53)\n  Small batch sizes result in less WIP, faster lead times, faster detection of errors, and less rework. - Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook (p. 69)\n  Almost every Lean Startup technique we‚Äôve discussed so far works its magic in two ways: by converting push methods to pull and reducing batch size. Both have the net effect of reducing WIP. - Ries, Eric. The Lean Startup: How Today\u0026rsquo;s Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses (p. 201)\n Embrace interruptions Part of this strategy is something it took me a while to realize, and maybe having a kid helped with this, you will be interrupted, and it will impact your focus; the question is how to minimize the impact. Be rigid enough that you create the space you need to get your work done, but at the same time be flexible enough to respond to these interruptions knowing that since you planned out your schedule, you can shift things around.¬†And if all the pieces do not fit, you can communicate to your boss what will be impacted, days before it becomes a \u0026ldquo;surprise.\u0026rdquo;\n Be rigid enough that you create the space you need to get your work done, but at the same time be flexible enough to respond to these interruptions\n As I noted above, I have a scratch pad that I jot down notes about \u0026ldquo;Where I left off\u0026rdquo; so I can jump back in after the call or break. Other than that, depending on the size of the interruption, you might need to adjust the rest of your schedule. Trying to make up the time rarely goes well, from my experience. Sure, you can sacrifice that lunch away from the desk or mid-day walk, but you are in a marathon, not a sprint.\nThe illusion of multitasking Ok, this is a tricky subject. So many people swear they can do this. So, for now, I will just talk to those who feel it is not working for them.\nI would point you to these books:\n Studies have shown that the time to complete even simple tasks, such as sorting geometric shapes, significantly degrades when multitasking. Of course, because our work in the technology value stream is far more cognitively complex than sorting geometric shapes, the effects of multitasking on process time is much worse. - Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook (pp. 65-66)\n  The truth is wholly the opposite in almost every circumstance, if neuroscience is to be believed. In study after study, we‚Äôve found that we are slower at completing tasks when we switch from one activity to another than we are when we simply repeat the same activity. In other words, if you shut down every tab of your browser, mute your phone, and close your email inbox, you‚Äôll finish the memo you‚Äôre writing in significantly less time. - Headlee, Celeste. Do Nothing (p. 95)\n  The truth is wholly the opposite in almost every circumstance, if neuroscience is to be believed. In study after study, we‚Äôve found that we are slower at completing tasks when we switch from one activity to another than we are when we simply repeat the same activity. In other words, if you shut down every tab of your browser, mute your phone, and close your email inbox, you‚Äôll finish the memo you‚Äôre writing in significantly less time. - Headlee, Celeste. Do Nothing (p. 95). Potter/Ten Speed/Harmony/Rodale. Kindle Edition.\n Summary I wrote this because it took me a while to really understand how important managing my schedule is. Hopefully, with the above information, you can start to see your day, week, and weeks adding up to getting \u0026ldquo;more\u0026rdquo; of the right things done both for work and for your career and health.¬†Feel free to join our Stratus Open Office hours if you have any questions or post on Yammer\u0026rsquo;s comments.\n","relPermalink":"/posts/scheduling/","summary":"How do we go on the \u0026ldquo;offensive\u0026rdquo; leaving behind what has only become a \u0026ldquo;defensive\u0026rdquo; effort to save our day from becoming unproductive?¬†Leaving us at the end of the day feeling like we need to make up some time after work or the weekend\n This post will be a look at how to manage your time in the midst of what can seem to be endless distractions and too many things needing to be done at once.","tags":["devops","day-to-day"],"title":"Being on Offense When it Comes to Day to Day Scheduling"},{"content":"Next time I needed this info, I just wanted to make sure that I have the links I need concerning the Accelerate book and Software Delivery Performance. So I will use this page to continue to add info about these resources.\nThe links below really are all related as the authors work together in the different books, videos and research papers.\nTL;DR The most critical link State of DevOps Reports\nAs they go into articles that are key to making a great team, a great culture, and a thriving company\n DevOps culture: Transformational leadership DevOps culture: Job satisfaction DevOps culture: Westrum organizational culture  And so much more.\nAccelerate Book First, the data supporting the following makes it all worth trying since it is not a leap of faith but trust in data. And if this data is correct, then along the way, we can avoid many of the pitfalls I have seen or been a part of in the day-to-day delivery of software. While at the same time creating a culture of learning and growing and inevitable success for the company.\nPurchase here\nThis book and it\u0026rsquo;s data lead into or supports a lot of the videos and books below.\n At the heart of this acceleration is software - Forsgren PhD, Nicole; Humble, Jez; Kim, Gene. Accelerate (p. 36). IT Revolution Press. Kindle Edition.\n Software Performance Measured With the above, we can measure the results of good habits. The outcome is not the metrics but just data to show how we are doing and what habits and systems we might need to practice or adjust.\n Working in small batches Releasing often to production Pain-free deployment Test coverage Automation (a key factor in many of the high and elite performing teams) Minimal change approval process A culture that learns from mistakes and does not punish Shift left on security Shift left on quality Work in Process Limits Customer Feedback  And more, that the developers can work on in their day to day reducing the focus on getting a feature done as quickly as possible, knowing that in the long run, they are building a better product and culture that will lead to their company\u0026rsquo;s long-term success and career.\nYearly Report Accelerate State of DevOps The above chart comes from https://cloud.google.com/devops/, but I have a shortcut to the PDF here\n Begin by focusing on the capabilities outlined in our research; they provide predictive guidelines to improve your technology delivery and deliver value. Start with foundations: Basic automation (such as version control and automated testing), monitoring, clear change approval processes, and a healthy culture.\n The Four Key Metrics (seen in the above report) The above SOD report talks about many different data points to consider; below, I am sharing the below to focus for a moment on these metrics that I think can, right now, help you begin to measure where you are and grow along the way.\nPage 18 of the report\nYou can read and try these for your team here\nOr use their opensource system to measure your own here\nCulture All these books and papers have a focus on culture, in the end a culture of Trust is the goal and without that none of this will work.\nThe chart that caught my attention is this one:\nThe goal is to build the Generative culture. This is the only way to run at the \u0026ldquo;Elite\u0026rdquo; speed since this has a realistic reaction failure which comes from trying new things, experimenting, and taking responsibility.\nAgain from what I see most of what is holding teams back is not the technology.\nROI Sign Up for Whitepaper\nThis one I am still wrapping my head around.\n Traditionally, IT has been viewed as a cost center and, as such, was expected to justify its costs and return on investment (ROI) upfront. However, IT done right is a value driver and innovation engine. Companies that fail to leverage the transformative, value-generating power of IT risk being disrupted by those who do. What has been missing is an analytical, data-driven framework to forecast the value and justify investment in DevOps transformations. This white paper helps to fill that gap. While the methodology is not exhaustive, it does outline important considerations.\n Maybe a few more reads, and I will come back with more quotes and links.\nVideos There are some great videos on YouTube by the authors. They continue to iterate their work and share the results at conferences.\nI am collecting a list here\nAlso, they give you a feel for how authentic these authors are in their efforts.\nThey come from the industry, they are not just speaking about theory, but they have seen the good and the bad.\nDevOps Hanbook This is my current read and it is full of both encouraging and discouraging information. Discouraging in that I wish I read it years ago since it would have been great information to have along the way. And encouraging in seeing how common the struggles are like stressful deployments to production, weekend work hours, focusing on costs over speed, outsourcing the wrong things etc.\nSome quotes I saved so far:\n ‚ÄúNordstrom started optimizing for speed instead of merely optimizing for cost.‚Äù ‚Äî The DevOps Handbook:: How to Create World-Class Agility, Reliability, and Security in Technology Organizations by Gene Kim, Jez Humble, et al. https://a.co/aA64V05\n  ‚Äú10 Deploys per Day‚Äù by John Allspaw and Paul Hammond, Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook: (p. 11). IT Revolution Press. Kindle Edition.\n Is not just for Flickr, I am part of a team of only 8 developers and we are averaging 4 deployments to production a day. The site has numerous users using it during those hours.\nLastly as seen in the quote below, allowing developers to perform using these methodologies leads to the success of the company.\n Furthermore, high performers were twice as likely to exceed profitability, market share, and productivity goals. And, for those organizations that provided a stock ticker symbol, we found that high performers had 50% higher market capitalization growth over three years. Kim, Gene; Humble, Jez; Debois, Patrick; Willis, John. The DevOps Handbook: (p. 37). IT Revolution Press. Kindle Edition.\n Continous Delivery Book This book is the one that kicked it off for me years ago, thanks to Rob Sherali. This book defines the technical how and why behind automating your delivery pipeline.\n Continuous Delivery Sounds Great, but Will It Work Here?: It\u0026rsquo;s not magic, it just requires continuous, daily improvement at all levels.\n here\n","relPermalink":"/posts/sod/","summary":"Next time I needed this info, I just wanted to make sure that I have the links I need concerning the Accelerate book and Software Delivery Performance. So I will use this page to continue to add info about these resources.\nThe links below really are all related as the authors work together in the different books, videos and research papers.\nTL;DR The most critical link State of DevOps Reports","tags":["devops","accelerate"],"title":"Ongoing: Links and Notes About DevOps Transformation Using the Accelerate Data and Strategies"},{"content":"Ok this is going to be a collection of notes to self.\nThis post does a good job of summing up some mock patterns with PyTest.\nI then had to mock the Snyk client which depended on the Requests library. I chose not to mock the requests library but the methods in the snyk library.\nThe thing was the method I mocked returned the \u0026ldquo;Response\u0026rdquo; object and I wanted to use the json() feature of that object/class to return the results.\n45 minutes later this worked.\n def test_get_week_of_scans(self, mocker): mocker.patch.object(SnykClient, 'post') response = Response() response.status_code = 200 response.reason = \u0026quot;OK\u0026quot; response.encoding = \u0026quot;utf-8\u0026quot; results = json.dumps({ \u0026quot;results\u0026quot;: [ { \u0026quot;count\u0026quot;: 1989 } ] }).encode('utf-8') response._content = results SnykClient.post.return_value = response client = SnykReport() results = client.get_report_for_current_week( \u0026quot;98873-8ecc-46f0-b077-39322abc4390\u0026quot;) assert results == 1989 I no longer hit their API and post returns the response I wanted.\n","relPermalink":"/posts/268/","summary":"Ok this is going to be a collection of notes to self.\nThis post does a good job of summing up some mock patterns with PyTest.\nI then had to mock the Snyk client which depended on the Requests library. I chose not to mock the requests library but the methods in the snyk library.\nThe thing was the method I mocked returned the \u0026ldquo;Response\u0026rdquo; object and I wanted to use the json() feature of that object/class to return the results.","tags":["python","testing","mocking","pytest"],"title":"Mocking, Python, Pytest"},{"content":"Greeting! This is an introduction post. This post tests the followings:\n Hero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file.  ","relPermalink":"/projects/introduction/","summary":"Greeting! This is an introduction post. This post tests the followings:\n Hero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file.  ","tags":null,"title":"Introduction"},{"content":"Yes this is try number 3. See here for the first 2 goes at it.\nWith WSL2 out and a great laptop I wanted to give this another try.\nMariaDB Even though the install is super simple see https://alfrednutile.info/posts/267\nI still end up having to do:\n$ sudo mysql -u root # I had to use \u0026quot;sudo\u0026quot; since is new installation\rmysql\u0026gt; USE mysql;\rmysql\u0026gt; UPDATE user SET plugin='mysql_native_password' WHERE User='root';\rmysql\u0026gt; FLUSH PRIVILEGES;\rmysql\u0026gt; exit;\r$ service mysql restart\rTo allow me to then use this command, for example maraidb -uroot -proot otherwise I have \u0026ldquo;Error connecting on localhost\u0026rdquo; type errors.\nIf using MySQL this worked really well here\nXdebug Using my previous notes in the above post and https://gcompagnon.github.io/wsl2/xdebug/vscode/php-fpm/2019/09/17/WSL2_php_VSCode_Xdebug.html\nI removed the reference to the host:\n[xdebug]\rxdebug.remote_enable=1\rxdebug.remote_autostart=1\rxdebug.remote_handler=dbgp\rxdebug.remote_port=9009\rxdebug.remote_log = /var/log/xdebug.log\rin Visual Code my launch.json ended up looking like this:\n{\r// Use IntelliSense to learn about possible attributes.\r// Hover to view descriptions of existing attributes.\r// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\r\u0026quot;version\u0026quot;: \u0026quot;0.2.0\u0026quot;,\r\u0026quot;configurations\u0026quot;: [\r{\r\u0026quot;name\u0026quot;: \u0026quot;Listen for XDebug\u0026quot;,\r\u0026quot;type\u0026quot;: \u0026quot;php\u0026quot;,\r\u0026quot;request\u0026quot;: \u0026quot;launch\u0026quot;,\r\u0026quot;hostname\u0026quot;: \u0026quot;0.0.0.0\u0026quot;, \u0026quot;port\u0026quot;: 9009\r},\r{\r\u0026quot;name\u0026quot;: \u0026quot;Launch currently open script\u0026quot;,\r\u0026quot;type\u0026quot;: \u0026quot;php\u0026quot;,\r\u0026quot;request\u0026quot;: \u0026quot;launch\u0026quot;,\r\u0026quot;program\u0026quot;: \u0026quot;${file}\u0026quot;,\r\u0026quot;hostname\u0026quot;: \u0026quot;0.0.0.0\u0026quot;, \u0026quot;cwd\u0026quot;: \u0026quot;${fileDirname}\u0026quot;,\r\u0026quot;port\u0026quot;: 9009\r}\r]\r}\r","relPermalink":"/posts/267/","summary":"Yes this is try number 3. See here for the first 2 goes at it.\nWith WSL2 out and a great laptop I wanted to give this another try.\nMariaDB Even though the install is super simple see https://alfrednutile.info/posts/267\nI still end up having to do:\n$ sudo mysql -u root # I had to use \u0026quot;sudo\u0026quot; since is new installation\rmysql\u0026gt; USE mysql;\rmysql\u0026gt; UPDATE user SET plugin='mysql_native_password' WHERE User='root';\rmysql\u0026gt; FLUSH PRIVILEGES;\rmysql\u0026gt; exit;\r$ service mysql restart\rTo allow me to then use this command, for example maraidb -uroot -proot otherwise I have \u0026ldquo;Error connecting on localhost\u0026rdquo; type errors.","tags":["windows","linux","wsl","php"],"title":"Windows Dev Box Try 3 2020"},{"content":"Just a quick note to self about ALB and Lambda. When using Lambda behind and ALB for routing your response has to be formatted properly else you will get a 502.\nhttps://pypi.org/project/alb-response/ solved this problem.\nfrom alb_response import alb_response\rdef lambda_handler(event, context):\rresponse_dict = process_the_event(event)\rreturn alb_response(\rhttp_status=200,\rjson=response_dict,\ris_base64_encoded=False,\r)\rThe results are easy enough to do by hand but I had a bit of time really finding out the format to respond with other than JavaScript and that casing there was a bit confusing.\n","relPermalink":"/posts/266/","summary":"Just a quick note to self about ALB and Lambda. When using Lambda behind and ALB for routing your response has to be formatted properly else you will get a 502.\nhttps://pypi.org/project/alb-response/ solved this problem.\nfrom alb_response import alb_response\rdef lambda_handler(event, context):\rresponse_dict = process_the_event(event)\rreturn alb_response(\rhttp_status=200,\rjson=response_dict,\ris_base64_encoded=False,\r)\rThe results are easy enough to do by hand but I had a bit of time really finding out the format to respond with other than JavaScript and that casing there was a bit confusing.","tags":["aws","serverless","note2self"],"title":"Using Python Lambda behind and ALB"},{"content":" I\u0026rsquo;m not a great programmer; I\u0026rsquo;m just a good programmer with great habits - Kent Beck.\n Behind any project there has to be a processes in place to build a culture of good coding habits for developers and a process to help \u0026ldquo;enforce\u0026rdquo; it. Without such a foundation in place the product will never result into a long term sustainable solution. Below are some items I would like to highlight that I believe can help make a solid application and grow a solid team.\nTraining and an Introduction to Our Coding Culture The first two points are not easily automated. Training is key to a successful application. Developers cannot just jump in and deliver features they first must have time to learn what is expected of them when it comes to the day to day team and culture they are becoming a part of.\nFor one, they need time to read the teams documentation so they get a sense of what is expected of them. For example, they are expected to push code often to their branch to have other developers on their teams to review it instead of the more common assumption of pushing days and days of work all at once and hoping it goes to staging moments after that.\nThen they need a few days, at least, to shadow or pair with another developer. This helps to learn a lot about the \u0026ldquo;culture\u0026rdquo; of our process. They get to see how seasoned developers take on a task, set up their work environment, and more. This helps them to build confidence in knowing what the rythym of their day to day should look like.\nGitHub and the Pull Request Workflow All developers, new and seasoned, have to have their code reviewed before it can be merged into the master branch. This process helps the new developer to grow in understanding that can only come from doing. But even seasoned developers learn from this and more importantly have a second set of eyes to catch any issues.\n When you actually sit down to write some code, you learn things that you didn‚Äôt get from thinking about them in modeling terms‚Ä¶there is a feedback process there that you can only really get at from executing some things and seeing what works - Martin Fowl\n This is a daily process and we strive to review small batches of code not waiting till the feature is \u0026ldquo;ready\u0026rdquo;.\nYes, this slows down the process of getting code to staging but it speeds up the long term development, stability and flexibility of any application by making sure the foundation is solid and all of the adjoining features fit well together.\nLearning how to Quote Features  We code in the context of our ability to quote a task - Alfred Nutile\n This one means a lot to me and without this skill, all these other goals come under the undue pressure of time.\nThere are numerous skills we introduce to help with this task. One of them is keeping in mind that anything quoted is not just a new feature but it is part of a bigger application, and it always takes time to fit that into place.\nLastly, there is the concept of \u0026ldquo;done done\u0026rdquo; and all the aspects of what that means. A feature has to have tests in place, architectural reference documents, etc. All these things have to be part of the quote.\nTravis CI and Test Coverage  First, starting with a test means that we have to describe what we want to achieve before we consider how. - Growing Object Oriented Software\n Another key aspect of our workflow is tests come first. We do not do TDD (Test Drive Development) per se, but we do testing that guides our code. It does not happen after the code and TravisCI will fail the build if the coverage drops below 70%.\nWe are also not aiming for 100% coverage. We are aiming for enough that we can move forward with confidence with what we are coding but also change with confidence when the business needs change.\nTravis CI and our built-in Quality Checker Our Travis build system uses an Open-Source tool called PhpMetrics for measuring the \u0026ldquo;quality\u0026rdquo; of the code. Of course, the definition of quality code can easily be debated but in this case, we need to unify around something so we can make apps that are consistent for many reasons.\nFor one, developers from other teams or support can come in and have confidence that the code base is not full of hard to read functions, huge classes or other patterns that make the application harder to support, update or scale.\nWe focus on just four of the many metrics and by using data from a number of our previous applications, we found a median that keeps out of the way for the most part. And when it does block a build there are docs to help understand the issue and tidy up the code to pass these metrics.\nThe ones we focus on are, you can learn more at their site which I link in the bottom of this:\n Bugs Difficulty Afferent Coupling Efferent Coupling  Travis CI and Static Analysis Finally, we run an Open-Source tool call PHPStan.\n PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code.\n This is just one more layer of automation to make sure all our code follows a certain level of coding patterns and standards. On top of that, it catches issues that our tests did not see or cover helping us fix bugs that otherwise would have been found in production.\nSo with these processes, and more to come, teams using Cloud Application Platform can build applications that scale without sacrificing security, speed, and quality. Also, do I believe these processes can create better developers.\nLinks  https://phpmetrics.org/ https://github.com/phpstan/phpstan https://travis-ci.com/ https://github.com/nunomaduro/larastan https://datasift.github.io/gitflow/IntroducingGitFlow.html https://medium.com/@alnutile/we-code-in-the-context-of-our-quoting-dab391fe0881  ","relPermalink":"/posts/265/","summary":"I\u0026rsquo;m not a great programmer; I\u0026rsquo;m just a good programmer with great habits - Kent Beck.\n Behind any project there has to be a processes in place to build a culture of good coding habits for developers and a process to help \u0026ldquo;enforce\u0026rdquo; it. Without such a foundation in place the product will never result into a long term sustainable solution. Below are some items I would like to highlight that I believe can help make a solid application and grow a solid team.","tags":["team","coding standards"],"title":"Suggestions Around Building a Good Development Team in Parallel to Building a Good Product"},{"content":"@WIP\nTaking advantage of a running Lambda function and it\u0026rsquo;s state https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/ under the section Lambda function has a nice \u0026ldquo;trick\u0026rdquo; of setting above the class app = None\nthen later on it will see if that is set\ndef lambda_handler(event, context):\rglobal app\r# Initialize app if it doesn't yet exist\rif app is None:\rprint(\u0026quot;Loading config and creating new MyApp...\u0026quot;)\rconfig = load_config(full_config_path)\rapp = MyApp(config)\rreturn \u0026quot;MyApp config is \u0026quot; + str(app.get_config()._sections)\rIf it is set it will not try to set it again but take advantage of the state and use it.\nKeep Warm https://read.acloud.guru/how-to-keep-your-lambda-functions-warm-9d7e1aa6e2f0\nYou can set a bunch of schedulers and your Lambda function can check for the context of the request. If it is a scheduler event then just reply OK otherwise it should do what it normally would do.\nimport boto3\rfrom config import Config\rclass KeepAwake:\rdef __init__(self):\r\u0026quot;\u0026quot;\u0026quot; keey awake \u0026quot;\u0026quot;\u0026quot;\rself.config = Config()\rself.region = self.config.region\rself.app_env = self.config.app_env\rself.client = boto3.client('lambda', region_name=self.region)\rself.functions = [\r\u0026quot;foo\u0026quot;,\r\u0026quot;bar\u0026quot;,\r]\rdef run(self):\r\u0026quot;\u0026quot;\u0026quot; interate over lambda functions \u0026quot;\u0026quot;\u0026quot;\rfor lam in self.functions:\rprint(\u0026quot;Invoking \u0026quot;, lam)\rself.client.invoke(\rFunctionName=lam,\rInvocationType=\u0026quot;Event\u0026quot;\r)\rprint(\u0026quot;Invoked \u0026quot;, lam)\rIs another way to look around and call those functions.\n","relPermalink":"/posts/264/","summary":"@WIP\nTaking advantage of a running Lambda function and it\u0026rsquo;s state https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/ under the section Lambda function has a nice \u0026ldquo;trick\u0026rdquo; of setting above the class app = None\nthen later on it will see if that is set\ndef lambda_handler(event, context):\rglobal app\r# Initialize app if it doesn't yet exist\rif app is None:\rprint(\u0026quot;Loading config and creating new MyApp...\u0026quot;)\rconfig = load_config(full_config_path)\rapp = MyApp(config)\rreturn \u0026quot;MyApp config is \u0026quot; + str(app.","tags":["note2self","aws","python"],"title":"Lambda Tips"},{"content":"Serious note to self.\nI wanted to mock the Github module for python.\nMy simple class will get the ID of the team.\nfrom github import Github, Team\rfrom dotenv import load_dotenv\rimport os\rimport sys\rimport json\rclass GetTeamId:\rdef __init__(self):\rload_dotenv()\rself.team_id = 5555\rself.token = os.environ.get(\u0026quot;GITHUB_TOKEN\u0026quot;)\rself.client = Github(self.token)\rself.org = self.client.get_organization('FooBar')\rdef handle(self, team_name):\rteams = self.org.get_teams()\rfor team in teams:\rif team_name == team.name:\rprint(\u0026quot;Team id\u0026quot;, team.id)\rreturn team.id\rif __name__ == \u0026quot;__main__\u0026quot;:\rclient = GetTeamId()\rteam = sys.argv[1]\rprint(\u0026quot;Going to get team\u0026quot;, team)\rclient.handle(team)\rBut I need test coverage on this so I made this test.\nfrom unittest import TestCase\rimport unittest\rfrom unittest.mock import patch, Mock\rimport json\rfrom src.get_team_id import GetTeamId\rclass Team:\rdef __init__(self):\rself.id = 4444444\rself.name = \u0026quot;foo-team\u0026quot;\rclass TestGetTeamId(TestCase):\r@patch(\u0026quot;src.get_team_id.Github.get_organization\u0026quot;)\rdef test_can_get_id(self, mock_github):\rmock_github.return_value.get_teams.return_value = [\rTeam()\r]\rclient = GetTeamId()\rresults = client.handle(\u0026quot;foo-team\u0026quot;) self.assertEqual(4444444, results)\rKnow how long that took!\nExample Two Mocking JIRA:\nfrom unittest import TestCase\rimport unittest\rfrom unittest.mock import patch, Mock\rimport json\rfrom src.jira_ticket import JiraTicket\rclass TestJiraCreateTicket(TestCase):\r@patch(\u0026quot;src.jira_ticket.JIRA.create_issue\u0026quot;)\rdef test_can_make_ticket(self, mock_jira):\rmock_jira.return_value.create_issue.return_value.update.return_value = True\rclient = JiraTicket()\rtitle = \u0026quot;(RENOVATE PR OPEN) Update dependency @ionic/core to v4.6.0 292416206\u0026quot;\rproject = \u0026quot;PENG\u0026quot;\rmessage = \u0026quot;\\nTitle: Foo Bar\\nIssue Url: https://boo.baz\\nState: open\\n\u0026quot;\rlabel = \u0026quot;renovate\u0026quot;\rclient.create_ticket(title, message, project, label)\rmock_jira.assert_called_once()\rand the class:\nimport json\rfrom dotenv import load_dotenv\rfrom collections import Counter\rfrom jira import JIRA\rimport os\rclass JiraTicket:\rdef __init__(self):\rself.jira = None\rself.auth()\rdef auth(self):\rload_dotenv()\rusername = os.getenv(\u0026quot;JIRA_USERNAME\u0026quot;)\rpassword = os.getenv(\u0026quot;JIRA_PASSWORD\u0026quot;)\rself.jira = JIRA(server=\u0026quot;https://foo.atlassian.net\u0026quot;,\rbasic_auth=(username, password))\rdef handle(self, title, message=None, label=None, project=\u0026quot;FOO\u0026quot;):\r\u0026quot;\u0026quot;\u0026quot; see if exists if does update \u0026quot;\u0026quot;\u0026quot;\rdef see_if_exists(self, title, project):\rresults = self.jira.search_issues(\u0026quot;title ~ \\\u0026quot;%s\\\u0026quot; and project= \\\u0026quot;%s\\\u0026quot;\u0026quot; % (title, project))\rif len(results) \u0026gt; 0:\rfor issue in results:\rprint(issue)\rreturn False\rGood reads  https://docs.python.org/3/library/unittest.mock.html https://www.toptal.com/python/an-introduction-to-mocking-in-python https://medium.com/@yeraydiazdiaz/what-the-mock-cheatsheet-mocking-in-python-6a71db997832  ","relPermalink":"/posts/263/","summary":"Serious note to self.\nI wanted to mock the Github module for python.\nMy simple class will get the ID of the team.\nfrom github import Github, Team\rfrom dotenv import load_dotenv\rimport os\rimport sys\rimport json\rclass GetTeamId:\rdef __init__(self):\rload_dotenv()\rself.team_id = 5555\rself.token = os.environ.get(\u0026quot;GITHUB_TOKEN\u0026quot;)\rself.client = Github(self.token)\rself.org = self.client.get_organization('FooBar')\rdef handle(self, team_name):\rteams = self.org.get_teams()\rfor team in teams:\rif team_name == team.name:\rprint(\u0026quot;Team id\u0026quot;, team.","tags":["python","mocking","tdd","unittest"],"title":"Mocking in Python"},{"content":" UPDATE: PHP 8 and Xdebug 3 2021.07.18\n Ok this took a bit since the Xdebug site talks about arch -x86_64 sudo pecl install xdebug which did not work.\nI just did the normal\nsudo pecl install xdebug Then I edit the addition it made:\n/opt/homebrew/etc/php/8.0/php.ini\nzend_extension=\u0026#34;xdebug.so\u0026#34; xdebug.mode = debug xdebug.start_with_request = yes I moved it all to the bottom of the file too. The docs talk about OPCache but not sure this really helped.\nAnyways after this and a PHP restart (see below) it all worked.\nI ran valet restart since I am using that for PHP.\nThen ran php -v to see\nPHP 8.0.8 (cli) (built: Jul 12 2021 02:58:53) ( NTS ) Copyright (c) The PHP Group Zend Engine v4.0.8, Copyright (c) Zend Technologies with Xdebug v3.0.4, Copyright (c) 2002-2021, by Derick Rethans with Zend OPcache v8.0.8, Copyright (c), by Zend Technologies And my launch.json for VSCode is\n{ // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 \u0026#34;version\u0026#34;: \u0026#34;0.2.0\u0026#34;, \u0026#34;configurations\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Listen for Xdebug\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;php\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;launch\u0026#34;, \u0026#34;port\u0026#34;: 9003 }, { \u0026#34;name\u0026#34;: \u0026#34;Launch currently open script\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;php\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;launch\u0026#34;, \u0026#34;program\u0026#34;: \u0026#34;${file}\u0026#34;, \u0026#34;cwd\u0026#34;: \u0026#34;${fileDirname}\u0026#34;, \u0026#34;port\u0026#34;: 0, \u0026#34;runtimeArgs\u0026#34;: [ \u0026#34;-dxdebug.start_with_request=yes\u0026#34; ], \u0026#34;env\u0026#34;: { \u0026#34;XDEBUG_MODE\u0026#34;: \u0026#34;debug,develop\u0026#34;, \u0026#34;XDEBUG_CONFIG\u0026#34;: \u0026#34;client_port=${port}\u0026#34; } }, { \u0026#34;name\u0026#34;: \u0026#34;Launch Built-in web server\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;php\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;launch\u0026#34;, \u0026#34;runtimeArgs\u0026#34;: [ \u0026#34;-dxdebug.mode=debug\u0026#34;, \u0026#34;-dxdebug.start_with_request=yes\u0026#34;, \u0026#34;-S\u0026#34;, \u0026#34;localhost:0\u0026#34; ], \u0026#34;program\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;cwd\u0026#34;: \u0026#34;${workspaceRoot}\u0026#34;, \u0026#34;port\u0026#34;: 9003, \u0026#34;serverReadyAction\u0026#34;: { \u0026#34;pattern\u0026#34;: \u0026#34;Development Server \\\\(http://localhost:([0-9]+)\\\\) started\u0026#34;, \u0026#34;uriFormat\u0026#34;: \u0026#34;http://localhost:%s\u0026#34;, \u0026#34;action\u0026#34;: \u0026#34;openExternally\u0026#34; } } ] }  UPDATE: PHP 7.4 Every time I do value use php I then lose my xdebug setup :( here is me taking a moment to stop having that happen\n vim /usr/local/etc/php/7.4/php.ini\rThen add this\n[PHP]\rzend_extension=\u0026quot;xdebug.so\u0026quot;\rxdebug.remote_enable = 1\rxdebug.remote_autostart = 1\rxdebug.remote_handler = dbgp\rxdebug.remote_host = 127.0.0.1\rxdebug.remote_port = 9000\rxdebug.remote_mode = req\rAnd then I am set again! Notice I am using 9000 above my insanity of using 9005 below has passed\nI put two files in my home directory, one starts with the above and one does not. Then I put this alias into my ~/.zshrc\nalias debug_on=\u0026quot;cp ~/Code/php.ini.debugon /usr/local/etc/php/7.4/php.ini\u0026quot;\ralias debug_off=\u0026quot;cp ~/Code/php.ini.debugoff /usr/local/etc/php/7.4/php.ini\u0026quot;\rsource ~/.zshrc\nand now I can easily turn this on and off to save TONS of time with any php job (testing, etc)\n END UPDATE\n This article got me going on using Xdebug https://tighten.co/blog/configure-vscode-to-debug-phpunit-tests-with-xdebug\nBut since 7.2 it has been tricky on the Mac.\npecl install xdebug\rThen vim /usr/local/etc/php/7.2/php.ini\nAnd remove from there any reference to xdebug.so\nThen /usr/local/etc/php/7.2/conf.d/ext-xdebug.ini\n[xdebug]\rzend_extension=\u0026quot;xdebug.so\u0026quot;\rxdebug.remote_autostart=1\rxdebug.remote_port=9005\rxdebug.remote_enable=1\rxdebug.profiler_enable=1\rxdebug.profiler_output_dir=\u0026quot;/Users/alfrednutile/xdebugtmp/\u0026quot;\rand restart the services\nbrew services restart php72 You should be able to run php --ini at the command line.\n\u0026gt;php --ini\rConfiguration File (php.ini) Path: /usr/local/etc/php/7.2\rLoaded Configuration File: /usr/local/etc/php/7.2/php.ini\rScan for additional .ini files in: /usr/local/etc/php/7.2/conf.d\rAdditional .ini files parsed: /usr/local/etc/php/7.2/conf.d/ext-opcache.ini,\r/usr/local/etc/php/7.2/conf.d/ext-xdebug.ini,\r/usr/local/etc/php/7.2/conf.d/php-memory-limits.ini\rVisual Code\u0026rsquo;s xdebug launch.json looks like:\n{\r\u0026quot;version\u0026quot;: \u0026quot;0.2.0\u0026quot;,\r\u0026quot;configurations\u0026quot;: [{\r\u0026quot;name\u0026quot;: \u0026quot;Listen for XDebug\u0026quot;,\r\u0026quot;type\u0026quot;: \u0026quot;php\u0026quot;,\r\u0026quot;request\u0026quot;: \u0026quot;launch\u0026quot;,\r\u0026quot;port\u0026quot;: 9005\r},\r{\r\u0026quot;name\u0026quot;: \u0026quot;Launch currently open script\u0026quot;,\r\u0026quot;type\u0026quot;: \u0026quot;php\u0026quot;,\r\u0026quot;request\u0026quot;: \u0026quot;launch\u0026quot;,\r\u0026quot;program\u0026quot;: \u0026quot;${file}\u0026quot;,\r\u0026quot;cwd\u0026quot;: \u0026quot;${fileDirname}\u0026quot;,\r\u0026quot;port\u0026quot;: 9005\r}\r]\r}\r","relPermalink":"/posts/262/","summary":"UPDATE: PHP 8 and Xdebug 3 2021.07.18\n Ok this took a bit since the Xdebug site talks about arch -x86_64 sudo pecl install xdebug which did not work.\nI just did the normal\nsudo pecl install xdebug Then I edit the addition it made:\n/opt/homebrew/etc/php/8.0/php.ini\nzend_extension=\u0026#34;xdebug.so\u0026#34; xdebug.mode = debug xdebug.start_with_request = yes I moved it all to the bottom of the file too. The docs talk about OPCache but not sure this really helped.","tags":["php","xdebug"],"title":"PHP Xdebug Visual Code"},{"content":"make your App Client\nMake sure to check\nMake some scopes uner Resource Server\nThen \u0026ldquo;App Client Settings\u0026rdquo;\nConnect it to \u0026ldquo;Cognito User Pool\u0026rdquo;\nAnd choose \u0026ldquo;Client Credentials\u0026rdquo; from \u0026ldquo;Allowed OAuth Flow\u0026rdquo; choosing some scopes\n","relPermalink":"/posts/261/","summary":"make your App Client\nMake sure to check\nMake some scopes uner Resource Server\nThen \u0026ldquo;App Client Settings\u0026rdquo;\nConnect it to \u0026ldquo;Cognito User Pool\u0026rdquo;\nAnd choose \u0026ldquo;Client Credentials\u0026rdquo; from \u0026ldquo;Allowed OAuth Flow\u0026rdquo; choosing some scopes","tags":["aws","cognito","laravel"],"title":"Cognito and OAuth"},{"content":"PHPUnit CodeCoverage PHPUnit CodeCoverage\nThere is a ton of information about your code PHPUNit CodeCoverage can provide. At the root just making sure your coverage is at a certain level and if not where is it lacking.\nWith it\u0026rsquo;s xml output I use a script found here to check during our TravisCI builds if the code is meeting a required level.\nHere is a gist of that script here and here is the .travis.yml section snippet that will run the coverage generating test and then review it for percentage of coverage.\nscript:\r- vendor/bin/phpcs --standard=psr2 app/\r- set -e\r- vendor/bin/phpunit --coverage-clover clover.xml --stop-on-failure --testsuite=Unit,Feature\r- php ./coverage-checker.php clover.xml 70\rThis is what we run in Travis to review the coverage, if it is below 70% it will fail.\n If your unit tests cover 100% of your code, you\u0026rsquo;re doing it wrong. Just my 2 cts. - Fabien Potencier\n Setting Up This can be tricky you need Xdebug in place else you might get \u0026ldquo;Coverage driver missing\u0026rdquo; errors.\nOnce ready you need to update your phpunit.xml here is my example:\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\r\u0026lt;phpunit /// left out some area for brevity\r\u0026lt;testsuites\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Unit\u0026quot;\u0026gt;\r\u0026lt;directory suffix=\u0026quot;Test.php\u0026quot;\u0026gt;./tests/Unit\u0026lt;/directory\u0026gt;\r\u0026lt;/testsuite\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Feature\u0026quot;\u0026gt;\r\u0026lt;directory suffix=\u0026quot;Test.php\u0026quot;\u0026gt;./tests/Feature\u0026lt;/directory\u0026gt;\r\u0026lt;/testsuite\u0026gt;\r\u0026lt;/testsuites\u0026gt;\r\u0026lt;filter\u0026gt;\r\u0026lt;whitelist processUncoveredFilesFromWhitelist=\u0026quot;true\u0026quot;\u0026gt;\r\u0026lt;directory suffix=\u0026quot;.php\u0026quot;\u0026gt;./app\u0026lt;/directory\u0026gt;\r\u0026lt;exclude\u0026gt;\r\u0026lt;directory suffix=\u0026quot;.php\u0026quot;\u0026gt;app/Http/Controllers/Auth\u0026lt;/directory\u0026gt;\r\u0026lt;file\u0026gt;app/Console/Commands/SetupDeploymentCommand.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Console/Kernel.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Kernel.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Providers/AppServiceProvider.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Providers/AuthServiceProvider.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Providers/EventServiceProvider.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Providers/BroadcastServiceProvider.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Providers/RouteServiceProvider.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Controllers/Controller.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Exceptions/Handler.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Middleware/Authenticate.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Middleware/EncryptCookies.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Middleware/RedirectIfAuthenticated.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Middleware/TrimStrings.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Middleware/TrustProxies.php\u0026lt;/file\u0026gt;\r\u0026lt;file\u0026gt;app/Http/Middleware/VerifyCsrfToken.php\u0026lt;/file\u0026gt;\r\u0026lt;/exclude\u0026gt;\r\u0026lt;/whitelist\u0026gt;\r\u0026lt;/filter\u0026gt;\r/// left out some area for brevity\r\u0026lt;/phpunit\u0026gt;\rAbove I setup filter to exclude a bunch of Laravel files I do not want to maintain.\nRunning the Command vendor/bin/phpunit --coverage-clover clover.xml --stop-on-failure --coverage-html=build\rThis will output the clover.xml and make a folder called build make sure to include that in your .gitignore\nOn my Mac, when done, I just type open build/index.html and I go to a page like this\nExploring As seen above I get a list of all my classes and how the coverage is on each them. It gets even better from here.\nClass Level So you are wondering why a class is missing coverage? Click on the Class folder and start to dig in.\nMaybe it finds something you forgot or maybe it is fussing about a bit of code you know you tested?\nIn this example it could be either. So I have two main options.\nAnnotate the test Let\u0026rsquo;s say I have a Controller level test that is testing this:\n /**\r* @covers App\\Http\\Controllers\\AdminController::index\r*/\rpublic function testWorksAsAdmin()\r{\r$user = factory(\\App\\User::class)-\u0026gt;states('admin')-\u0026gt;create();\r$this-\u0026gt;be($user);\r$this-\u0026gt;get(\u0026quot;/admin\u0026quot;)-\u0026gt;assertStatus(200)-\u0026gt;assertSee(\u0026quot;Show user\u0026quot;);\r}\r/**\r* @covers App\\Http\\Controllers\\AdminController::index\r*/\rpublic function testWorksAsNonAdmin()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$this-\u0026gt;be($user);\r$this-\u0026gt;get(\u0026quot;/admin\u0026quot;)-\u0026gt;assertStatus(302);\r}\rYou can see I specifically tell PHPUnit CodeCoverage that this controller tests are testing this area. But I do not let it know about the MiddleWare so I could do:\n /**\r* @covers App\\Http\\Controllers\\AdminController::index\r* @covers App\\Http\\Controllers\\AdminController::__constructor\r*/\rpublic function testWorksAsAdmin()\r{\r$user = factory(\\App\\User::class)-\u0026gt;states('admin')-\u0026gt;create();\r$this-\u0026gt;be($user);\r$this-\u0026gt;get(\u0026quot;/admin\u0026quot;)-\u0026gt;assertStatus(200)-\u0026gt;assertSee(\u0026quot;Show user\u0026quot;);\r}\r/**\r* @covers App\\Http\\Controllers\\AdminController::index\r* @covers App\\Http\\Controllers\\AdminController::__constructor\r*/\rpublic function testWorksAsNonAdmin()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$this-\u0026gt;be($user);\r$this-\u0026gt;get(\u0026quot;/admin\u0026quot;)-\u0026gt;assertStatus(302);\r}\rThen run the test command again and:\nAnnotate the Class In the above I could have just done this:\n /**\r* @codeCoverageIgnore\r*/\rpublic function __construct()\r{\r$this-\u0026gt;middleware('admin_only')-\u0026gt;only(\u0026quot;index\u0026quot;);\r}\rAnd that is fine, as long as you know that middleware is tested in it\u0026rsquo;s own area.\nExceptions I tend to do try/catch in my controllers to clearly react to an issue and respond to a user\u0026rsquo;s request but this can show in PHPUnit Coverage as a non tested section of code.\nAll I need to do is add a test for that.\n /**\r* @covers App\\Http\\Controllers\\AdminController::index\r* @covers App\\Http\\Controllers\\AdminController::__constructor\r* @expectedException \\Exception\r*/\rpublic function testWorksAsNonAdmin()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$this-\u0026gt;be($user);\r$this-\u0026gt;get(\u0026quot;/admin\u0026quot;)-\u0026gt;assertStatus(422);\r}\rDashboard This is where some other nice info is surfaced about your code.\nShould bring you to this layout\nThe CRAP rating is \u0026ldquo;interesting\u0026rdquo; you can read more about it here since I do not fully understand it myself but imo it comes down not to 100% coverage but:\n Keep classes small and focused Keep classed down to 1 public method, even Controllers letting other protected/private methods do the work Test the class for message in and message out   \u0026ldquo;You don\u0026rsquo;t send messages because you have objects, you have objects because you send messages - Sandi Metz Poodr Book\u0026rdquo;\n Helpers Two other tools to compliment that above\nPHPMetrics This tool http://www.phpmetrics.org/ can easily be setup and run showing more details about your classes and their state of \u0026ldquo;complexity\u0026rdquo; etc.\nLaraStan This tool https://github.com/nunomaduro/larastan when it does not go overboard in it\u0026rsquo;s reading your code (set it to a low level) can do a good job of finding issues in your code that you did not find in your tests. It runs over your code including exceptions you did not cover in your tests etc. Really does find some interesting things.\n","relPermalink":"/posts/260/","summary":"PHPUnit CodeCoverage PHPUnit CodeCoverage\nThere is a ton of information about your code PHPUNit CodeCoverage can provide. At the root just making sure your coverage is at a certain level and if not where is it lacking.\nWith it\u0026rsquo;s xml output I use a script found here to check during our TravisCI builds if the code is meeting a required level.\nHere is a gist of that script here and here is the .","tags":["laravel","testing","phpunit"],"title":"PHPUnit CodeCoverage"},{"content":"Just some notes on the process. This will show how to deploy both a Staging build and then Production.\nStaging Staging is done by TravisCI after all tests pass\nHere is the gist of it the deploy step calls to a bash file.\ndeploy:\rskip_cleanup: true\rprovider: script\rscript: bash deploy/travis_deploy.sh\ron:\rbranch: mainline\rThen\n#!/usr/bin/env bash\r# Bail out on first error\rset -e\r## Get the directory of the build script\rDIR=\u0026quot;$( cd \u0026quot;$( dirname \u0026quot;${BASH_SOURCE[0]}\u0026quot; )\u0026quot; \u0026amp;\u0026amp; pwd )\u0026quot;\r## Get the current git commit sha\rHASH=$(git rev-parse HEAD)\r## Get any secret files\raws s3 cp s3://foo/environments/$STACK_ENV_FILE $DIR/app/packaged/.env\r##we only want non-dev vendors\rcomposer config -g github-oauth.github.com $GITHUB_TOKEN \u0026amp;\u0026amp; composer install --no-dev\recho \u0026quot;Region $STACK_AWS_REGION is the target region\u0026quot;\reval $(aws ecr get-login --no-include-email --region $STACK_AWS_REGION)\recho \u0026quot;Tagging images $STACK_APP_NAME\u0026quot;\rdocker build --pull -t $STACK_APP_NAME .\rdocker tag $STACK_APP_NAME:latest 1111111111.dkr.ecr.$STACK_AWS_REGION.amazonaws.com/$STACK_APP_NAME:latest\recho \u0026quot;Pushing up image $STACK_APP_NAME:latest\u0026quot;\rdocker push 1111111111.dkr.ecr.us-east-1.amazonaws.com/$STACK_APP_NAME:latest\r## Now Run again for Production WILL COME BACK TO THIS IN A MOMENT\r## if production set???\rif [[ \u0026quot;$STACK_ENV_FILE_PRODUCTION\u0026quot; ]]; then\recho \u0026quot;Running Production build\u0026quot;\raws s3 cp s3://foo/environments/$STACK_ENV_FILE_PRODUCTION $DIR/app/packaged/.env\recho \u0026quot;Building Production Image\u0026quot;\rdocker build --pull -t $STACK_APP_NAME .\rdocker tag $STACK_APP_NAME:latest 1111111111.dkr.ecr.us-east-1.amazonaws.com/$STACK_APP_NAME:production_$HASH\recho \u0026quot;Pushing up production image using has production_$HASH\u0026quot;\rdocker push 1111111111.dkr.ecr.us-east-1.amazonaws.com/$STACK_APP_NAME:production_$HASH\rfi\rSo Staging will build and push right to the AWS ECR which means Fargate by default will get the Latest tagged image since the TaskDefinition says so. So staging is done. Next task will run this one.\nProduction This we want to happen by choice not by Travis. So you can see the step in Travis STACK_ENV_FILE_PRODUCTION that looks for an environment variable and if true it will push the same working image but with it\u0026rsquo;s own secrets to ECR but with the tag production_GIT_HASH\nThen we ready we have a UI to push it BUT really it is just CloudFormation that updates the TaskDefinition using the build in Params to make it reference this HASH. This can be done pretty easily with Python, PHP etc and the AWS SDK that allows you to update CloudFormation and the Parameter that then fills in the TaskDefinition Field and updates it, from there the next time the Production Fargate runs it runs that latest version.\nExample Task Definition:\n \u0026quot;TaskDefinition\u0026quot;: {\r\u0026quot;Type\u0026quot;: \u0026quot;AWS::ECS::TaskDefinition\u0026quot;,\r\u0026quot;Properties\u0026quot;: {\r\u0026quot;ExecutionRoleArn\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;Memory\u0026quot;: 250,\r\u0026quot;NetworkMode\u0026quot;: \u0026quot;bridge\u0026quot;,\r\u0026quot;TaskRoleArn\u0026quot;: \u0026quot;arn:aws:iam::364215618558:role/foo\u0026quot;,\r\u0026quot;ContainerDefinitions\u0026quot;: [{\r\u0026quot;Name\u0026quot;: {\r\u0026quot;Fn::Sub\u0026quot;: \u0026quot;${AppName}-${AppEnv}\u0026quot;\r},\r\u0026quot;Image\u0026quot;: {\r\u0026quot;Fn::Sub\u0026quot;: \u0026quot;${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}:${ProductionTag}\u0026quot;\r},\r\u0026quot;PortMappings\u0026quot;: [{\r\u0026quot;ContainerPort\u0026quot;: 80,\r\u0026quot;HostPort\u0026quot;: {\r\u0026quot;Ref\u0026quot;: \u0026quot;AppPort\u0026quot;\r}\r},\r{\r\u0026quot;ContainerPort\u0026quot;: 443,\r\u0026quot;HostPort\u0026quot;: {\r\u0026quot;Ref\u0026quot;: \u0026quot;AppPortSSL\u0026quot;\r}\r}\r],\r\u0026quot;Memory\u0026quot;: 250,\r\u0026quot;MountPoints\u0026quot;: [{\r\u0026quot;SourceVolume\u0026quot;: \u0026quot;shared\u0026quot;,\r\u0026quot;ContainerPath\u0026quot;: \u0026quot;/opt/shared\u0026quot;\r}]\r}],\r\u0026quot;Volumes\u0026quot;: [{\r\u0026quot;Name\u0026quot;: \u0026quot;shared\u0026quot;,\r\u0026quot;Host\u0026quot;: {\r\u0026quot;SourcePath\u0026quot;: \u0026quot;/opt/shared\u0026quot;\r}\r}]\r},\r\u0026quot;DependsOn\u0026quot;: [\r\u0026quot;ECR\u0026quot;\r]\r},\rSo when I update this I can just update the ProductionTag and this will take effect.\n","relPermalink":"/posts/259/","summary":"Just some notes on the process. This will show how to deploy both a Staging build and then Production.\nStaging Staging is done by TravisCI after all tests pass\nHere is the gist of it the deploy step calls to a bash file.\ndeploy:\rskip_cleanup: true\rprovider: script\rscript: bash deploy/travis_deploy.sh\ron:\rbranch: mainline\rThen\n#!/usr/bin/env bash\r# Bail out on first error\rset -e\r## Get the directory of the build script\rDIR=\u0026quot;$( cd \u0026quot;$( dirname \u0026quot;${BASH_SOURCE[0]}\u0026quot; )\u0026quot; \u0026amp;\u0026amp; pwd )\u0026quot;\r## Get the current git commit sha\rHASH=$(git rev-parse HEAD)\r## Get any secret files\raws s3 cp s3://foo/environments/$STACK_ENV_FILE $DIR/app/packaged/.","tags":["aws","fargate"],"title":"Deploying Fargate"},{"content":"\u0026hellip;\n","relPermalink":"/posts/258/","summary":"\u0026hellip;","tags":["101"],"title":"How to Troubleshoot and Issue"},{"content":"BitBucket has a nice feature call Pipelines https://bitbucket.org/product/features/pipelines for $0 you can, even for private repos have a decent CI flow.\n Private repos CI Pipeline $0!!\n It took a bit to get going though since the docs do not talk about PHP and MySQL in enough details. Here is what I ended up with for a bitbucket-pipelines.yml\n# This is a sample build configuration for PHP.\r# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.\r# Only use spaces to indent your .yml configuration.\r# -----\r# You can specify a custom docker image from Docker Hub as your build environment.\rimage: php:7.2\roptions:\rmax-time: 120\rpipelines:\rdefault:\r- step:\rcaches:\r- composer\rscript:\r- apt-get update \u0026amp;\u0026amp; apt-get install -y unzip gnupg\r- docker-php-ext-install mysqli pdo pdo_mysql\r- curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r- cp .env.bitbucket .env\r- curl -sL https://deb.nodesource.com/setup_8.x | bash -\r#- apt-get install -y nodejs\r# hung on install so will have to come back to this\r#- npm install\r#- npm test\r- composer install\r- composer check-style\r- vendor/bin/phpunit\rservices:\r- mysql\r- step:\rname: Deploy to staging\rimage: aneitayang/aws-cli:1.0\rdeployment: staging\rtrigger: automatic\rscript:\r- curl https://forge.laravel.com/servers/baz/sites/bar/deploy/http?token=foo\rdefinitions:\rservices:\rmysql:\rimage: mysql:5.7\renvironment:\rMYSQL_DATABASE: 'test'\rMYSQL_RANDOM_ROOT_PASSWORD: 'yes'\rMYSQL_USER: 'test_user'\rMYSQL_PASSWORD: 'password'\rSo basically I install mysql and set it up to use then all just work. NPM just hangs right now so I am not 100% sure what to do there.\nDebug Unlike TravisCI I could not just SSH in to debug I had to run docker. Here are some links\n https://confluence.atlassian.com/bitbucket/debug-your-pipelines-locally-with-docker-838273569.html https://confluence.atlassian.com/bitbucket/php-with-bitbucket-pipelines-873907835.html Config Info  running locally below worked for me\ndocker run -it --volume=$(pwd):/var/www/html --memory=4g --memory-swap=4g --memory-swappiness=0 --entrypoint=/bin/bash php:7.2-apache\rBut I would have to install their mysql docker as well they note and map them together. ¬Ø_(„ÉÑ)_/¬Ø\nMaybe the price is right for this vs TravisCI\n","relPermalink":"/posts/257/","summary":"BitBucket has a nice feature call Pipelines https://bitbucket.org/product/features/pipelines for $0 you can, even for private repos have a decent CI flow.\n Private repos CI Pipeline $0!!\n It took a bit to get going though since the docs do not talk about PHP and MySQL in enough details. Here is what I ended up with for a bitbucket-pipelines.yml\n# This is a sample build configuration for PHP.\r# Check our guides at https://confluence.","tags":["laravel","bitbucket"],"title":"Bitbucket Pipeline"},{"content":"As I post here I wanted to use JSONEditor as a component. But with Vuex I was able to reduce the work quite a ton. Here is my store for the json_field:\nexport default {\rstate: {\rjson_field: null,\r},\rgetters: {\rjson_field: state =\u0026gt; {\rreturn state.json_field;\r}\r},\rmutations: {\rjsonField(state, json_field) {\rstate.json_field = json_field;\r}\r},\r};\rThen my JSONEditor.vue component:\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026quot;jsoneditor\u0026quot; ref=\u0026quot;editor\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport JSONEditor from 'jsoneditor';\rimport { mapGetters } from 'vuex'\rexport default Vue.extend({\rcomputed: {\r...mapGetters(\r{ json_field: 'json_field' }\r),\r},\rmounted() {\rlet container = this.$refs.editor;\rlet options = {\ronChange: () =\u0026gt; {\rthis.$store.commit(\u0026quot;jsonField\u0026quot;, editor.get());\r},\rmodes: [\u0026quot;tree\u0026quot;, \u0026quot;text\u0026quot;],\r};\rlet editor = (container) ? new JSONEditor(container, options) : null;\rif(container) {\reditor.set(this.json_field);\r}\r}\r});\r\u0026lt;/script\u0026gt;\r\u0026lt;style type=\u0026quot;text/css\u0026quot;\u0026gt;\r#jsoneditor {\rwidth: 1000px;\rheight: 600px;\r}\r\u0026lt;/style\u0026gt;\rFinally the component that will use it:\n\u0026lt;template\u0026gt;\r\u0026lt;section\u0026gt;\r\u0026lt;b-form-group id=\u0026quot;metrics\u0026quot;\rlabel=\u0026quot;Metrics\u0026quot;\rlabel-for=\u0026quot;metrics\u0026quot;\rdescription=\u0026quot;Paste as it should be\u0026quot;\u0026gt;\r\u0026lt;cat-json-editor v-if=\u0026quot;show_editor\u0026quot;\u0026gt;\u0026lt;/cat-json-editor\u0026gt;\r\u0026lt;/b-form-group\u0026gt;\r\u0026lt;/section\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport JSONEditor from 'jsoneditor';\rexport default {\rdata() {\rreturn {\rform: {},\rshow_editor: false\r}\r},\rcreated() {\rthis.getStandardMetrics();\r},\rmethods: {\rgetStandardMetrics() {\raxios.get('/api/standards').then(res =\u0026gt; {\rthis.$snotify.success(\u0026quot;Loading Standards\u0026quot;, \u0026quot;Success\u0026quot;);\rthis.$store.commit(\u0026quot;jsonField\u0026quot;, res.data);\rthis.show_editor = true;\r}).catch(err =\u0026gt; {\rthis.$snotify.warning(\u0026quot;error getting metric standars\u0026quot;, \u0026quot;Error\u0026quot;);\r})\r}\r}\r}\r\u0026lt;/script\u0026gt;\rIf do the v-if to load the editor AFTER I have some state for it. I am sure I could have done some watcher but this worked.\n","relPermalink":"/posts/256/","summary":"As I post here I wanted to use JSONEditor as a component. But with Vuex I was able to reduce the work quite a ton. Here is my store for the json_field:\nexport default {\rstate: {\rjson_field: null,\r},\rgetters: {\rjson_field: state =\u0026gt; {\rreturn state.json_field;\r}\r},\rmutations: {\rjsonField(state, json_field) {\rstate.json_field = json_field;\r}\r},\r};\rThen my JSONEditor.vue component:\n\u0026lt;template\u0026gt;\r\u0026lt;div id=\u0026quot;jsoneditor\u0026quot; ref=\u0026quot;editor\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport JSONEditor from 'jsoneditor';\rimport { mapGetters } from 'vuex'\rexport default Vue.","tags":["vuejs","laravel"],"title":"JSONEditor, Vue and Vuex"},{"content":"So I find myself writing searchable pages that, via an API or what not, someone can filter the page by different fields on the model. This can end up being a Controller class that does a lot of filters off the Request. Or it can be a Repository class that abstracts the business logic into one place for several related models.\nBut in many cases it really is just one Model being filtered. And if I add a Scope scopeFilter and pass in the Request as an array I can iterate over that array and call to other existing scopes on the model.\n /**\r* Return only active models\r*\r* @param object $query\r* @param array $filters\r* @return Builder\r*/\rpublic function scopeFilters($query, $filters)\r{\runset($filters['page']);\rforeach ($filters as $scope =\u0026gt; $value) {\r$scope = camel_case($scope);\r$query = $this-\u0026gt;{$scope}($value);\r}\rreturn $query;\r}\rThis allows me to use those scopes in other places as well.\nFor example a request to active policies for repo_name \u0026ldquo;foo\u0026rdquo;:\ncurl https://foo.test/api/policies?active=1\u0026amp;repo_name=foo\rThe Controller can do something simple like this:\n public function __invoke(Request $request)\r{\rtry {\r$results = Subscriber::filters($request-\u0026gt;all())-\u0026gt;orderBy(\u0026quot;repo_name\u0026quot;)-\u0026gt;paginate(20);\rreturn response()-\u0026gt;json($results, 200);\r} catch (\\Exception $e) {\r\\Log::error($e);\rreturn response()-\u0026gt;json(null, 400);\r}\r}\rAnd the model can handle it with these other scopes, that can be used by themselves as well:\n /**\r* Scope to get by repo_name\r*\r* @param object $query\r* @param string $repo_name\r* @return Builder\r*/\rpublic function scopeRepoName($query, $repo_name)\r{\rreturn $query-\u0026gt;where(\u0026quot;repo_name\u0026quot;, $repo_name);\r}\r/**\r* Return only active models\r*\r* @param object $query\r* @return Builder\r*/\rpublic function scopeActive($query, $state = 1)\r{\rif ($state == 'all') {\r$state = [0,1];\r}\r$state = array_wrap($state);\rreturn $query-\u0026gt;whereIn(\u0026quot;active\u0026quot;, $state);\r}\rFor some time I kept this logic out of models but recently I been trying to use models as more of a place to store this sort of model related logic.\nIf two models need to work together then maybe a Business class could help out to glue them together but still something to consider.\nI will show in the next post one model subscribing another model.\n","relPermalink":"/posts/255/","summary":"So I find myself writing searchable pages that, via an API or what not, someone can filter the page by different fields on the model. This can end up being a Controller class that does a lot of filters off the Request. Or it can be a Repository class that abstracts the business logic into one place for several related models.\nBut in many cases it really is just one Model being filtered.","tags":["laravel","note2self"],"title":"Laravel Filter Scope on a Model"},{"content":"In order to have the tabs and URL change as needed when the user lands on the page or clicks the tab I had to setup a few things.\nFirst I setup the Vue.js router as seen here\nThen my component will work out the rest.\nUsing BV\nI have tabs and then I set those tabs as needed.\n \u0026lt;b-tabs v-model=\u0026quot;activeTab\u0026quot;\u0026gt;\r\u0026lt;b-tab title=\u0026quot;Settings\u0026quot; active \u0026gt;\r\u0026lt;div class=\u0026quot;mt-4 alert alert-info\u0026quot;\u0026gt;\rManage related policies by clicking on the Tabs.\r\u0026lt;ul\u0026gt;\r\u0026lt;li\u0026gt;See Results\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;Add Policies\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;Update Policies\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/b-tab\u0026gt;\r\u0026lt;b-tab title=\u0026quot;Quality Metrics\u0026quot;\u0026gt;\r\u0026lt;quality-metrics-report class=\u0026quot;mt-4\u0026quot; v-if=\u0026quot;this.$store.state.tabIndex == 1\u0026quot;\u0026gt;\u0026lt;/quality-metrics-report\u0026gt;\r\u0026lt;/b-tab\u0026gt;\r\u0026lt;b-tab title=\u0026quot;Travis File Report\u0026quot;\u0026gt;\r\u0026lt;travis-subscription-root class=\u0026quot;mt-4\u0026quot; v-if=\u0026quot;this.$store.state.tabIndex == 2\u0026quot;\u0026gt;\u0026lt;/travis-subscription-root\u0026gt;\r\u0026lt;/b-tab\u0026gt;\r\u0026lt;/b-tabs\u0026gt;\rWhen I user clicks on the tabs the state changes since the activeTab is a computed property.\n computed: {\ractiveTab: {\rget: function() {\rreturn this.$store.state.tabIndex;\r},\rset: function(newTab) {\rlet tabs = {\rtab: _.findKey(this.tabs, function(o) {return o == newTab;})\r}\rthis.$router.push({\rquery: tabs\r});\rconsole.log(this.$router.history.current);\rthis.$store.commit('tabIndex', newTab);\r},\r},\rUsing lodash I can easily find my tab name from the value of the tabe we are looking at.\n data() {\rreturn {\rtabs: { travis_policy_results: 2, quality_metrics_report: 1 }\r}\r},\rThat takes care of the user clicking. I could store the state right in the component but I am doing this in vuex which should not matter here really.\nNow when the user lands on the page my mounted method acts on the url:\n mounted() {\rif(this.$router.history.current['query']['tab']) {\rlet tab = this.$router.history.current['query']['tab'];\rthis.$store.commit('tabIndex', this.tabs[tab]);\r}\r},\rThat is it now the state changes on page land and on click.\nI can also have it change as the user clicks on their Back button.\n methods: {\rchangeTab() {\rlet tab = this.$router.history.current['query']['tab'];\rthis.$store.commit('tabIndex', this.tabs[tab]);\r}\r},\rmounted() {\rif(this.$router.history.current['query']['tab']) {\rthis.changeTab();\r}\r},\rwatch: {\r$route(to, from) {\rif (to.fullPath != from.fullPath) {\rthis.changeTab();\r}\r}\r},\r","relPermalink":"/posts/254/","summary":"In order to have the tabs and URL change as needed when the user lands on the page or clicks the tab I had to setup a few things.\nFirst I setup the Vue.js router as seen here\nThen my component will work out the rest.\nUsing BV\nI have tabs and then I set those tabs as needed.\n \u0026lt;b-tabs v-model=\u0026quot;activeTab\u0026quot;\u0026gt;\r\u0026lt;b-tab title=\u0026quot;Settings\u0026quot; active \u0026gt;\r\u0026lt;div class=\u0026quot;mt-4 alert alert-info\u0026quot;\u0026gt;\rManage related policies by clicking on the Tabs.","tags":["vuejs","laravel"],"title":"Query Strings, Vue and Bootstrap Active Tab"},{"content":"..\n","relPermalink":"/posts/253/","summary":"..","tags":["laravel","note2self"],"title":"Valet Laravel 7.1 and 7.2"},{"content":"Just a reminder using pickle I can easily make fixtures for testing.\nWhen I get results from AWS SDK for example I can just\nimport pickle\rwith open(\u0026quot;fixtures/describe_task_defination.pickle\u0026quot;, 'wb') as fixture:\rpickle.dump(self.stored_state_to_save, fixture)\rThen when I want to feed it back in my test\nimport pickle\rfrom unittest import TestCase\rfrom unittest.mock import patch\rfrom unittest import mock\rimport pickle\rfrom task_image import TaskImage\rdef getFixture(name):\rwith open(\u0026quot;fixtures/\u0026quot; + name, 'rb') as fixture:\rreturn pickle.load(fixture)\rclass TestTaskImage(TestCase)\rdef setUp(self):\rself.task_image = TaskImage()\r@patch('task_image.TaskImage._getTaskDefinition', return_value=getFixture('describe_task_defination.pickle'))\r@patch('task_image.TaskImage._getService', return_value=getFixture('describe_services.pickle'))\rdef test_gets_service(self, _getService, _getTaskDefinition):\rself.results = self.task_image.handle('default', 'cat-teamdocs-production-122')\rself.assertEqual('cat-teamdocs:latest', self.results)\rPretty easy and then I am not hitting the service\n","relPermalink":"/posts/252/","summary":"Just a reminder using pickle I can easily make fixtures for testing.\nWhen I get results from AWS SDK for example I can just\nimport pickle\rwith open(\u0026quot;fixtures/describe_task_defination.pickle\u0026quot;, 'wb') as fixture:\rpickle.dump(self.stored_state_to_save, fixture)\rThen when I want to feed it back in my test\nimport pickle\rfrom unittest import TestCase\rfrom unittest.mock import patch\rfrom unittest import mock\rimport pickle\rfrom task_image import TaskImage\rdef getFixture(name):\rwith open(\u0026quot;fixtures/\u0026quot; + name, 'rb') as fixture:\rreturn pickle.","tags":["note2self","python3","testing"],"title":"Python3 Fixtures"},{"content":"There is a good episode here https://www.phproundtable.com/episode/using-static-analyzers-to-improve-our-php-codebases that talks about this.\nThe short of it is that it can easily catch some issues that your tests or IDE did not. For example I had a class name overlap due to a typo and it found it. From there it will output tons of other info that may just help guide you in your work.\nThe install is super easy as seen in the docs https://github.com/phpstan/phpstan\nFor me I did\ncomposer global require phpstan/phpstan\rthen in my composer.json I added\n\u0026quot;scripts\u0026quot;: {\r//see last row but here are some other nice quick shortcuts\r\u0026quot;check-style\u0026quot;: \u0026quot;phpcs -p --standard=PSR2 --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 app\u0026quot;,\r\u0026quot;fix-style\u0026quot;: \u0026quot;phpcbf -p --standard=PSR2 --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 app\u0026quot;,\r\u0026quot;check-metrics\u0026quot;: \u0026quot;phpmetrics --report-json=report.json app \u0026amp;\u0026amp; vendor/bin/quality_run_check.py report.json\u0026quot;,\r\u0026quot;check-metrics-html\u0026quot;: \u0026quot;phpmetrics --report-json=report.json --report-html=report app \u0026amp;\u0026amp; open report/index.html\u0026quot;,\r\u0026quot;phpstan\u0026quot;: \u0026quot;phpstan analyse app\u0026quot;\r}\rThe initial run found this\nCannot declare class App\\Observers\\QualityReport because the name is already in use in /Users/alfrednutile/Code/cat-quality-service/app/Observers/QualityReport.php on line 7\rwhich was great since I did not catch that in my tests. Another run found a missing variable for my printf which was in an exception area I did not test.\nThis may help as well https://github.com/nunomaduro/larastan for Laravel\nThis will avoid some Facade and other issues. Even just trying\nphp artisan code:analyse --paths=app --level=0\rFound some issues I did not see, for example object properties I did not define at the top of the Class.\n","relPermalink":"/posts/251/","summary":"There is a good episode here https://www.phproundtable.com/episode/using-static-analyzers-to-improve-our-php-codebases that talks about this.\nThe short of it is that it can easily catch some issues that your tests or IDE did not. For example I had a class name overlap due to a typo and it found it. From there it will output tons of other info that may just help guide you in your work.\nThe install is super easy as seen in the docs https://github.","tags":["static analysis","laravel"],"title":"PHPStan Setup"},{"content":"Setup Vuex with external file https://vuex.vuejs.org/installation.html\nBut after this make a file in the resources/assets/js called store.js then set it up as needed Here I will have one loading state\nexport default {\rstate: {\rloading: true,\r},\rgetters: {\rloading: state =\u0026gt; {\rreturn state.loading;\r},\r},\rmutations: {\rloading(state, loading) {\rstate.loading = loading;\r}\r}\r};\rnow import it into your app.js\nimport store from './store';\nand\nvar app = new Vue({\rmixins: [require('spark')],\rstore: new Vuex.Store(store),\rrouter\r});\rThat should do it. I do load some state in my resources/views/layouts/app.blade.php\n \u0026lt;script\u0026gt;\rwindow.Laravel = {!! json_encode([\r\u0026quot;apiToken\u0026quot; =\u0026gt; auth()-\u0026gt;user()-\u0026gt;api_token ?? null\r]) !!};\r\u0026lt;/script\u0026gt;\rJust to help with some basic stuff\n","relPermalink":"/posts/250/","summary":"Setup Vuex with external file https://vuex.vuejs.org/installation.html\nBut after this make a file in the resources/assets/js called store.js then set it up as needed Here I will have one loading state\nexport default {\rstate: {\rloading: true,\r},\rgetters: {\rloading: state =\u0026gt; {\rreturn state.loading;\r},\r},\rmutations: {\rloading(state, loading) {\rstate.loading = loading;\r}\r}\r};\rnow import it into your app.js\nimport store from './store';\nand","tags":["note2self","vuejs","laravel"],"title":"Vuex External File"},{"content":"For those non Passport moments just a simple site that has VueJS Components that need to access routes with authentication in place.\nThanks to\n https://pineco.de/vue-components-laravel-based-apis/ https://andrew.cool/blog/64/How-to-use-API-tokens-for-authentication-in-Laravel-5-2  Route File routes/api.php\nRoute::get('/trigger_contacts', function (Request $request) {\r\\Log::info(\u0026quot;Triggering Contacts\u0026quot;);\rreturn response()-\u0026gt;json(null, 200);\r})-\u0026gt;middleware('auth:api');\rThis will not work out of the box, you will get a 401. Let\u0026rsquo;s plug some things in.\nBlade My main resources/views/layouts/app.blade.php\n \u0026lt;script\u0026gt;\rwindow.Laravel = {!! json_encode([\r\u0026quot;apiToken\u0026quot; =\u0026gt; auth()-\u0026gt;user()-\u0026gt;api_token ?? null\r]) !!};\r\u0026lt;/script\u0026gt;\r\u0026lt;/head\u0026gt;\rOkay now for VueJS resources/assets/js/bootstrap.js\nwindow.axios = require('axios');\rwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\rwindow.axios.defaults.headers.common['Authorization'] = 'Bearer ' + Laravel.apiToken;\rNow the migration and model php artisan make:migration alter_users_add_api_token --table=users\rThen the migration file:\n Schema::table('users', function (Blueprint $table) {\r$table-\u0026gt;char('api_token', 60)-\u0026gt;nullable()-\u0026gt;after('remember_token');\r});\rAnd the User.php model (which is not in the App\\Model folder :) ):\n protected $hidden = [\r'password', 'remember_token', \u0026quot;api_token\u0026quot;\r];\rpublic function getApiTokenAttribute($value)\r{\rif (!$value) {\r$value = str_random(60);\r$this-\u0026gt;api_token = $value;\r$this-\u0026gt;save();\r}\rreturn $value;\r}\rComponent This is nothing out of the ordinary:\n triggerContacts() {\rthis.loading = true;\raxios\r.get('/api/trigger_contacts')\r.then(results =\u0026gt; {\rconsole.log(results);\rthis.status_message = 'Triggered Contacts';\rsetTimeout(() =\u0026gt; {\rthis.loading = false;\rthis.status_message = null;\r}, 3000);\r})\r.catch(err =\u0026gt; {\rconsole.log('issue with trigger');\r});\r}\rThat is it now your component will work with the route.\n","relPermalink":"/posts/249/","summary":"For those non Passport moments just a simple site that has VueJS Components that need to access routes with authentication in place.\nThanks to\n https://pineco.de/vue-components-laravel-based-apis/ https://andrew.cool/blog/64/How-to-use-API-tokens-for-authentication-in-Laravel-5-2  Route File routes/api.php\nRoute::get('/trigger_contacts', function (Request $request) {\r\\Log::info(\u0026quot;Triggering Contacts\u0026quot;);\rreturn response()-\u0026gt;json(null, 200);\r})-\u0026gt;middleware('auth:api');\rThis will not work out of the box, you will get a 401. Let\u0026rsquo;s plug some things in.\nBlade My main resources/views/layouts/app.blade.php\n \u0026lt;script\u0026gt;\rwindow.Laravel = {!! json_encode([\r\u0026quot;apiToken\u0026quot; =\u0026gt; auth()-\u0026gt;user()-\u0026gt;api_token ?","tags":["vuejs","laravel"],"title":"Simple API_Token Auth for VueJS Components and Laravel"},{"content":"I can be really annoying to troubleshoot a failed test in Dusk when using CI systems. What I ended up doing was setting up my project to send these files to S3 on fail.\nHere are the steps\nSetup You App This is just S3 storage so make sure you have a bucket and a folder in the bucket to write to. Basically for AWS you make an IAM with a key and secret and let it read/write to this folder. Might look like this policy\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:ListBucket\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::your-bucket\u0026quot;\r],\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;\r},\r{\r\u0026quot;Action\u0026quot;: [\r\u0026quot;*\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::your-bucket/*\u0026quot;\r],\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;\r}\r]\r}\ror limited it just to the folder screenshots\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:ListAllMyBuckets\u0026quot;,\r\u0026quot;s3:HeadBucket\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Sid\u0026quot;: \u0026quot;VisualEditor1\u0026quot;\r},\r{\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:ListBucket\u0026quot;,\r\u0026quot;s3:GetBucketLocation\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::your-bucket\u0026quot;,\r\u0026quot;arn:aws:s3:::your-bucket/*\u0026quot;\r],\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Sid\u0026quot;: \u0026quot;VisualEditor0\u0026quot;\r},\r{\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:GetObject\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::your-bucket/screenshots\u0026quot;,\r\u0026quot;arn:aws:s3:::your-bucket/screenshots/*\u0026quot;\r],\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Sid\u0026quot;: \u0026quot;VisualEditor2\u0026quot;\r}\r]\r}\rNow in your tests/DuskTestCase.php file add this:\n public function tearDown()\r{\rif (env(\u0026quot;TRAVIS\u0026quot;)) {\r$files = \\File::files(base_path(\u0026quot;tests/Browser/screenshots\u0026quot;));\rif ($files) {\rforeach ($files as $file) {\rStorage::disk('travis_fails')\r-\u0026gt;put($file-\u0026gt;getFileName(), $file-\u0026gt;getContents());\r}\r}\r}\rparent::tearDown();\r}\rThis will run on Travis based tests saving files to the bucket.\nI added to my config/filesystems.php file this:\n 'disks' =\u0026gt; [\r'travis_fails' =\u0026gt; [\r'driver' =\u0026gt; 's3',\r'key' =\u0026gt; env('AWS_ACCESS_KEY_ID'),\r'secret' =\u0026gt; env('AWS_SECRET_ACCESS_KEY'),\r'region' =\u0026gt; \u0026quot;eu-west-1\u0026quot;,\r'root' =\u0026gt; \u0026quot;screenshots\u0026quot;,\r'bucket' =\u0026gt; 'foo-bucket',\r'url' =\u0026gt; env('AWS_URL'),\r],\r/// Now for TravisCI\nSetup TravisCI Then in Travis under Settings -\u0026gt; Environment Variables we make sure to add our key and secret with the proper key format:\nAWS_SECRET_ACCESS_KEY=foo\rAWS_ACCESS_KEY_ID=bar\rNow You are Ready to Fail! Ok so on your next fail you will see in your s3 bucket some of those super handy screenshots.\n","relPermalink":"/posts/248/","summary":"I can be really annoying to troubleshoot a failed test in Dusk when using CI systems. What I ended up doing was setting up my project to send these files to S3 on fail.\nHere are the steps\nSetup You App This is just S3 storage so make sure you have a bucket and a folder in the bucket to write to. Basically for AWS you make an IAM with a key and secret and let it read/write to this folder.","tags":["dusk","laravel","testing","aws"],"title":"Dusk Screenshots to S3 of Failing tests"},{"content":"Going to list somethings as I go.\nThe Mac, in spite of Apple, is a great developer experience, here is to hoping the Windows, with the help of Microsoft, grows to be better and better as the improve it via user feedback to make it a great development box.\nLinks This started it all https://char.gd/blog/2017/how-to-set-up-the-perfect-modern-dev-environment-on-windows\nWebdev on Windows with WSL and VS Code\nNPM and Composer install take a long time Some of this is the Windowsantimalware running. If you go to Windows Security -\u0026gt; Exclusion you can have it not search this folder. More info https://blog.emsisoft.com/en/28620/antimalware-service-executable/\nLocal PHP This one works best for me. I tried Valet etc just go lucky with this one https://medium.freecodecamp.org/setup-a-php-development-environment-on-windows-subsystem-for-linux-wsl-9193ff28ae83\nSimple vhost file:\n\u0026lt;VirtualHost *:80\u0026gt;\rServerName APP_NAME.test\rServerAdmin foo@foo.com\rDocumentRoot /var/www/devroot/APP_NAME/public\rRedirect permanent / https://APP_NAME.test/\r\u0026lt;Directory /var/www/\u0026gt;\rOptions Indexes FollowSymLinks\rAllowOverride All\rRequire all granted\r\u0026lt;/Directory\u0026gt;\rErrorLog ${APACHE_LOG_DIR}/error.log\rCustomLog ${APACHE_LOG_DIR}/access.log combined\r\u0026lt;/VirtualHost\u0026gt;\r\u0026lt;VirtualHost *:443\u0026gt;\rServerName APP_NAME.test\rServerAdmin foo@foo.com\rDocumentRoot /var/www/devroot/APP_NAME/public\rSSLEngine on\rSSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem\rSSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key\r\u0026lt;Directory /var/www/\u0026gt;\rOptions Indexes FollowSymLinks\rAllowOverride All\rRequire all granted\r\u0026lt;/Directory\u0026gt;\rErrorLog ${APACHE_LOG_DIR}/error.log\rCustomLog ${APACHE_LOG_DIR}/access.log combined\r\u0026lt;/VirtualHost\u0026gt;\rMake sure to run:\nsudo a2enmod ssl\rsudo a2enmod rewrite\rservice apache2 restart\rMariaDB Get the latest one installed so you have JSON fields etc here\nBut see bug in section apt-key\nIf you get this Linux error INSTALL PLUGIN unix_socket SONAME 'auth_socket'; checkout https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/\nTrouble with root connecting to 127.0.0.1\nConnect to mysql on localhost and run\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%';\rGRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1';\rFLUSH PRIVILEGES;\rThen set /etc/mysql/my.cnf to\nskip-name-resolve = 1\rbind-address = 0.0.0.0\rservice mysql restart\nAPT-KEY This will not work\nconnecting dirmngr at '/tmp/apt-key-gpghome.L0JTeGaLOf/S.dirmngr' failed: IPC connect call failed\rSo run this instead\ncurl -sL \u0026quot;http://keyserver.ubuntu.com/pks/lookup?op=get\u0026amp;search=0xF1656F24C74CD1D8\u0026quot; | sudo apt-key add\rPutting the key in the search area. [https://github.com/Microsoft/WSL/issues/3286#issuecomment-395980628](Putting the key in the search area. https://github.com/Microsoft/WSL/issues/3286#issuecomment-395980628\nNPM Errors linux Error: pngquant failed to build, make sure that libpng-dev is installed Fix is https://github.com/imagemin/pngquant-bin/issues/78\nExclude WSL folders from virus scans https://www.howtogeek.com/261383/how-to-access-your-ubuntu-bash-files-in-windows-and-your-windows-system-drive-in-bash/\nFor me this was more about my code folder\nApps TextExpander 1Password Get this in the store to start\nWindows ClipBoard History And Alfred replacement! The plugin section has the history one\nVPN ScreenShots This is built into Windows and works really well. Using the Pen I can also just make the back button do it on the fly.\nRecord Desktop ???\nMySQLWorkbench not pretty but does handle things well\nAdd WSL File path to be ignored in the Windows defender scanner ","relPermalink":"/posts/247/","summary":"Going to list somethings as I go.\nThe Mac, in spite of Apple, is a great developer experience, here is to hoping the Windows, with the help of Microsoft, grows to be better and better as the improve it via user feedback to make it a great development box.\nLinks This started it all https://char.gd/blog/2017/how-to-set-up-the-perfect-modern-dev-environment-on-windows\nWebdev on Windows with WSL and VS Code\nNPM and Composer install take a long time Some of this is the Windowsantimalware running.","tags":["windows","note2self"],"title":"Windows Dev Box Try 2 2018"},{"content":"Just a note to self and others who have suffered this. If you are running queues locally, for what ever reason, then any changes you make in code you need to restart your queue daemon.\nphp artisan queue:restart\rThis will cause the daemon to look at a timestamp and restart if that is newer than before \u0026ldquo;e.g. you ran the above. And this will force the in memory process to update itself from the latest code base.\nGood luck!\n","relPermalink":"/posts/246/","summary":"Just a note to self and others who have suffered this. If you are running queues locally, for what ever reason, then any changes you make in code you need to restart your queue daemon.\nphp artisan queue:restart\rThis will cause the daemon to look at a timestamp and restart if that is newer than before \u0026ldquo;e.g. you ran the above. And this will force the in memory process to update itself from the latest code base.","tags":["laravel","queues","note2self"],"title":"Laravel Queue Restart and 'Why are my changes not showing up'"},{"content":"Related to https://developer.github.com/webhooks/ and pushing data to Lambda AWS.\nI can check the token by just having this check in my handler.\nconst crypto = require('crypto');\rexports.handler = (event, context, callback) =\u0026gt; {\rlet headers = event.headers;\rlet body = event.body;\rif (typeof body === 'object') {\rbody = JSON.stringify(event.body);\r}\rlet github_event = headers['X-GitHub-Event'];\rif (\rgithub_event === undefined ||\rtypeof github_event !== 'string' ||\rgithub_event.length \u0026lt; 1\r) {\rcallback(null, {\rstatusCode: 400,\rbody: 'Missing X-GitHub-Event'\r});\rreturn;\r}\rlet github_signature = headers['X-Hub-Signature'];\rif (\rgithub_signature === undefined ||\rtypeof github_signature !== 'string' ||\r!github_signature.match(/sha1=\\S+/)\r) {\rcallback(null, {\rstatusCode: 400,\rbody: 'Missing X-Hub-Signature'\r});\r}\rlet secret = process.env.SECRET;\rif (secret === undefined || secret.length \u0026lt; 1) {\rcallback(null, {\rstatusCode: 500,\rbody: 'We are missing the secret in our server sorry'\r});\rreturn;\r}\rlet signature = headers['X-Hub-Signature'];\rlet computed_signature = crypto\r.createHmac('sha1', secret)\r.update(body)\r.digest('hex');\rif (`sha1=${computed_signature}` !== signature) {\rcallback(null, {\rstatusCode: 403,\rbody: 'HMAC Output not Correct'\r});\rreturn;\r}\r//ready to process token\rcallback(null, {\rstatusCode: 204,\rbody: 'OK'\r});\r};\rWith the serverless library from AWS https://github.com/awslabs/serverless-application-model I can build a template to include this in the Resource\nResources:\rGithubSecurityWebhook:\rType: AWS::Serverless::Function\rDependsOn:\r- Stream\rProperties:\rRuntime: nodejs8.10\rDescription: \u0026gt;-\rThis will verify that the incoming data is from Github and hashed with the key\rwe are using for this environment\rEnvironment:\rVariables:\rSECRET: !Sub ${Secret}\rAPP_ENV: !Sub ${AppEnv}\rAPP_REGION: \u0026quot;eu-west-1\u0026quot;\rthen during the update command I can pass\nSECRET=FOO\ror put a .env file on the system and use the dotenv library\n","relPermalink":"/posts/245/","summary":"Related to https://developer.github.com/webhooks/ and pushing data to Lambda AWS.\nI can check the token by just having this check in my handler.\nconst crypto = require('crypto');\rexports.handler = (event, context, callback) =\u0026gt; {\rlet headers = event.headers;\rlet body = event.body;\rif (typeof body === 'object') {\rbody = JSON.stringify(event.body);\r}\rlet github_event = headers['X-GitHub-Event'];\rif (\rgithub_event === undefined ||\rtypeof github_event !== 'string' ||\rgithub_event.length \u0026lt; 1\r) {\rcallback(null, {\rstatusCode: 400,\rbody: 'Missing X-GitHub-Event'\r});\rreturn;\r}\rlet github_signature = headers['X-Hub-Signature'];\rif (\rgithub_signature === undefined ||\rtypeof github_signature !","tags":["serverless","lambda","aws"],"title":"Lambda and Github Webhooks"},{"content":"Quick way to make the url reflect the query string so the user can share the url and filters.\nThis is component based VueJS building so not an SPA But I still install \u0026quot;vue-router\u0026quot;: \u0026quot;^3.0.1\u0026quot;\nAnd load it\nimport VueRouter from 'vue-router';\rVue.use(VueRouter);\rThe on the component I set a watch on the router.\n watch: {\r$route(to, from) {\rthis.setModelFromQueryString();\rthis.search();\r}\r},\rIn this case it will set the query strings then trigger the \u0026ldquo;search\u0026rdquo; to load the data into the page. This search becomes the go to to get state when the page is loaded (as seen below) or when the users clicks \u0026ldquo;search\u0026rdquo;\nCreated kicks this off the state:\n created: function() {\rthis.setModelFromQueryString();\rthis.search();\r},\rHere is setModelFromQueryString:\n setModelFromQueryString() {\rthis.params.forEach(param =\u0026gt; {\rthis[param.model] = this.getParam(param.display_name);\r});\r},\rMake sure the model matches the state the user wants. The states or filters that I am trying to set are stored in data.\nThe data model stores theys keys and related model values that I want to focus on keeping and restoring:\n data() {\rreturn {\rparams: [\r{\rmodel: 'stack_name',\rdisplay_name: 'stack_name'\r},\r{\rmodel: 'project_name',\rdisplay_name: 'project_name'\r},\r{\rmodel: 'current_page',\rdisplay_name: 'page'\r},\r{\rmodel: 'language',\rdisplay_name: 'language'\r},\r{\rmodel: 'search_name',\rdisplay_name: 'name'\r}\r],\rNow that the model is there I can iterate over these in a few other areas I will show below.\nPage load, and search call the method search and this takes care of a few things\n make sure the the query string reflects the latest model, e.g. what the user set on the page form updates the api url to have these params this.getParams('/api/libraries')  Here is search plus those methods:\nsearch() {\rthis.setQueryString();\rthis.loading = true;\raxios\r.get(this.getParams('/api/libraries'))\r.then(results =\u0026gt; {\rthis.libraries = results.data;\rthis.loading = false;\r})\r.catch(error =\u0026gt; {\rconsole.log(error);\r$alerts.send('Error', 'Could not get next page', true);\r});\r},\rgetParams(prefix) {\rlet url_string = prefix + '?';\rlet query = [];\rthis.params.forEach(param =\u0026gt; {\rif (this[param.model]) {\rlet value = this[param.model];\rlet name = param.display_name;\rquery.push(`${name}=${value}`);\r}\r});\rquery = query.join('\u0026amp;');\rreturn `${url_string}${query}`;\r},\rgetParam(param) {\rreturn this.$router.history.current.query[param];\r},\rpaginateFunction(page) {\rthis.current_page = page;\rthis.search();\r},\rsetQueryString() { //This method builds up the url so the user will see the filter on page load based on their search\rlet items = {};\rthis.params.forEach(param =\u0026gt; {\rif (this[param.model] != undefined) {\ritems[param.display_name] = this[param.model];\r}\r});\rthis.$router.push({\rquery: items\r});\r},\r","relPermalink":"/posts/244/","summary":"Quick way to make the url reflect the query string so the user can share the url and filters.\nThis is component based VueJS building so not an SPA But I still install \u0026quot;vue-router\u0026quot;: \u0026quot;^3.0.1\u0026quot;\nAnd load it\nimport VueRouter from 'vue-router';\rVue.use(VueRouter);\rThe on the component I set a watch on the router.\n watch: {\r$route(to, from) {\rthis.setModelFromQueryString();\rthis.search();\r}\r},\rIn this case it will set the query strings then trigger the \u0026ldquo;search\u0026rdquo; to load the data into the page.","tags":["vuejs","note2self","laravel"],"title":"Query Strings and VueJS"},{"content":"This took a few to get just right, for one the command needs to be in the correct order\nsam local invoke --event fixtures/latest_not_working.json -d 5858 GithubPushes\rFrom here it gave me the output I was looking for:\nsam local invoke --event fixtures/latest_not_working.json -d 5858 GithubPushes\r2018/05/07 06:49:46 Successfully parsed template.yaml\r2018/05/07 06:49:46 Connected to Docker 1.37\r2018/05/07 06:49:46 Fetching lambci/lambda:nodejs8.10 image for nodejs8.10 runtime...\rnodejs8.10: Pulling from lambci/lambda\rDigest: sha256:a53fceb64e2339332dbc4117be8ec270f46fbe28d564499f1cf73035a1c5854e\rStatus: Image is up to date for lambci/lambda:nodejs8.10\r2018/05/07 06:49:47 Invoking index.push (nodejs8.10)\r2018/05/07 06:49:47 Mounting /Users/alfrednutile/Code/foo as /var/task:ro inside runtime container\rDebugger listening on ws://0.0.0.0:5858/ed41670e-8cdf-4f32-95d1-1be539fce269\rFor help see https://nodejs.org/en/docs/inspector\rDebugger attached.\rSo now I could open up Google Inspector here\nAnd I could add to it 0.0.0.0:5858\nThen the debugger would open as needed after I first click ","relPermalink":"/posts/243/","summary":"This took a few to get just right, for one the command needs to be in the correct order\nsam local invoke --event fixtures/latest_not_working.json -d 5858 GithubPushes\rFrom here it gave me the output I was looking for:\nsam local invoke --event fixtures/latest_not_working.json -d 5858 GithubPushes\r2018/05/07 06:49:46 Successfully parsed template.yaml\r2018/05/07 06:49:46 Connected to Docker 1.37\r2018/05/07 06:49:46 Fetching lambci/lambda:nodejs8.10 image for nodejs8.10 runtime...\rnodejs8.10: Pulling from lambci/lambda\rDigest: sha256:a53fceb64e2339332dbc4117be8ec270f46fbe28d564499f1cf73035a1c5854e\rStatus: Image is up to date for lambci/lambda:nodejs8.","tags":[],"title":"Debugging AWS SAM"},{"content":"\u0026hellip;\u0026hellip;\n","relPermalink":"/posts/242/","summary":"\u0026hellip;\u0026hellip;","tags":[],"title":"wip Fargate and Laravel"},{"content":"The goal of this article will allow one to setup a stand alone package working with it\u0026rsquo;s own tests and has access to all of the normal Laravel workflows outside of Laravel. So you can build it using the easier conventions and helpers Laravel offers.\nSince my work will include database usage I will grab both packages:\ncomposer require --dev \u0026quot;orchestra/testbench:\u0026lt;=3.5\u0026quot; \u0026quot;orchestra/database:v3.5.0\u0026quot;\rI will setup my composer.json after this as such:\n \u0026quot;autoload-dev\u0026quot;: {\r\u0026quot;psr-4\u0026quot;: {\r\u0026quot;Tests\\\\\u0026quot;: \u0026quot;tests/\u0026quot;\r}\r}\rThis way my classes will just have the Tests namespace.\nAnd then add tests/TestCase.php\n\u0026lt;?php\rnamespace Tests;\ruse Monolog\\Formatter\\LineFormatter;\ruse Monolog\\Handler\\StreamHandler;\ruse Mockery;\ruse AlfredNutileInc\\HPClient\\HubPlannerProvider;\rclass TestCase extends \\Orchestra\\Testbench\\TestCase\r{\r/**\r* Load any providers I am offering\r*/ protected function getPackageProviders($app)\r{\rreturn\r[\rHubPlannerProvider::class,\r];\r}\rpublic function setUp()\r{\rparent::setUp();\r//I can load any local factories if I want to\r//$this-\u0026gt;withFactories(__DIR__ . '/../database/factories');\r//make the bast path under tests folder\r$this-\u0026gt;app-\u0026gt;setBasePath(__DIR__ . '/../');\r//Because I use dynamic facades\r\\File::makeDirectory(base_path(\u0026quot;storage/framework/cache\u0026quot;), 0755, true, true);\r//I can deliver routes for testing\r//$this-\u0026gt;app['router']-\u0026gt;get('example', function () {\r// return view(\u0026quot;testing\u0026quot;);\r//})-\u0026gt;name('featured');\r//Load a view for testing\r//\\View::addLocation(__DIR__ . '/../views');\r//$this-\u0026gt;loadLaravelMigrations(['--database' =\u0026gt; 'testing']);\r//Any migrations I need to bring in\r$this-\u0026gt;loadMigrationsFrom([\r'--database' =\u0026gt; 'testing',\r'--path' =\u0026gt; realpath(__DIR__ . '/migrations')\r]);\r//$output = $this-\u0026gt;artisan('migrate', ['--database' =\u0026gt; 'testing']);\r}\r/**\r* Setup logging\r*/\rprotected function getEnvironmentSetUp($app)\r{\r$app-\u0026gt;configureMonologUsing(function ($monolog) {\r$path = __DIR__ . \u0026quot;/logs/laravel.log\u0026quot;;\r$handler = $handler = new StreamHandler($path, 'debug');\r$handler-\u0026gt;setFormatter(tap(new LineFormatter(null, null, true, true), function ($formatter) {\r/** @var LineFormatter $formatter */\r$formatter-\u0026gt;includeStacktraces();\r}));\r/** @var \\Monolog\\Logger $monolog */\r$monolog-\u0026gt;pushHandler($handler);\r});\r//setup db config if needed\r//$app['config']-\u0026gt;set('database.default', 'testbench');\r//$app['config']-\u0026gt;set('database.connections.testbench', [\r// 'driver' =\u0026gt; 'sqlite',\r// 'database' =\u0026gt; ':memory:',\r// 'prefix' =\u0026gt; '',\r//]);\r$app['config']-\u0026gt;set('app.debug', env('APP_DEBUG', true));\r//Does my pacakge had any default configurations I want to set\r//$app['config']-\u0026gt;set('laravel-feature-flag.logging', true);\r}\r}\rAlso:\ncomposer require --dev \u0026quot;mockery/mockery:0.9.*\u0026quot;\rSince I use this a lot to mock and it does not come with \u0026ldquo;orchestra/testbench\u0026rdquo;\nNow I am ready to run tests.\nHere is a sample on\n\u0026lt;?php\rnamespace Tests\\Feature;\ruse Tests\\TestCase;\ruse Illuminate\\Foundation\\Testing\\WithFaker;\ruse Illuminate\\Foundation\\Testing\\RefreshDatabase;\ruse AlfredNutileInc\\HPClient\\UserFromResource;\ruse function GuzzleHttp\\json_decode;\rclass UserFromResourceTest extends TestCase\r{\ruse UserFromResource;\rpublic function testResultsFromPayload()\r{\r$users = \\File::get(base_path(\u0026quot;tests/fixtures/resources.json\u0026quot;));\r$payload = \\File::get(base_path(\u0026quot;tests/fixtures/comments_report_limited.json\u0026quot;));\r$results = $this-\u0026gt;transformResouceToResourceName(json_decode($payload, true), json_decode($users, true));\r$result = array_first($results);\r$this-\u0026gt;assertArrayHasKey('user_name', $result);\r$this-\u0026gt;assertEquals('Rob Sherali', $result['user_name']);\r}\r}\rI can easily use Facades, helpers etc that I am use to from Laravel. And I can see logs in logs/laravel.log\nAlso I add\n \u0026lt;php\u0026gt;\r\u0026lt;env name=\u0026quot;APP_ENV\u0026quot; value=\u0026quot;testing\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;CACHE_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;SESSION_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;QUEUE_DRIVER\u0026quot; value=\u0026quot;sync\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;MAIL_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;/php\u0026gt;\rTo my phpunit.xml.dist so it can set defaults as Laravel does.\n","relPermalink":"/posts/241/","summary":"The goal of this article will allow one to setup a stand alone package working with it\u0026rsquo;s own tests and has access to all of the normal Laravel workflows outside of Laravel. So you can build it using the easier conventions and helpers Laravel offers.\nSince my work will include database usage I will grab both packages:\ncomposer require --dev \u0026quot;orchestra/testbench:\u0026lt;=3.5\u0026quot; \u0026quot;orchestra/database:v3.5.0\u0026quot;\rI will setup my composer.json after this as such:","tags":["laravel","testing","orchestra"],"title":"Getting Started with Orchestra Testbench for Laravel Package Development"},{"content":"Quick reminder to take advantage of this amazing feature https://laravel.com/docs/5.6/mix#browsersync-reloading\nNo more reloading your browser.\nyarn add browser-sync --dev\rthen to your webpack.mix.js e.g. the domain of the site you are working on.\n mix.browserSync('foo.test');\rfinally\nyarn run watch\r Note turn off sourceMaps when running this else it can be kinda slow\n ","relPermalink":"/posts/239/","summary":"Quick reminder to take advantage of this amazing feature https://laravel.com/docs/5.6/mix#browsersync-reloading\nNo more reloading your browser.\nyarn add browser-sync --dev\rthen to your webpack.mix.js e.g. the domain of the site you are working on.\n mix.browserSync('foo.test');\rfinally\nyarn run watch\r Note turn off sourceMaps when running this else it can be kinda slow\n ","tags":["laravel","note2self","vuejs"],"title":"BrowserSync and Laravel"},{"content":"Just to make this easy to find. I had a report to write which had numerous daily rows of the same related model data. So in this cause I was tracking servers and security reports.\nMy reports where daily like this\n   id server_id failed type     1 1 1 security   2 1 1 testing   3 1 0 testing    But a groupBy here on server_id would return ID 1 so it would appear as if it was still failing.\nAdding\n$results = $results-\u0026gt;whereRaw('ID IN ( select MAX(id) from reports GROUP BY server_id)');\ror double group by:\n$results = $results-\u0026gt;whereRaw('ID IN ( select MAX(id) from reports GROUP BY server_id, type)');\rDid the trick to sort and group by that latest record, which latest did not do for me.\n","relPermalink":"/posts/240/","summary":"Just to make this easy to find. I had a report to write which had numerous daily rows of the same related model data. So in this cause I was tracking servers and security reports.\nMy reports where daily like this\n   id server_id failed type     1 1 1 security   2 1 1 testing   3 1 0 testing    But a groupBy here on server_id would return ID 1 so it would appear as if it was still failing.","tags":["laravel","note2self"],"title":"GroupBy not Sorting by latest"},{"content":"This has driven me mad too many times. Basically you will get very little feedback if there is any issue getting the token from Github.\nThe problem is in this method.\n public function user()\r{\rif ($this-\u0026gt;hasInvalidState()) {\rthrow new InvalidStateException;\r}\r$response = $this-\u0026gt;getAccessTokenResponse($this-\u0026gt;getCode());\r$user = $this-\u0026gt;mapUserToObject($this-\u0026gt;getUserByToken(\r$token = Arr::get($response, 'access_token')\r));\rreturn $user-\u0026gt;setToken($token)\r-\u0026gt;setRefreshToken(Arr::get($response, 'refresh_token'))\r-\u0026gt;setExpiresIn(Arr::get($response, 'expires_in'));\r}\rThis is in the vendor/laravel/socialite/src/Two/AbstractProvider.php\nSo for example my real error was:\narray:3 [\r\u0026quot;error\u0026quot; =\u0026gt; \u0026quot;redirect_uri_mismatch\u0026quot;\r\u0026quot;error_description\u0026quot; =\u0026gt; \u0026quot;The redirect_uri MUST match the registered callback URL for this application.\u0026quot;\r\u0026quot;error_uri\u0026quot; =\u0026gt; \u0026quot;https://developer.github.com/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/#redirect-uri-mismatch2\u0026quot;\r]\rBut this shows up overall as a token issue or as GuzzleHttp\\Exception\\ClientException: Client error: GET https://api.github.com/user?access_token=` resulted in a 401 Unauthorized response:` so it is really hard to debug.\nHere is to the next time I get this error to remind me where to dd\nAlso the url gave it away too but by then it was gone:\nhttps://foo.te\\st/login/github/callback?error=redirect_uri_mismatch\u0026amp;error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application.\u0026amp;error_uri=https%3A%2F%2Fdeveloper.github.com%2Fapps%2Fmanaging-oauth-apps%2Ftroubleshooting-authorization-request-errors%2F%23redirect-uri-mismatch\u0026amp;state=foo\r","relPermalink":"/posts/238/","summary":"This has driven me mad too many times. Basically you will get very little feedback if there is any issue getting the token from Github.\nThe problem is in this method.\n public function user()\r{\rif ($this-\u0026gt;hasInvalidState()) {\rthrow new InvalidStateException;\r}\r$response = $this-\u0026gt;getAccessTokenResponse($this-\u0026gt;getCode());\r$user = $this-\u0026gt;mapUserToObject($this-\u0026gt;getUserByToken(\r$token = Arr::get($response, 'access_token')\r));\rreturn $user-\u0026gt;setToken($token)\r-\u0026gt;setRefreshToken(Arr::get($response, 'refresh_token'))\r-\u0026gt;setExpiresIn(Arr::get($response, 'expires_in'));\r}\rThis is in the vendor/laravel/socialite/src/Two/AbstractProvider.php\nSo for example my real error was:","tags":["note2self","laravel"],"title":"Troubleshoot Laravel Socialite and Github login"},{"content":"Just a note to self that when using libraries like sweetalert for example and then I want to convert to sweetalert2, it would have saved a lot of time to wrap it into a \u0026ldquo;service\u0026rdquo; and import that.\nFor example I made this js file\nservices/Alerts.js:\nimport swal from 'sweetalert2';\rexport default {\rsend(title, message, error = false) {\rswal(\r{\rtype: error ? \u0026quot;error\u0026quot; : \u0026quot;success\u0026quot;,\rtitle: title,\rtext: message\r}\r);\r}\r}\rThen import it into the app or into the component that needs it.\nimport Alerts from \u0026quot;./services/alerts.js\u0026quot;;\rwindow.$alerts = Alerts;\rAnd later on in that file\nlet message = \u0026quot;Something went wrong with your token, please update it or email for support\u0026quot;;\r$alerts.alert(\u0026quot;Error\u0026quot;, message, true);\r","relPermalink":"/posts/237/","summary":"Just a note to self that when using libraries like sweetalert for example and then I want to convert to sweetalert2, it would have saved a lot of time to wrap it into a \u0026ldquo;service\u0026rdquo; and import that.\nFor example I made this js file\nservices/Alerts.js:\nimport swal from 'sweetalert2';\rexport default {\rsend(title, message, error = false) {\rswal(\r{\rtype: error ? \u0026quot;error\u0026quot; : \u0026quot;success\u0026quot;,\rtitle: title,\rtext: message\r}\r);\r}\r}\rThen import it into the app or into the component that needs it.","tags":["note2self"],"title":"Wrapping Libraries in Services JS"},{"content":"A lot of posts had this style.\nI ended up just needing this:\nThe controller simply does this:\n","relPermalink":"/posts/236/","summary":"A lot of posts had this style.\nI ended up just needing this:\nThe controller simply does this:","tags":["laravel","note2self","vuejs"],"title":"Passing from Blade to VueJs"},{"content":"This to this post here\nfor the idea.\nBasically running cron in Docker is easy BUT once the Host had more than one Docker client cron stopped working. No clue why but to solve this I did two things\nOne made a script that was on the Docker Client\n/scheduler.sh\n#!/bin/bash\rphp /app/artisan schedule:run --verbose --no-interaction \u0026gt;\u0026gt; /dev/null 2\u0026gt;\u0026amp;1\rsleep 60\rThen I did this in the Dockerfile\nCOPY scheduler.sh /\rRUN chmod 755 /scheduler.sh\rFinally supervisord manages it:\n[supervisord]\rnodaemon=true\r[program:scheduler]\rcommand=/scheduler.sh\rautostart=true\rautorestart=true\ruser=root\rstartsecs = 0\rnumprocs=1\rredirect_stderr=true\rstdout_logfile=/dev/stdout\rstdout_logfile_maxbytes=0\rstderr_logfile=/dev/stderr\rthe startsecs allows it not to be seen as a failing script\nFull Dockerfile FROM ubuntu:16.04\r#https://github.com/shipping-docker/dockerized-app/blob/master/docker/app/Dockerfile\rMAINTAINER Alfred Nutile\rRUN apt-get update \\\r\u0026amp;\u0026amp; apt-get install -y locales \\\r\u0026amp;\u0026amp; locale-gen en_US.UTF-8\rENV LANG en_US.UTF-8\rENV LANGUAGE en_US:en\rENV LC_ALL en_US.UTF-8\r## had to leave both update requests\rRUN apt-get update \\\r\u0026amp;\u0026amp; DEBIAN_FRONTEND=noninteractive apt-get install -y cron anacron nginx curl zip unzip git software-properties-common supervisor sqlite3 \\\r\u0026amp;\u0026amp; add-apt-repository -y ppa:ondrej/php \\\r\u0026amp;\u0026amp; apt-get update \\\r\u0026amp;\u0026amp; apt-get install -y screen vim php7.1-fpm php7.1-cli php7.1-mcrypt php7.1-gd php7.1-mysql \\\rphp7.1-pgsql php7.1-imap php-memcached php7.1-mbstring php7.1-xml php7.1-curl \\\rphp7.1-sqlite3 php7.1-xdebug imagemagick php7.1-intl php7.1-zip \\\r\u0026amp;\u0026amp; php -r \u0026quot;readfile('http://getcomposer.org/installer');\u0026quot; | php -- --install-dir=/usr/bin/ --filename=composer \\\r\u0026amp;\u0026amp; mkdir /run/php \\\r\u0026amp;\u0026amp; apt-get remove -y --purge software-properties-common \\\r\u0026amp;\u0026amp; apt-get -y autoremove \\\r\u0026amp;\u0026amp; apt-get clean \\\r\u0026amp;\u0026amp; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\rRUN mkdir /etc/nginx/ssl\rCOPY nginx.crt /etc/nginx/ssl/nginx.crt\rCOPY nginx.key /etc/nginx/ssl/nginx.key\rCOPY default /etc/nginx/sites-available/default\rCOPY php-fpm.conf /etc/php/7.1/fpm/php-fpm.conf\rCOPY xdebug.ini /etc/php/7.1/mods-available/xdebug.ini\r# 2018 02 16 09 13 39\rCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\rCOPY start-container /usr/local/bin/start-container\rRUN chmod +x /usr/local/bin/start-container\r## Deal with cron issues\rCOPY scheduler.sh /\rRUN chmod 755 /scheduler.sh\rCMD [ \u0026quot;start-container\u0026quot; ]\r","relPermalink":"/posts/234/","summary":"This to this post here\nfor the idea.\nBasically running cron in Docker is easy BUT once the Host had more than one Docker client cron stopped working. No clue why but to solve this I did two things\nOne made a script that was on the Docker Client\n/scheduler.sh\n#!/bin/bash\rphp /app/artisan schedule:run --verbose --no-interaction \u0026gt;\u0026gt; /dev/null 2\u0026gt;\u0026amp;1\rsleep 60\rThen I did this in the Dockerfile\nCOPY scheduler.sh /\rRUN chmod 755 /scheduler.","tags":["laravel","note2self","docker"],"title":"Docker Laravel and Cron"},{"content":"\u0026hellip;.\n","relPermalink":"/posts/235/","summary":"\u0026hellip;.","tags":["laravel","rekognition"],"title":"Laravel and AWS Rekognition"},{"content":"Getting error \u0026ldquo;Did you forget to specify the cluster when creating the Pusher instance\u0026rdquo;\nThen need to set config/broadcasting.php:\n 'pusher' =\u0026gt; [\r'driver' =\u0026gt; 'pusher',\r'key' =\u0026gt; env('PUSHER_KEY'),\r'secret' =\u0026gt; env('PUSHER_SECRET'),\r'app_id' =\u0026gt; env('PUSHER_APP_ID'),\r'options' =\u0026gt; [\r//\r],\r],\rto\n 'pusher' =\u0026gt; [\r'driver' =\u0026gt; 'pusher',\r'key' =\u0026gt; env('PUSHER_KEY'),\r'secret' =\u0026gt; env('PUSHER_SECRET'),\r'app_id' =\u0026gt; env('PUSHER_APP_ID'),\r'options' =\u0026gt; [\r\u0026quot;cluster\u0026quot; =\u0026gt; 'us2',\r\u0026quot;encrypted\u0026quot; =\u0026gt; true\r],\r],\rAnd if still calling pusher manually in your js update to be:\n $window.client = new Pusher($window.pusher_key, {\rcluster: 'us2',\rencrypted: true\r});\rvar pusher = $pusher($window.client);\rthe above depends on how are you putting the pusher info into $window but make sure to add the cluster and encryption\n NOTE yours may not be us2\n ","relPermalink":"/posts/233/","summary":"Getting error \u0026ldquo;Did you forget to specify the cluster when creating the Pusher instance\u0026rdquo;\nThen need to set config/broadcasting.php:\n 'pusher' =\u0026gt; [\r'driver' =\u0026gt; 'pusher',\r'key' =\u0026gt; env('PUSHER_KEY'),\r'secret' =\u0026gt; env('PUSHER_SECRET'),\r'app_id' =\u0026gt; env('PUSHER_APP_ID'),\r'options' =\u0026gt; [\r//\r],\r],\rto\n 'pusher' =\u0026gt; [\r'driver' =\u0026gt; 'pusher',\r'key' =\u0026gt; env('PUSHER_KEY'),\r'secret' =\u0026gt; env('PUSHER_SECRET'),\r'app_id' =\u0026gt; env('PUSHER_APP_ID'),\r'options' =\u0026gt; [\r\u0026quot;cluster\u0026quot; =\u0026gt; 'us2',\r\u0026quot;encrypted\u0026quot; =\u0026gt; true\r],\r],\rAnd if still calling pusher manually in your js update to be:","tags":["laravel","note2self"],"title":"Pusher and Laravel Updates"},{"content":"In DatabaseServiceProvider.php line 78:\rClass 'Faker\\Factory' not found\rI had a ton if issues getting dusk on production, especially since production would run\ncomposer install --no-dev --prefer-dist --no-interaction\rTo get around this issue I had to do a few things\nOne, if you are stuck and can not even run php artisan on the server:\nrm bootstrap/cache/services.php\rrm bootstrap/cache/packages.php\rTwo, turn off auto discovery for Dusk and just add it to the app/Providers/AppServiceProvider.php\n public function register()\r{\rif ($this-\u0026gt;app-\u0026gt;environment('local', 'testing')) {\r$this-\u0026gt;app-\u0026gt;register(DuskServiceProvider::class);\r}\r}\rand in composer.json\n \u0026quot;extra\u0026quot;: {\r\u0026quot;laravel\u0026quot;: {\r\u0026quot;dont-discover\u0026quot;: [\r\u0026quot;laravel/dusk\u0026quot;\r]\r}\r},\rNow if you still get a Faker error as I was let\u0026rsquo;s move that up in our composer file:\n \u0026quot;fzaninotto/faker\u0026quot;: \u0026quot;^1.7\u0026quot;\r},\r\u0026quot;require-dev\u0026quot;: {\r\u0026quot;mockery/mockery\u0026quot;: \u0026quot;0.9.*\u0026quot;,\rOkay so now you are ready.\nAs far as Travis goes I run this on the before_deploy\nbefore_deploy:\r- rm .env\r- export APP_ENV=production\r- php artisan clear-compiled\r- composer install --no-dev --prefer-dist --no-interaction\rAnd prevents the error while at the same time cleanup up my code before CodeDeploy bundles it up for deployment.\n","relPermalink":"/posts/232/","summary":"In DatabaseServiceProvider.php line 78:\rClass 'Faker\\Factory' not found\rI had a ton if issues getting dusk on production, especially since production would run\ncomposer install --no-dev --prefer-dist --no-interaction\rTo get around this issue I had to do a few things\nOne, if you are stuck and can not even run php artisan on the server:\nrm bootstrap/cache/services.php\rrm bootstrap/cache/packages.php\rTwo, turn off auto discovery for Dusk and just add it to the app/Providers/AppServiceProvider.","tags":["laravel","note2self"],"title":"Dusk and Production (with Dusk disabled)"},{"content":"Just a reminder to self, if I want to test an API I made and need to pass and api_token\n\u0026lt;?php\rnamespace Tests\\Feature;\ruse Tests\\TestCase;\ruse Illuminate\\Foundation\\Testing\\WithFaker;\ruse Illuminate\\Foundation\\Testing\\RefreshDatabase;\ruse App\\Quote;\ruse Laravel\\Spark\\Repositories\\TokenRepository;\rclass QuoteControllerTest extends TestCase\r{\ruse RefreshDatabase;\rpublic function testGettingAQuoteUsingToken()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$team = factory(\\App\\Team::class)-\u0026gt;create();\r$team-\u0026gt;users()-\u0026gt;attach($user-\u0026gt;id, ['role' =\u0026gt; \u0026quot;member\u0026quot;]);\r$quote = factory(\\App\\Quote::class)-\u0026gt;create([\r'team_id' =\u0026gt; $team-\u0026gt;id,\r'posted_by' =\u0026gt; $user-\u0026gt;id\r]);\r$token = new TokenRepository();\r$token = $token-\u0026gt;createToken(\r$user,\r'get_quote',\r[]\r)-\u0026gt;token;\r$this-\u0026gt;json('GET', \u0026quot;/api/teams/{$team-\u0026gt;id}/quotes/random?api_token={$token}\u0026quot;)\r-\u0026gt;assertStatus(200)-\u0026gt;assertJson([\r'quote' =\u0026gt; $quote-\u0026gt;quote,\r'by' =\u0026gt; $quote-\u0026gt;by,\r'posted_by' =\u0026gt; [\r'email' =\u0026gt; $user-\u0026gt;email,\r'name' =\u0026gt; $user-\u0026gt;name,\r'avatar' =\u0026gt; $user-\u0026gt;photo_url\r]\r]);\r}\rAlso I made a database/factories/TeamFactory.php file:\n\u0026lt;?php\ruse Faker\\Generator as Faker;\ruse App\\User;\ruse App\\Team;\r$factory-\u0026gt;define(Team::class, function (Faker $faker) {\rreturn [\r\u0026quot;name\u0026quot; =\u0026gt; $faker-\u0026gt;word,\r\u0026quot;owner_id\u0026quot; =\u0026gt; function() {\rreturn factory(User::class)-\u0026gt;create()-\u0026gt;id;\r}\r];\r});\r","relPermalink":"/posts/231/","summary":"Just a reminder to self, if I want to test an API I made and need to pass and api_token\n\u0026lt;?php\rnamespace Tests\\Feature;\ruse Tests\\TestCase;\ruse Illuminate\\Foundation\\Testing\\WithFaker;\ruse Illuminate\\Foundation\\Testing\\RefreshDatabase;\ruse App\\Quote;\ruse Laravel\\Spark\\Repositories\\TokenRepository;\rclass QuoteControllerTest extends TestCase\r{\ruse RefreshDatabase;\rpublic function testGettingAQuoteUsingToken()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$team = factory(\\App\\Team::class)-\u0026gt;create();\r$team-\u0026gt;users()-\u0026gt;attach($user-\u0026gt;id, ['role' =\u0026gt; \u0026quot;member\u0026quot;]);\r$quote = factory(\\App\\Quote::class)-\u0026gt;create([\r'team_id' =\u0026gt; $team-\u0026gt;id,\r'posted_by' =\u0026gt; $user-\u0026gt;id\r]);\r$token = new TokenRepository();\r$token = $token-\u0026gt;createToken(\r$user,\r'get_quote',\r[]\r)-\u0026gt;token;\r$this-\u0026gt;json('GET', \u0026quot;/api/teams/{$team-\u0026gt;id}/quotes/random?","tags":["laravel","note2self","testing"],"title":"Testing Laravel API, Spark with Authentication"},{"content":"Many of the sites I make have a need for a Support page for staff to know how to do things like add content, manage users etc. This article will cover how I go about writing my help docs in Markdown and then displaying it on the website with an option to print as PDF.\nWriting MarkDown To begin with, I made the help doc in mine. I made a sample one here\nI save this to the root of the application docs/help.md\nOutput the Help Page Markdown to HTML So there are two things I want out of this, a TOC and the Markdown.\nFirst I will install the needed libraries.\ncomposer require cebe/markdown:~1.1.1 laravelista/sherlock\rThen I make a controller php artisan make:controller HelpController and add a method show:\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse Illuminate\\Http\\Request;\ruse cebe\\markdown\\GithubMarkdown;\ruse Laravelista\\Sherlock\\Sherlock;\rclass HelpController extends Controller\r{\rpublic function show(GithubMarkdown $markdown_writer, Sherlock $sherlock)\r{\r$path = base_path(\u0026quot;docs/help.md\u0026quot;);\r$help = \\File::get($path);\r$toc = $sherlock-\u0026gt;deduct($help)-\u0026gt;getToc();\r$help = $markdown_writer-\u0026gt;parse($help);\r$help = $toc . '\u0026lt;hr\u0026gt;' . $help;\rreturn view('help', compact(\u0026quot;help\u0026quot;));\r}\r}\rRoute::get(\u0026quot;help\u0026quot;, \u0026quot;HelpController@show\u0026quot;)-\u0026gt;name(\u0026quot;help\u0026quot;);\radding to my web.php file: And a simple blade template to show the content:\n@extends('layouts.app')\r\u0026lt;!-- --\u0026gt;\r@section('content')\r\u0026lt;div class=\u0026quot;panel panel-default\u0026quot;\u0026gt;\r@section('title', 'Example Help')\r\u0026lt;div class=\u0026quot;panel-heading\u0026quot;\u0026gt;Example Help Output\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;panel-body\u0026quot;\u0026gt;\r{!! $help !!}\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r@endsection\rYou can see the output here\nThe author of the Sherlock library suggests a different way to inject the info but I opted for this. It will make more sense when I do the PDF output.\nOn the top of that page is a PDF link here is how I can provide that as well.\nOutput to PDF Install the needed library.\ncomposer require barryvdh/laravel-dompdf\r note I did have to install php7.1-gd and php7.1-dom php7.1-opcache\n adding to my web.php file:\nRoute::get(\u0026quot;pdf\u0026quot;, \u0026quot;HelpController@pdf\u0026quot;)-\u0026gt;name(\u0026quot;pdf\u0026quot;);\rAnd update the controller to have a pdf method:\n public function pdf(GithubMarkdown $markdown_writer, Sherlock $sherlock)\r{\r$path = base_path(\u0026quot;docs/help.md\u0026quot;);\r$help = \\File::get($path);\r$toc = $sherlock-\u0026gt;deduct($help)-\u0026gt;getToc();\r$help = $markdown_writer-\u0026gt;parse($help);\r$help = $toc . '\u0026lt;hr\u0026gt;' . $help;\rreturn \\PDF::loadHTML($help)-\u0026gt;stream();\r}\r Note: this is a good time to move the injected Classes into a __costructor since they are using in two methods in the same class\n Alright, now when you click the link o the help page it will output an inline PDF.\n","relPermalink":"/posts/230/","summary":"Many of the sites I make have a need for a Support page for staff to know how to do things like add content, manage users etc. This article will cover how I go about writing my help docs in Markdown and then displaying it on the website with an option to print as PDF.\nWriting MarkDown To begin with, I made the help doc in mine. I made a sample one here","tags":["laravel","note2self"],"title":"Example of Making Documentation in Markdown with PDF Output"},{"content":"There are good docs on this http://serverless.com platform. For Python\n https://serverless.com/framework/docs/providers/aws/examples/hello-world/python/#hello-world-python-example https://github.com/serverless/examples  I will cover some items here I need to do time after time.\n Tagging ENV settings Testing  Testing Example file test_cf_backuper.py:\nimport unittest\rimport mock\rfrom mock import MagicMock\rfrom get_buckets import GetBuckets\rimport boto3\rreal_client = boto3.client('cloudformation')\rimport logging\rimport json\rfrom CFBackuper import CFBackuper\rlogging.basicConfig()\rlog = logging.getLogger()\rlog.setLevel(logging.DEBUG)\rclass TestHandler(unittest.TestCase):\rdef test_get_one_template(self):\rclient = CFBackuper()\rresults = client.handle()\rself.assertTrue(results)\rThis allows me to mock the client for example of boto, more on that later.\npython -m unittest test_cf_backuper.TestHandler.test_get_one_template\rPip Install Along the way I make a requirments.txt for example\nrequests\rboto3\rmock\rlogging\rpython-dotenv\rthen\npip install -r requirements.txt\rgets me setup locally\nAWS Cli It is key to have your profile setup per their docs here\nThen shift the default as needed:\nexport AWS_DEFAULT_PROFILE=profile_name_here\rOr in the servless.yml file:\nprovider:\rname: aws\rruntime: python2.7\rprofile: profile_name_here\rMore info here\n","relPermalink":"/posts/229/","summary":"There are good docs on this http://serverless.com platform. For Python\n https://serverless.com/framework/docs/providers/aws/examples/hello-world/python/#hello-world-python-example https://github.com/serverless/examples  I will cover some items here I need to do time after time.\n Tagging ENV settings Testing  Testing Example file test_cf_backuper.py:\nimport unittest\rimport mock\rfrom mock import MagicMock\rfrom get_buckets import GetBuckets\rimport boto3\rreal_client = boto3.client('cloudformation')\rimport logging\rimport json\rfrom CFBackuper import CFBackuper\rlogging.basicConfig()\rlog = logging.getLogger()\rlog.setLevel(logging.DEBUG)\rclass TestHandler(unittest.TestCase):\rdef test_get_one_template(self):\rclient = CFBackuper()\rresults = client.","tags":["serverless","python","wip"],"title":"Serverless Python and Example App WIP"},{"content":"There are docs on how to get a Transition to take effect when an item loads https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components\nBut I was not having much luck with this using https://uiv.wxsm.space/carousel.\nI ended up making a quick helper function to keep it from looking like exploded elements.\nYou can see the results of this change here\nSo the steps followed per the docs above for the most part.\nAdd to my scss file:\n\r.ibox-content.text-center.carousel {\rmin-height: 400px;\r}\r.fade-enter-active, .fade-leave-active {\rtransition: opacity .5s;\r}\r.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\ropacity: 0;\r}\rMake a TransitionHelper.vue componenent:\n\u0026lt;template\u0026gt;\r\u0026lt;transition name=\u0026quot;fade\u0026quot;\u0026gt;\r\u0026lt;div v-show=\u0026quot;show\u0026quot; \u0026gt;\r\u0026lt;slot\u0026gt;\u0026lt;/slot\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/transition\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rdata() {\rreturn {\rshow: false\r};\r},\rmounted() {\rthis.show = true;\r}\r};\r\u0026lt;/script\u0026gt;\rThen added to my app.js\nVue.component('transition-helper', require('./components/TransitionHelper.vue'));\rFinally wrapped my blade file output in this helper.\n \u0026lt;transition-helper style=\u0026quot;display: none;\u0026quot;\u0026gt;\r\u0026lt;carousel class=\u0026quot;homepage-featured-carousel\u0026quot; :indicators=\u0026quot;false\u0026quot; :controls=\u0026quot;true\u0026quot; :interval=\u0026quot;0\u0026quot;\u0026gt;\r@foreach($featured_documents-\u0026gt;chunk(6) as $chunk)\r\u0026lt;slide\u0026gt;\r\u0026lt;div class=\u0026quot;row-fluid\u0026quot;\u0026gt;\r@foreach($chunk as $item)\r\u0026lt;div class=\u0026quot;col-xs-2\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;ibox float-e-margins homepage-featured-item\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;ibox-title\u0026quot;\u0026gt;\r\u0026lt;img class=\u0026quot;img-responsive\u0026quot; src=\u0026quot;images/ces/image_placeholder.svg\u0026quot; alt=\u0026quot;\u0026quot;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;ibox-content\u0026quot;\u0026gt;\rYou can see the display:none kicking in before the page loads js etc keeping it well hidden. Then once it is all loaded and we are ready I show it and transition it in.\n","relPermalink":"/posts/228/","summary":"There are docs on how to get a Transition to take effect when an item loads https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components\nBut I was not having much luck with this using https://uiv.wxsm.space/carousel.\nI ended up making a quick helper function to keep it from looking like exploded elements.\nYou can see the results of this change here\nSo the steps followed per the docs above for the most part.\nAdd to my scss file:","tags":["vuejs","note2self"],"title":"VueJS Transition Helper"},{"content":"This is just a reminder area of all the minor details as I find them that I need to remember\nFontAwesome yarn add font-awesome\rThen in my resources/assets/sass/app.scss\n// Fonts\r@import url(\u0026quot;https://fonts.googleapis.com/css?family=Raleway:300,400,600\u0026quot;);\r// Variables\r@import \u0026quot;variables\u0026quot;;\r// Bootstrap\r@import \u0026quot;~bootstrap-sass/assets/stylesheets/bootstrap\u0026quot;;\r@import \u0026quot;~font-awesome/css/font-awesome\u0026quot;; My webpack is the default\nmix.js('resources/assets/js/app.js', 'public/js')\r.sass('resources/assets/sass/app.scss', 'public/css');\rset to go!\nIf using Less\n#resources/assets/less/app.less\r@import \u0026quot;./../../../node_modules/font-awesome/less/font-awesome\u0026quot;;\r","relPermalink":"/posts/227/","summary":"This is just a reminder area of all the minor details as I find them that I need to remember\nFontAwesome yarn add font-awesome\rThen in my resources/assets/sass/app.scss\n// Fonts\r@import url(\u0026quot;https://fonts.googleapis.com/css?family=Raleway:300,400,600\u0026quot;);\r// Variables\r@import \u0026quot;variables\u0026quot;;\r// Bootstrap\r@import \u0026quot;~bootstrap-sass/assets/stylesheets/bootstrap\u0026quot;;\r@import \u0026quot;~font-awesome/css/font-awesome\u0026quot;; My webpack is the default\nmix.js('resources/assets/js/app.js', 'public/js')\r.sass('resources/assets/sass/app.scss', 'public/css');\rset to go!\nIf using Less\n#resources/assets/less/app.less\r@import \u0026quot;./../../../node_modules/font-awesome/less/font-awesome\u0026quot;;\r","tags":["note2self","laravel","assets","wip"],"title":"Laravel Asset Notes WIP"},{"content":"I have been using PostMark for years https://postmarkapp.com for sending emails, e.g. password reset and more.\nThey have an API but to get going with SMTP all the info is here\nBasically get your KEY and use it in your .env like this:\nMAIL_DRIVER=smtp\rMAIL_HOST=smtp.postmarkapp.com\rMAIL_PORT=587\rMAIL_USERNAME=foo\rMAIL_PASSWORD=foo\rMAIL_ENCRYPTION=tls\rAnd all should work. Just make sure to\n Register the domain in their domain ui Set the from info in Laravel  ","relPermalink":"/posts/226/","summary":"I have been using PostMark for years https://postmarkapp.com for sending emails, e.g. password reset and more.\nThey have an API but to get going with SMTP all the info is here\nBasically get your KEY and use it in your .env like this:\nMAIL_DRIVER=smtp\rMAIL_HOST=smtp.postmarkapp.com\rMAIL_PORT=587\rMAIL_USERNAME=foo\rMAIL_PASSWORD=foo\rMAIL_ENCRYPTION=tls\rAnd all should work. Just make sure to\n Register the domain in their domain ui Set the from info in Laravel  ","tags":["laravel","note2self"],"title":"PostMark SMTP for sending Notifications and Password Resets"},{"content":"Just keeping a list of gotchas around dusk.\nuse RefreshDatabase not working Cost: 1 hour lost\nBasically I had to go back to the slower \u0026ldquo;use DatabaseMigrations;\u0026rdquo; otherwise it would not work. The user was null.\nLinks: This thread helped\nHeadless or not Cost: 1 hour lost or less\nFor some odd reasons my tests started coming up blank.\nI turned off headless in this class DuskTestCase\n protected function driver()\r{\r$args = [\r'--disable-gpu',\r'--headless'\r];\rif (env(\u0026quot;HEADLESS_OFF\u0026quot;)) {\r$args = [\r'--disable-gpu'\r];\r}\r$options = (new ChromeOptions)-\u0026gt;addArguments($args);\rreturn RemoteWebDriver::create(\r'http://localhost:9515',\rDesiredCapabilities::chrome()-\u0026gt;setCapability(\rChromeOptions::CAPABILITY,\r$options\r)\r);\r}\rAnd this way it still works on travis.\n","relPermalink":"/posts/225/","summary":"Just keeping a list of gotchas around dusk.\nuse RefreshDatabase not working Cost: 1 hour lost\nBasically I had to go back to the slower \u0026ldquo;use DatabaseMigrations;\u0026rdquo; otherwise it would not work. The user was null.\nLinks: This thread helped\nHeadless or not Cost: 1 hour lost or less\nFor some odd reasons my tests started coming up blank.\nI turned off headless in this class DuskTestCase\n protected function driver()\r{\r$args = [\r'--disable-gpu',\r'--headless'\r];\rif (env(\u0026quot;HEADLESS_OFF\u0026quot;)) {\r$args = [\r'--disable-gpu'\r];\r}\r$options = (new ChromeOptions)-\u0026gt;addArguments($args);\rreturn RemoteWebDriver::create(\r'http://localhost:9515',\rDesiredCapabilities::chrome()-\u0026gt;setCapability(\rChromeOptions::CAPABILITY,\r$options\r)\r);\r}\rAnd this way it still works on travis.","tags":["note2self","laravel","dusk"],"title":"Dusk Notes"},{"content":"Mainline Workflow  \u0026ldquo;Once you achieve a certain frequency of releases, around once a week or so, it no longer makes sense to branch for release.\u0026rdquo; - Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation\n tl;dr I want to do a tl;dr of a workflow, that two years ago seemed insane, but now would seem impossible for me to work without and still feel efficient. The topic of Continuous Delivery and Mainline workflow.\nTo sum it up:\n‚ÄúDevelopers that practice working in small blocks of code, writing tests and committing often. Your app has the right amount of tests in place, a CI that runs with each commit, building and testing for every push. Reviewing each others code daily, and the ability to Feature Flag items that are not ready yet that with each push to the only branch, Mainline, the code then goes to production. 1‚Äù Insane right?\nBut then when your hear of the many companies following this pattern:\n Google Facebook Amazon Atlassian WordPress Intercom IMVU, since 2009 (50 deployments/day) Wealthfront, since 2010 Etsy, since 2010 DISQUS, since 2011 Box, since 2013 Hubspot, since 2013 (300 deployments/day) Tesla and Adobe  [^2]\nAnd watch videos by Jez Humble and read the book Continuous Delivery, you start to see how you can leave behind a Feature Branch/PR workflow for this much more efficient and still stable workflow.\nThat about sums it up but now a bit more details.\nDay to day responsibilities of the developers  Your team prioritizes keeping the software deployable over working on new features - Martin Fowler ContinuousDelivery\n First of all this workflow really asks for developers to break down their work to small small steps/blocks. Almost going hand in hand with TDD minus.\nWith this, and some items I list below, the developer can move forward with confidence that the app is not going to break with the feature they are working on being not 100% done.\nAnd the developer is working knowing that each block of code has to be production ready so there has to be trust here that they will code at this level. But all of this will surface in the code review that I will talk about below.\nAnd to top it off they are pushing to the repo and therefore a Continuous Integration system like TravisCI, 3-4 times at least a day.\nTesting  Being proud of 100% test coverage is like being proud of reading every word in the newspaper. Some are more important than others. - Kent beck\n As noted above coverage and testing is key. This does not mean 100% coverage but as a team you have an agreement to the right amount and your CI system should fail when the code falls below this amount.\nThese test should be part of all our blocks of code you are committing and not be an after thought.\nAnd lastly these tests are what give you all the confidence to have this workflow where you are pushing to a server numerous times a day.\nCode Review  10 lines of code = 10 issues. 500 lines of code = \u0026ldquo;looks fine.\u0026rdquo; Code reviews - @iamdevloper\n Code Review is key, and this is were many from a PR (Pull Request) work flow would argue is missing. Code is getting into \u0026ldquo;master\u0026rdquo; before being reviewed.\nI get it, but if we are committing often, reviewing often and have good test coverage, then you will see areas of the code where patterns can be optimized or direction changed as you take a couple of times a day to do the code review.\nAnd this is an pattern that will ideally help every one on the team to grow to the level expected. If some developers are truly too junior to code at this level then maybe there are more root level efforts to be had to help them, e.g. pair coding etc.\nAnd the Code Review goes both ways not just lead reviewing others but reviewing each others code.\nFeature Flags  Feature Toggles are a powerful technique, allowing teams to modify system behavior without changing code. - Martin Fowler\n This is another key pattern to make this possible. Let\u0026rsquo;s say feature Foo is ready for production but feature Bar is not. Both are on mainline and both are pushed to production! But Bar is behind a feature flag/toggle. This means that unless an admin goes in and turns it on in the UI or a setting changed in the ENVIRONMENT is set to on then it will not appear, e.g. the load balancer sends traffic from us-east to server 1 where this feature is on.\nAs noted above the developer is working in small blocks that will not impact the application as a whole. Even migrations can be done this way. 2\nThis also leaves us open to do A B testing too if we want. Or better yet remove a feature that we find out was not being used! Nothing beats being able to remove code that is not needed.\nCI  From now on, our code in revision control will always build successfully and pass its tests - James Shore: Continuous Integration on a Dollar a Day\n This is the gateway from Developer to Deployment. This is the guard that keeps those accidental typos, missing libraries etc from making it to the server.\nJust one .yml file later, good example here for php, and you are ready to use a system like TravisCI.\nAnd this one step will be a world of difference even if you are working alone.\nThis is key in CD is that no code will be deployed till it passes CI. This means:\n The code will be built on the server catching \u0026ldquo;it works on my machine issues\u0026rdquo; The tests has to pass. The style rules have to pass  And once all this passes then you can have it do the deployment for you!\nEven with tools like Dusk or Behat you can be testing your UI as well.\nDeployment  Over time, deployments should tend towards being fully automated. There should be two tasks for a human being to perform to deploy software into a development, test, or production environment: to pick the version and environment and to press the ‚Äúdeploy‚Äù button - Humble, Jez. Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation\n There are many ways to deploy of course. The CD goal is that you are deploy an \u0026ldquo;Artifact\u0026rdquo;. The reason is that this build and all the steps to make it so, that passed on your CI system should not be run again when deployed.\nA good example of this is say you have 3 servers behind a load balancer and you want to deploy to all of them, one at a time. You then have to hope, if you are not deploying an artifact, that your steps will work on all them as they did on the CI. For me this would mean.\n composer install - which can have moments where Github fails or http issue yarn install - still some risk here of server issues  What, for me, has been working well is CodeDeploy. This integrates with TravisCI so it fits right into the .yml file. And during deployment of this artifact its is smart enough to do it one server at a time, removing it from the ELB (Elastic Load Balancer) while this is happening, and then putting it back when done if it passes. Stopping along the way and rolling back if there is a fail.\nLong QA Branches There are those moments when QA and regulations are blocking you. But this then turns into a \u0026ldquo;release branch\u0026rdquo; and not a tag.\nHere are some quotes from the book Continuous Delivery.\n \u0026ldquo;A more manageable branching strategy (when you can not release as often) ‚Äîour strong recommendation, and arguably the industry standard‚Äîis to create long-lived branches only on release, as shown in the image above\u0026rdquo; from \u0026ldquo;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation (Adobe Reader) (Addison-Wesley Signature Series (Fowler))\u0026rdquo; by Jez Humble, David Farley\n And\n \u0026ldquo;Branch for Release The one situation when it‚Äôs always acceptable to create a branch is shortly before a release. Once the branch is created, testing and validation of the release is done from code on the branch, while new development is performed on mainline.\u0026rdquo; from \u0026ldquo;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation (Adobe Reader) (Addison-Wesley Signature Series (Fowler))\u0026rdquo; by Jez Humble, David Farley\n Finally\n \u0026ldquo;It is important, when branching for release, not to create further branches off the release branch.\u0026rdquo; from \u0026ldquo;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation (Adobe Reader) (Addison-Wesley Signature Series (Fowler))\u0026rdquo; by Jez Humble, David Farley\n Again this if for those times when there are systems / departments and regulations in place that leave you no real option.\nLinks Jez Humble and Continuous Deliver 20017 Keynote: Continous Delivery Sounds Great By Jez Humble @ Agile India 2017 - YouTube\nThe Book here\nMartin Fowler Continuous Delivery ContinuousDelivery\nFeature Toggles - Feature Toggles (aka Feature Flags)\nFootnotes [^2] Credit to: What companies best exemplify IMVU-style continuous deployment? - Quora\n  Or even going to staging with an \u0026ldquo;artifact\u0026rdquo; will be good enough since that will be sent as a whole to production. \u0026#x21a9;\u0026#xfe0e;\n For us we keep logic in the code and not so much in the database, so when a field is created we tend to allow it to be null since this means we can manage that impact it has on the rest of the application if our code is not ready yet to manage the field. \u0026#x21a9;\u0026#xfe0e;\n   ","relPermalink":"/posts/224/","summary":"Mainline Workflow  \u0026ldquo;Once you achieve a certain frequency of releases, around once a week or so, it no longer makes sense to branch for release.\u0026rdquo; - Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation\n tl;dr I want to do a tl;dr of a workflow, that two years ago seemed insane, but now would seem impossible for me to work without and still feel efficient. The topic of Continuous Delivery and Mainline workflow.","tags":["continuous delivery"],"title":"Continuous Delivery in a NutShell"},{"content":"** UPDATED November 22 2017 **\nThe service Laravel Shift is a great way to save a ton of time and keep your Laravel application up to date.\nBut sometimes you may not be allowed to share access to your company Github account for this process since it is hard to limit access at the repo level.\nIn this case I have a quick way to get your work done and back into the company repo IF that is okay with your boss.\nHere are the steps:\nMake a new branch since this is a huge update\nThen make a repo on your account the is PRIVATE\nThen in the same folder of the exiting repository type :\ngit remote add shift git@github.com:alnutile/planner.git\rThe tricky part here is that if there are private dependencies.\nThere is no easy answer, yes since this is a branch you could:\n  remove those dependencies from composer and config/app.php\n  then run composer install again to clean out the lock file (UPDATE: just delete the composer.lock file once you know the install is working)\n  Then push to your repo:\ngit push shift 5.5\rNow go to the Shift website and start the process pointing to the repo you just made. Once paid then in moments you will get a PR. Merge that in and start the process of fixing any files it noted as missing. I typically will pull this work down locally.\ngit pull --rebase shift 5.5\rThen run your tests to make sure all is well\nWhen done with any manual fixes and if you need to run Shift again:\ngit push shift 5.5\rNow rinse and repeat till you are 5.5\n NOTE: After each merge I tend to clean out vendor and composer.lock:\n rm -rf composer.lock vendor\rThis just seems to be a lot faster of a process.\n","relPermalink":"/posts/223/","summary":"** UPDATED November 22 2017 **\nThe service Laravel Shift is a great way to save a ton of time and keep your Laravel application up to date.\nBut sometimes you may not be allowed to share access to your company Github account for this process since it is hard to limit access at the repo level.\nIn this case I have a quick way to get your work done and back into the company repo IF that is okay with your boss.","tags":["laravel","note2self"],"title":"Laravel Shift and Your Day Job"},{"content":"UPDATED November 05 2017\nThis will cover how to make a JSONEditor component that I can then use in a Blade template and listen to events.\nYou will end up with this:\nFirst making sure I have all the packages I need:\n //package.json\r\u0026quot;devDependencies\u0026quot;: {\r\u0026quot;axios\u0026quot;: \u0026quot;^0.17\u0026quot;,\r\u0026quot;bootstrap-sass\u0026quot;: \u0026quot;^3.3.7\u0026quot;,\r\u0026quot;cross-env\u0026quot;: \u0026quot;^5.0.1\u0026quot;,\r\u0026quot;jquery\u0026quot;: \u0026quot;^3.2\u0026quot;,\r\u0026quot;laravel-mix\u0026quot;: \u0026quot;^1.0\u0026quot;,\r\u0026quot;lodash\u0026quot;: \u0026quot;^4.17.4\u0026quot;,\r\u0026quot;vue\u0026quot;: \u0026quot;^2.1.10\u0026quot;\r},\r\u0026quot;dependencies\u0026quot;: {\r\u0026quot;select2\u0026quot;: \u0026quot;^4.0.5\u0026quot;,\r\u0026quot;jsoneditor\u0026quot;: \u0026quot;^5.9.6\u0026quot;\r}\rAnd to load it into my bootstrap file:\n//resources/assets/js/bootstrap.js\rtry {\rwindow.$ = window.jQuery = require('jquery');\rrequire('bootstrap-sass');\rrequire(\u0026quot;select2\u0026quot;);\rrequire(\u0026quot;jsoneditor\u0026quot;);\r} catch (e) {\rconsole.log(\u0026quot;Error loading jquery\u0026quot;);\r}\rWhich gets pulled in by my app.js which I also register the global component:\n//resources/assets/js/app.js\rrequire('./bootstrap');\rwindow.Vue = require('vue');\r/**\r* Using this as a globle event emmitter for components to easily talk to other components\r*/\rwindow.EventBus = new Vue();\rVue.component('cat-json-editor', require('./components/JSONEditor'));\rVue.component('cat-config-field', require('./components/ConfigField'));\r//end of file\r The app.js and bootstrap.js are default workflows of Laravel\n Then I will make the component:\n//resources/assets/js/components/JSONEditor.vue\r\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;div id=\u0026quot;jsoneditor\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport JSONEditor from 'jsoneditor';\rexport default Vue.extend({\rprops: ['config'],\rmounted: function () {\rlet self = this;\rlet container = document.getElementById('jsoneditor');\rlet options = {\ronChange: function() {\rEventBus.$emit('config-updated', editor.get());\r},\rmodes: [\u0026quot;tree\u0026quot;, \u0026quot;text\u0026quot;],\r};\rlet editor = (container) ? new JSONEditor(container, options) : null;\rif(container) { editor.set(window.config); }\r}\r});\r\u0026lt;/script\u0026gt;\r\u0026lt;style type=\u0026quot;text/css\u0026quot;\u0026gt;\r#jsoneditor {\rwidth: 800px;\rheight: 600px;\r}\r\u0026lt;/style\u0026gt;\rHere I register the props and I setup some config using code I placed into window from my controller. You can use this tool for this process. I could have passed it into the component but chose not to.\nSo now when there is a change it will emit the change to the global EventBus\nNow for the ConfigField component:\n\u0026lt;\u0026lt;template\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;input type=\u0026quot;hidden\u0026quot; id=\u0026quot;config\u0026quot; name=\u0026quot;config\u0026quot; class=\u0026quot;form-control\u0026quot; rows=\u0026quot;30\u0026quot; v-model=\u0026quot;config\u0026quot;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default Vue.extend({\rdata() {\rreturn {\r'config': JSON.stringify(window.config)\r}\r},\rmethods: {\rconfigUpdated: function(json) {\rthis.config = JSON.stringify(json);\r}\r},\rcreated() {\rEventBus.$on(\u0026quot;config-updated\u0026quot;, this.configUpdated);\r}\r});\r\u0026lt;/script\u0026gt;\rWith these two components in place I now need to add the components to the HTML template.\nAfter this is setup my Blade file has the needed Vue listener etc to update the form (non-ajax) as needed:\n@push('scripts')\r\u0026lt;script\u0026gt;\rnew Vue({\rel: '#config_form',\r})\r\u0026lt;/script\u0026gt;\r@endpush\r\u0026lt;!-- Form above this that is doing all the form submission work --\u0026gt;\r\u0026lt;div id=\u0026quot;config_form\u0026quot;\u0026gt;\r\u0026lt;label for=\u0026quot;config\u0026quot;\u0026gt;Config\u0026lt;/label\u0026gt;\r\u0026lt;cat-json-editor\u0026gt;\u0026lt;/cat-json-editor\u0026gt;\r\u0026lt;cat-config-field\u0026gt;\u0026lt;/at-config-field\u0026gt;\r\u0026lt;/div\u0026gt;\rIn this case I am taking advantage of Blades stack feature\nAnd the minor amount of work here just mounts Vue onto the #config_form\nThen I use Vue to listen to the event \u0026ldquo;config-updated\u0026rdquo;. From there, since this is not about Ajax requests, I update the hidden field on the form. I could have done this with JQuery but just wanted to get use to this Vue workflow. Also I could see sending this over Ajax sooner than later even if just for validation notices etc.\nHere is a quick look at the Scope of the objects:\n","relPermalink":"/posts/222/","summary":"UPDATED November 05 2017\nThis will cover how to make a JSONEditor component that I can then use in a Blade template and listen to events.\nYou will end up with this:\nFirst making sure I have all the packages I need:\n //package.json\r\u0026quot;devDependencies\u0026quot;: {\r\u0026quot;axios\u0026quot;: \u0026quot;^0.17\u0026quot;,\r\u0026quot;bootstrap-sass\u0026quot;: \u0026quot;^3.3.7\u0026quot;,\r\u0026quot;cross-env\u0026quot;: \u0026quot;^5.0.1\u0026quot;,\r\u0026quot;jquery\u0026quot;: \u0026quot;^3.2\u0026quot;,\r\u0026quot;laravel-mix\u0026quot;: \u0026quot;^1.0\u0026quot;,\r\u0026quot;lodash\u0026quot;: \u0026quot;^4.17.4\u0026quot;,\r\u0026quot;vue\u0026quot;: \u0026quot;^2.1.10\u0026quot;\r},\r\u0026quot;dependencies\u0026quot;: {\r\u0026quot;select2\u0026quot;: \u0026quot;^4.0.5\u0026quot;,\r\u0026quot;jsoneditor\u0026quot;: \u0026quot;^5.9.6\u0026quot;\r}\rAnd to load it into my bootstrap file:","tags":["vue","vue2","laravel","blade","note2self"],"title":"Wrapping JSONEditor in Vue as Well as Laravel Blade"},{"content":"By default I set my phpunit.xml to use test as my database:\n \u0026lt;php\u0026gt;\r\u0026lt;env name=\u0026quot;APP_ENV\u0026quot; value=\u0026quot;testing\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;CACHE_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;SESSION_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;MAIL_DRIVER\u0026quot; value=\u0026quot;log\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;QUEUE_DRIVER\u0026quot; value=\u0026quot;sync\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;DB_DATABASE\u0026quot; value=\u0026quot;test\u0026quot;/\u0026gt; \u0026lt;-- this line here \u0026lt;/php\u0026gt;\rBut with Valet and Dusk this led to the browser using my default database and not test but the PHPUnit test itself was using test so the user I created and logged in as was not available in the browser.\nI tried to set .env.dusk.local and I tried phpuni.dusk.xml none of it worked so I had to remove \u0026lt;env name=\u0026quot;DB_DATABASE\u0026quot; value=\u0026quot;test\u0026quot;/\u0026gt;\nThis is a bummer and I am sure I am missing something. What this means and my tests reset my database for my local app which ideally it would not since it is really nice to keep state.\n","relPermalink":"/posts/221/","summary":"By default I set my phpunit.xml to use test as my database:\n \u0026lt;php\u0026gt;\r\u0026lt;env name=\u0026quot;APP_ENV\u0026quot; value=\u0026quot;testing\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;CACHE_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;SESSION_DRIVER\u0026quot; value=\u0026quot;array\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;MAIL_DRIVER\u0026quot; value=\u0026quot;log\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;QUEUE_DRIVER\u0026quot; value=\u0026quot;sync\u0026quot;/\u0026gt;\r\u0026lt;env name=\u0026quot;DB_DATABASE\u0026quot; value=\u0026quot;test\u0026quot;/\u0026gt; \u0026lt;-- this line here \u0026lt;/php\u0026gt;\rBut with Valet and Dusk this led to the browser using my default database and not test but the PHPUnit test itself was using test so the user I created and logged in as was not available in the browser.","tags":["note2self","laravel","testing"],"title":"Laravel, Dusk and Valet"},{"content":"Sending Docker Commands to Get A Task Done This article will show how to get started with AWS Batch and Docker to spin up a \u0026ldquo;worker\u0026rdquo;\nBy the time you are done reading it you will:\n Have a Docker image to run your command in. Deploy the Docker image to AWS ECR And Run a Task on the AWS Batch system, or a 100 tasks, does not matter. Finally you will have the scripts needed to fully build AWS Batch with CloudFormation, e.g. super simple  Building the Laravel Worker This can be any language you want, any framework or none! I will focus on Laravel.\nEither way we need a git repo, so later we can push this and do a Docker build on the CI via the deploy scripts.\nNote the 2 Commands\n One to manage all the Tasks and then stitch the results together One to just covert the image to PDF \u0026ndash; depend on?  Install SDK\nThe Command Before you get going install AWS CLI on your machine.\nMake sure you have your credentials and profiles setup per the docs here\nThen the rest will work off those credentials as we make new ones per application and you just place them into your profile via ~/.aws/credentials and ~/.aws/config\nInstalling Incomings Building the Docker container to run this work docker-compose build //this will be needed locally docker-compose run --rm -w /app app php artisan docker-compose run app php artisan security:scan --git-repo=https://github.com/alnutile/security-scanner-show-error-poc\rdocker-compose run -w /app app php artisan batch:convert_image_to_pdf --image-url=https://dl.dropboxusercontent.com/s/d2sx0wjheb7dk0p/example_batch.jpg --destination=batch-example/foo\rSetting up AWS to run the work on. Compute Environment For starters there is the Compute Environment (CE). This is what manages the scaling of the EC2 instances.\nThe script is HERE. But this is only needed once. I will Explain in a moment.\nJob Definition Then there is the JobDefinitions. This is where we can define the Job we want to run and the Compute Environment to run it on. Let the CE figure out the scaling, and hence we can just build one and share it with every one. So if you have a CE already build try putting your JobDefinition on that before making another one for your Worker.\nThe script is HERE.\nOpen the scripts, they are just JSON. Good docs are HERE on how to make, or read these scripts.\nOnce those are all setup take the AWS KEY and Secret it gave you and use it to setup you local AWS CLI.\nThis is key for a sane workflow. Here is a link [HERE] get your profile right.\nOnce you have this setup all the rest will fall into place.\nDeploying to CI Before we push let\u0026rsquo;s make sure that .gitignore has:\ndocker/app/packaged/*\r!docker/app/packaged/.gitkeep\rPlus all the default Laravel ignores including .env\nDeploy Script Now we need to get this work to CI\nGoing to AWS UI to run This is annoying lets make a command for this\u0026hellip;\nThe Testing Command More import that is how a \u0026ldquo;requesting\u0026rdquo; app will call this.\nDIAGRAM HERE\nPutting it all together Show running 10 jobs via the command\nNow Taking it a bit further The command did a lot\n Got Image Made into PDF Stitched them all together  But now let\u0026rsquo;s take this a bit further. I am going to make 2 JobDefinitions.\nOne will kick off an orchestrate the work by creating a job per image, tracking the progress of those jobs, and When all those jobs are done knit them together!\nHere is how it will look.\nSummary of Install Get Docker file in place docker/app/DockerFile Get Packaged file in place Setup Core CloudFormation\n ECR JobDefinition User Key/Secret Get docker-compose inlace Get Travis.yml in place and docker/deploy.bash See diagram on how this all comes together  ","relPermalink":"/posts/220/","summary":"Sending Docker Commands to Get A Task Done This article will show how to get started with AWS Batch and Docker to spin up a \u0026ldquo;worker\u0026rdquo;\nBy the time you are done reading it you will:\n Have a Docker image to run your command in. Deploy the Docker image to AWS ECR And Run a Task on the AWS Batch system, or a 100 tasks, does not matter. Finally you will have the scripts needed to fully build AWS Batch with CloudFormation, e.","tags":["laravel","note2self","aws","wip"],"title":"WIP AWS Batch and Workers with Laravel"},{"content":"This all comes down to me using https://github.com/orchestral/testbench\nWith this in place I can work on an external library as if it is in Laravel.\nThe one place I ran into trouble on though was mocking model related methods like all for example a model Foo being called as \\App\\Foo::all() was hard to mock cause all is stacic:\n//\\Illuminate\\Database\\Eloquent\\Model::all\rpublic static function all($columns = ['*'])\r{\rreturn (new static)-\u0026gt;newQuery()-\u0026gt;get(\ris_array($columns) ? $columns : func_get_args()\r);\r}\rBut once I did this to my test:\n public function testGetWithNoResults()\r{\r$mock = \\Mockery::mock(\u0026quot;alias:AlfredNutileInc\\LaravelFeatureFlags\\FeatureFlag\u0026quot;);\r$mock-\u0026gt;shouldReceive('all')-\u0026gt;once()-\u0026gt;andReturn([]);\rApp::instance(FeatureFlag::class, $mock);\r$fjs = new FeatureFlagsForJavascript();\r$this-\u0026gt;assertEmpty($fjs-\u0026gt;get());\r}\rIt was mocked!\n","relPermalink":"/posts/219/","summary":"This all comes down to me using https://github.com/orchestral/testbench\nWith this in place I can work on an external library as if it is in Laravel.\nThe one place I ran into trouble on though was mocking model related methods like all for example a model Foo being called as \\App\\Foo::all() was hard to mock cause all is stacic:\n//\\Illuminate\\Database\\Eloquent\\Model::all\rpublic static function all($columns = ['*'])\r{\rreturn (new static)-\u0026gt;newQuery()-\u0026gt;get(\ris_array($columns) ?","tags":["laravel","note2self"],"title":"Mocking Models OutSide of Laravel"},{"content":"Because much of serveless.com is CloudFormation based, you can easily update existing resources. They talk about this feature here\nFor me this was required for adding tags\n# you can add CloudFormation resource templates here\rresources:\rResources:\rServerlessDeploymentBucket:\rProperties:\rTags:\r- { Key: \u0026quot;project\u0026quot;, Value: \u0026quot;${self:provider.project}\u0026quot; }\r- { Key: \u0026quot;environment\u0026quot;, Value: \u0026quot;${opt:stage, self:provider.stage}\u0026quot; }\r- { Key: \u0026quot;parent_project\u0026quot;, Value: \u0026quot;${self:custom.parent}\u0026quot; }\r- { Key: \u0026quot;key_contact\u0026quot;, Value: \u0026quot;${self:custom.contact}\u0026quot; }\r- { Key: \u0026quot;billing_ref\u0026quot;, Value: \u0026quot;${self:custom.billing_ref}\u0026quot; }\rnow that bucket, that Severless makes by default, will have tags.\nAlso I need to tag Lambda functions too for billing:\nfunctions:\rcheck_queue:\rhandler: handler.check_queue\rtags:\rproject: ${self:provider.project}\renvironment: ${opt:stage, self:provider.stage}\rparent_project: ${self:custom.parent}\rkey_contact: ${self:custom.contact}\rbilling_ref: ${self:custom.billing_ref}\revents:\rSome of this info I centralize in this area here\ncustom:\rsecrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}\rcontact: AlfredNutile\rbilling_ref: foo_app\rparent: foo_app\rSome of this I can drive using this plugin serverless-secrets-plugin here\nSo I then pull in the secrets file and use it as needed.\nprovider:\rname: aws\rstage: dev\rruntime: nodejs6.10\renvironment:\rAPP_ENV: ${self:custom.secrets.APP_ENV}\rREGION: ${self:custom.secrets.REGION}\rACCOUNT_ID: 555555555\r","relPermalink":"/posts/217/","summary":"Because much of serveless.com is CloudFormation based, you can easily update existing resources. They talk about this feature here\nFor me this was required for adding tags\n# you can add CloudFormation resource templates here\rresources:\rResources:\rServerlessDeploymentBucket:\rProperties:\rTags:\r- { Key: \u0026quot;project\u0026quot;, Value: \u0026quot;${self:provider.project}\u0026quot; }\r- { Key: \u0026quot;environment\u0026quot;, Value: \u0026quot;${opt:stage, self:provider.stage}\u0026quot; }\r- { Key: \u0026quot;parent_project\u0026quot;, Value: \u0026quot;${self:custom.parent}\u0026quot; }\r- { Key: \u0026quot;key_contact\u0026quot;, Value: \u0026quot;${self:custom.contact}\u0026quot; }\r- { Key: \u0026quot;billing_ref\u0026quot;, Value: \u0026quot;${self:custom.","tags":["serverless","aws"],"title":"Serverless and Custom Tags for Resources"},{"content":"At work Andrew Cavanagh and I had to, using many examples on of libraries we use, to finalize how to branch and version our libraries.\nThere should be one branch for each major version (1.0, 2.0, etc).\nThese should be the only branches besides master.\nReleases within these versions should be tagged following semantic versioning guidlines (v1.2.3 for example).\nIn general, all work should be done via pr from the master branch and then merged into whatever the current branch is.\nThe only exception is when you are making minor or patch version changes to a previous version.\nFor example, if the most current version is 2.0, then any changes to master via pr and then merged in to the 2.0 branch. However, at that point any changes required by the 1.0 branch would be made via pr off of the 1.0 branch. See fig.1 for an example.\nfigure 1\nWhen creating a new version, the package\u0026rsquo;s composer.json should alias dev-master to the latest version:\n\u0026quot;extra\u0026quot;: {\r\u0026quot;branch-alias\u0026quot;: {\r\u0026quot;dev-master\u0026quot;: \u0026quot;3.0-dev\u0026quot;\r}\r},\r","relPermalink":"/posts/218/","summary":"At work Andrew Cavanagh and I had to, using many examples on of libraries we use, to finalize how to branch and version our libraries.\nThere should be one branch for each major version (1.0, 2.0, etc).\nThese should be the only branches besides master.\nReleases within these versions should be tagged following semantic versioning guidlines (v1.2.3 for example).\nIn general, all work should be done via pr from the master branch and then merged into whatever the current branch is.","tags":["laravel","versioning","note2self"],"title":"Versions and Branching a Library"},{"content":"Great videos here:\n https://laracasts.com/lessons/dev-machine-setup https://laracasts.com/lessons/dev-machine-setup-phpstorm  Items  MindNode EverNote TextExpander Dropbox 1Password Alfred  Extensions  DND https://github.com/mlantz/DND-Alfred-Workflow  Clipboard History which seems to be part of it but needs to be put on       Misc Napkin Scanner Moom SequelPro iTerm SSH Keys Bartender Brew PHP7 (using brew https://developerjack.com/blog/2016/installing-php71-with-homebrew/) Composer Python  Setup Composer Global path touch ~/.bashrc\nThen\nexport PATH=~/.composer/vendor/bin:$PATH\rthen source ~/.bashrc\nZshell chsh -s /bin/zsh\rMake sure to add alias to it:\nvim ~/.zshrc\rAdd\n. ~/.aliases\rthen\ntouch ~/.aliases\rThat file right now looks like this for me\nalias pickle=\u0026quot;~/Code/gherkin5.4/workbench/alfred-nutile-inc/gd/pickle\u0026quot;\ralias vssh=\u0026quot;cd ~/Homestead \u0026amp;\u0026amp; vagrant ssh\u0026quot;\ralias vp=\u0026quot;cd ~/Homestead \u0026amp;\u0026amp; vagrant provision\u0026quot;\ralias vhalt=\u0026quot;cd ~/Homestead \u0026amp;\u0026amp; vagrant halt\u0026quot;\ralias hedit=\u0026quot;subl ~/.homestead/Homestead.yaml\u0026quot;\ralias vup=\u0026quot;cd ~/Homestead \u0026amp;\u0026amp; vagrant up\u0026quot;\ralias docker-composer=\u0026quot;docker-compose\u0026quot;\rthen\nsource ~/.zshrc\rSublime shortcut cd /usr/local/bin\rln -s \u0026quot;/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\u0026quot; subl\r","relPermalink":"/posts/215/","summary":"Great videos here:\n https://laracasts.com/lessons/dev-machine-setup https://laracasts.com/lessons/dev-machine-setup-phpstorm  Items  MindNode EverNote TextExpander Dropbox 1Password Alfred  Extensions  DND https://github.com/mlantz/DND-Alfred-Workflow  Clipboard History which seems to be part of it but needs to be put on       Misc Napkin Scanner Moom SequelPro iTerm SSH Keys Bartender Brew PHP7 (using brew https://developerjack.com/blog/2016/installing-php71-with-homebrew/) Composer Python  Setup Composer Global path touch ~/.bashrc\nThen\nexport PATH=~/.composer/vendor/bin:$PATH\rthen source ~/.","tags":["note2self"],"title":"Setting Up My Mac"},{"content":"Just a note2self really.\nSetting up Auth was super easy\nAs seen below I had to add to my serverless.yml authorizer\n addQuote:\rhandler: quote/handler.add\revents:\r- http:\rpath: quote\rmethod: post\rcors: true\rauthorizer: aws_iam\rauthorizer: aws_iam\nFrom here I then needed, in this case Postman, to pass an AWS KEY and SECRET made for this app.\nWhen making the user I attached this Policy to the user\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;execute-api:Invoke\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:execute-api:us-east-1:AWS_ID:*/dev/POST/quote\u0026quot;\r}\r]\r}\rI an easily make this in the serverless.yml file by adding the following:\n\rresources:\rResources:\rs3Data:\rType: AWS::S3::Bucket\rProperties:\rBucketName: \u0026quot;${self:custom.bucket}\u0026quot;\rVersioningConfiguration:\rStatus: Enabled\rquotePolicy:\rType: AWS::IAM::Policy\rProperties:\rPolicyName: \u0026quot;serverless-quotes-policy-${opt:stage, self:provider.stage}\u0026quot;\rPolicyDocument:\rVersion: \u0026quot;2012-10-17\u0026quot;\rStatement:\r-\rEffect: \u0026quot;Allow\u0026quot;\rAction:\r- \u0026quot;execute-api:Invoke\u0026quot;\rResource: \u0026quot;arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/${opt:stage, self:provider.stage}/POST/quote\u0026quot;\rUsers:\r- \u0026quot;serverless-quotes-${opt:stage, self:provider.stage}\u0026quot;\rDependsOn:\r- authUser\ruserKey:\rType: AWS::IAM::AccessKey\rProperties:\rUserName: \u0026quot;serverless-quotes-${opt:stage, self:provider.stage}\u0026quot;\rDependsOn:\r- authUser\rauthUser:\rType: AWS::IAM::User\rProperties:\rUserName: \u0026quot;serverless-quotes-${opt:stage, self:provider.stage}\u0026quot;\rOutputs:\rUserSecret:\rDescription: The user secret\rValue:\r\u0026quot;Fn::GetAtt\u0026quot;: [ userKey, SecretAccessKey ]\rUserKey:\rDescription: The user key\rValue:\r\u0026quot;Ref\u0026quot;: userKey\rThis is after adding serverless-pseudo-parameters plugin, see link below.\nNow when I run sls deploy --stage dev I get the User, IAM, Key and Secret (via the webui output), then I need to access this url.\nThat was it. With serverless.com I could have limited stage, production builds to the unique user per stack as well.\nLinks https://aws.amazon.com/premiumsupport/knowledge-center/iam-authentication-api-gateway/\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/pseudo-parameter-reference.html\nhttps://serverless.com/framework/docs/providers/aws/guide/serverless.yml/#serverlessyml-reference\n","relPermalink":"/posts/214/","summary":"Just a note2self really.\nSetting up Auth was super easy\nAs seen below I had to add to my serverless.yml authorizer\n addQuote:\rhandler: quote/handler.add\revents:\r- http:\rpath: quote\rmethod: post\rcors: true\rauthorizer: aws_iam\rauthorizer: aws_iam\nFrom here I then needed, in this case Postman, to pass an AWS KEY and SECRET made for this app.\nWhen making the user I attached this Policy to the user\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;execute-api:Invoke\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:execute-api:us-east-1:AWS_ID:*/dev/POST/quote\u0026quot;\r}\r]\r}\rI an easily make this in the serverless.","tags":["serverless.com","aws","serverless"],"title":"Serverless, AWS API Gateway and Authentication"},{"content":"A colleague of mine Dave Hall poing out IronFunctions. And being in the pursuit of serverless options especially ones that even have examples of PHP I had to give it a try. This post is a note2self in that the intro here has some bits that need fixing BUT I think it is close and I hope to add more updates here about the tool.\nAll the steps below will only work once you take on the initial hello world here. After that you have the fn cli tool installed and a running local iron-functions server.\nFor one I needed to apply each patch seen here\nOnce I had all that in place I re-reran the fn install command from the folder where I download the iron-io/functions repo into\ncd ../functions\rcurl -LSs https://goo.gl/VZrL8t | sh\rThen I restarted the service\ndocker run --rm -it --name functions -v ${PWD}/data:/app/data -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 iron/functions\r btw you need to have Docker working on your machine. This is so easy now that, for example mac, it should be a gui install.\n Ok now back to my example project\ncd ../example_php\rIn here I have several files since the above fix\nworker.php\rfunc.yml\rDockerfile\r the cat hello.payload.php in the example docs did not work so I used curl and POST instead but this is not what I want to do I want to test this from the CLI first so will come back to that later\n This folder has a composer.json file. Just run composer init since it just needs to be a basic install of PHP.\nworker.php\n\u0026lt;?php\rrequire 'vendor/autoload.php';\rstream_set_blocking(STDIN, 0);\r$payload = json_decode(file_get_contents(\u0026quot;php://stdin\u0026quot;), true);\rif (isset($payload['name'])) {\rvar_dump($payload);\recho \u0026quot;Hello 2 \u0026quot;, $payload['name'],\u0026quot;!\\n\\n\u0026quot;;\r} else {\rvar_dump($payload);\recho \u0026quot;Hello World 2!\\n\\n\u0026quot;;\r}\rfunc.yml\nname: alnutile/hello\rversion: 0.0.7\rruntime: php\rentrypoint: ./func\rbuild:\r- docker run --rm -v \u0026quot;$PWD\u0026quot;:/worker -w /worker iron/php:dev composer install\rDockerfile\nFROM iron/php\rWORKDIR /app\rADD . /app\rENTRYPOINT [\u0026quot;php\u0026quot;, \u0026quot;worker.php\u0026quot;]\rThen as the docs note https://github.com/iron-io/functions/tree/master/examples/hello/php I do all the install steps.\nOnce those are done ran curl to see it work:\n\u0026gt;curl -X POST http://localhost:8080/r/phpapp1/hello -d '{ \u0026quot;name\u0026quot;: \u0026quot;bar\u0026quot; }'\r Which results in:\narray(1) {\r[\u0026quot;name\u0026quot;]=\u0026gt;\rstring(3) \u0026quot;bar\u0026quot;\r}\rHello 2 bar!\rFor updates I added one more file update.sh\n#!/bin/sh\r# update a function with a new version and push it\rfn bump \u0026amp;\u0026amp; fn build \u0026amp;\u0026amp; fn push\r# then update the route\rfn routes update phpapp1 /hello\rjust to save some time there.\nMore soon on using this with Lumen and other options. I tried this but some PHP items are missing on the Alpine docker image to make this work.\n","relPermalink":"/posts/213/","summary":"A colleague of mine Dave Hall poing out IronFunctions. And being in the pursuit of serverless options especially ones that even have examples of PHP I had to give it a try. This post is a note2self in that the intro here has some bits that need fixing BUT I think it is close and I hope to add more updates here about the tool.\nAll the steps below will only work once you take on the initial hello world here.","tags":["php","ironfunctions","note2self"],"title":"IronFunctions and PHP"},{"content":"In an effort to start recording test coverage using vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover I had some issues with traits being seen.\nI tried numerous approaches my default being just to Use the trait in the test class. I ended up with this as I found some online info about trait testing here that references a now missing post by Sebastian Bergman the maker of PHPUnit\n\u0026lt;?php\ruse Symfony\\Component\\Yaml\\Yaml;\r/**\r* Test class for {@see PfawsYaml}.\r*\r* @covers \\PfAws\\Traits\\PfawsYaml\r*/\rclass PfawsYamlTest extends TestCase\r{\r/**\r* The object under test.\r*\r* @var object\r*/\rprotected $traitObject;\rpublic function setUp()\r{\rparent::setUp(); // TODO: Change the autogenerated stub\r$this-\u0026gt;traitObject = $this-\u0026gt;createObjectForTrait();\r}\r/**\r* *Creation Method* to create an object for the trait under test.\r*\r* @return object The newly created object.\r*/\rprivate function createObjectForTrait()\r{\r$traitName = '\\PfAws\\Traits\\PfawsYaml';\rreturn $this-\u0026gt;getObjectForTrait($traitName);\r}\r/**\r* coversDefaultClass loadPfawsYaml\r*/\rpublic function testLoadPfawsYaml()\r{\r$path = __DIR__ . '/fixtures/pfaws.yaml';\r$results = $this-\u0026gt;traitObject-\u0026gt;loadPfawsYaml('staging', $path);\r$this-\u0026gt;assertEquals(\u0026quot;bar2\u0026quot;, $results-\u0026gt;getPfawsYamlEnv('aws_key'));\r$this-\u0026gt;assertEquals(\u0026quot;foo2\u0026quot;, $results-\u0026gt;getPfawsYamlEnv('aws_secret'));\r$this-\u0026gt;assertNotNull($this-\u0026gt;traitObject-\u0026gt;getPfawsyaml());\r}\r/**\r* @coversDefaultClass getPfawsYamlEnv\r*/\rpublic function testGetPfawsYamlEnv()\r{\r$path = __DIR__ . '/fixtures/pfaws.yaml';\r$results = $this-\u0026gt;traitObject-\u0026gt;loadPfawsYaml('staging', $path);\r$this-\u0026gt;assertEquals(\u0026quot;bar2\u0026quot;, $results-\u0026gt;getPfawsYamlEnv('aws_key'));\r$this-\u0026gt;assertEquals(\u0026quot;foo2\u0026quot;, $results-\u0026gt;getPfawsYamlEnv('aws_secret'));\r}\r/**\r* @coversDefaultClass getPfawsyaml\r*/\rpublic function testGetPfawsyaml()\r{\r$path = __DIR__ . '/fixtures/pfaws.yaml';\r$results = $this-\u0026gt;traitObject-\u0026gt;loadPfawsYaml('staging', $path);\r$this-\u0026gt;assertNotNull($results-\u0026gt;getPfawsyaml());\r$this-\u0026gt;assertNotNull($results);\r$this-\u0026gt;assertEquals(\u0026quot;bar2\u0026quot;, $results-\u0026gt;getPfawsYamlEnv('aws_key'));\r$this-\u0026gt;assertEquals(\u0026quot;foo2\u0026quot;, $results-\u0026gt;getPfawsYamlEnv('aws_secret'));\r}\r/**\r* @coversDefaultClass setS3\r*/\rpublic function testSetS3() {\r$path = __DIR__ . '/fixtures/pfaws.yaml';\r$this-\u0026gt;traitObject-\u0026gt;loadPfawsYaml('staging', $path);\r$this-\u0026gt;traitObject-\u0026gt;setS3();\r$filesystem = \\League\\Flysystem\\AwsS3v3\\AwsS3Adapter::class;\r$this-\u0026gt;assertInstanceOf($filesystem, $this-\u0026gt;traitObject-\u0026gt;getS3());\r}\r/**\r* @coversDefaultClass getPfawsYamlKeyValue\r*/\rpublic function testGetPfawsYamlKeyValue() {\r$path = __DIR__ . '/fixtures/pfaws.yaml';\r$this-\u0026gt;traitObject-\u0026gt;loadPfawsYaml('staging', $path)-\u0026gt;setS3();\r$app_name = $this-\u0026gt;traitObject-\u0026gt;getPfawsYamlKeyValue('app_name');\r$this-\u0026gt;assertEquals('foo', $app_name);\r}\r}\rThe annotations are for the coverage to know what I am testing.\nThis area puts the Trait in to an object using a method provided by PHPUnit:\n/**\r* *Creation Method* to create an object for the trait under test.\r*\r* @return object The newly created object.\r*/\rprivate function createObjectForTrait()\r{\r$traitName = '\\PfAws\\Traits\\PfawsYaml';\rreturn $this-\u0026gt;getObjectForTrait($traitName);\r}\r And then I run vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover and the coverage was boosted / recognized.\nOn a side note adding to my phpunit.xml\n \u0026lt;logging\u0026gt;\r\u0026lt;log\rtype=\u0026quot;coverage-html\u0026quot;\rtarget=\u0026quot;./docs/coverage\u0026quot;\rcharset=\u0026quot;UTF-8\u0026quot;\ryui=\u0026quot;true\u0026quot;\rlowUpperBound=\u0026quot;35\u0026quot;\rhighLowerBound=\u0026quot;70\u0026quot;\rshowUncoveredFiles=\u0026quot;true\u0026quot;\r/\u0026gt;\r\u0026lt;log\rtype=\u0026quot;coverage-text\u0026quot;\rtarget=\u0026quot;php://stdout\u0026quot;\rlowUpperBound=\u0026quot;35\u0026quot;\rhighLowerBound=\u0026quot;70\u0026quot;\r/\u0026gt;\r\u0026lt;/logging\u0026gt;\rGave me some really nice code coverage information\n","relPermalink":"/posts/212/","summary":"In an effort to start recording test coverage using vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover I had some issues with traits being seen.\nI tried numerous approaches my default being just to Use the trait in the test class. I ended up with this as I found some online info about trait testing here that references a now missing post by Sebastian Bergman the maker of PHPUnit\n\u0026lt;?php\ruse Symfony\\Component\\Yaml\\Yaml;\r/**\r* Test class for {@see PfawsYaml}.","tags":["php","testing","phpunit"],"title":"Testing a trait with PHPUnit"},{"content":"Recently I needed to create an OAuth around Machine to Machine authentication here\nThe docs are good but I must have missed something obvious or maybe I just well missed something obvious.\nBasically I just kept getting Unauthenticated. and this makes sense since I received the token using\ngrant_type:client_credentials\rclient_id:1\rclient_secret:foobar\rSo after following the docs I had to then to the following\nRoute::middleware('auth:api')-\u0026gt;get('/user', function (Request $request) {\rreturn $request;\r});\rwith\nRoute::middleware('auth.client')-\u0026gt;get('/user', function (Request $request) {\rreturn \u0026quot;FOO\u0026quot;;\r});\r\u0026lsquo;auth.client\u0026rsquo; being key!\nAnd updated app/Http/Kernel.php:\n protected $routeMiddleware = [\r'auth' =\u0026gt; \\Illuminate\\Auth\\Middleware\\Authenticate::class,\r'auth.basic' =\u0026gt; \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\r'bindings' =\u0026gt; \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\r'can' =\u0026gt; \\Illuminate\\Auth\\Middleware\\Authorize::class,\r'guest' =\u0026gt; \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\r'throttle' =\u0026gt; \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\r'auth.client' =\u0026gt; \\Laravel\\Passport\\Http\\Middleware\\CheckClientCredentials::class,\r];\rAdding auth.client then I was back in business.\n","relPermalink":"/posts/211/","summary":"Recently I needed to create an OAuth around Machine to Machine authentication here\nThe docs are good but I must have missed something obvious or maybe I just well missed something obvious.\nBasically I just kept getting Unauthenticated. and this makes sense since I received the token using\ngrant_type:client_credentials\rclient_id:1\rclient_secret:foobar\rSo after following the docs I had to then to the following\nRoute::middleware('auth:api')-\u0026gt;get('/user', function (Request $request) {\rreturn $request;\r});\rwith","tags":["laravel","passport"],"title":"Machine to Machine Laravel Passport"},{"content":"Wrote and article https://medium.com/@alnutile/meetings-and-cross-timezone-teams-c9b833c43bfb on trying to find the blanance of meetings and focus time.\nSaved here as well for when they go out of business :)\nMeetings and Cross TimeZone Teams Meetings are needed, most of them at least, and when I worked with a team that was all in the same timezone I was easily able to say, ‚ÄúBetween 1‚Äì4 I am coding/focusing‚Äù or ‚ÄúBetween 6am and 9am‚Äù I am coding. Then the rest of the day was for meetings, interruptions and just helping out on things.\n Blocking out time to Code/Focus and get the work done is key and without that it is hard to not find yourself working after hours when it is ‚Äúquiet‚Äù\n One book that pointed this out to me was REWORK by the people at 37 Signals.\nBut now being in different timezones things get much harder. My ‚Äúcoding time‚Äù now does not overlap with someone else who is leaving soon since they are UTC+1 for example. And to top it off there is Slack :( Slack.\n Group chat is like being in an all-day meeting with random participants and no agenda.‚Ää‚Äî‚ÄäJason Fried Is group chat making you sweat? Al: Okay so I do not agree with this 100% :)\n Overall when I start having to work at night to get my coding work done, that is when I know I have not managed my work day well with meetings and distractions. Yes for some their job is meetings. And for some Lead Developers meeting times increase but there still needs to be time to code/focus.\n If you‚Äôre a technical lead, you need to be coding.‚Ää‚Äî‚ÄäMartin Fowler\n Slack First Slack. Well this is just hard. New rooms showing up every day, new ideas going into ‚Äúaction‚Äù every moment, it truly becomes FOMO. But not so much a social FOMO as much as just falling behind in all that is going on etc. Just when I feel like I have a handle on Email, e.g I read it in the morning, lunch and end of work day and the expectations are different, then comes Slack and Chat in general. This form of communication is really all about right now or asap. Or at least I feel it is.\nSo during the day I started using https://github.com/mlantz/DND-Alfred-Workflow as a Pomodoro like tool to close down notifications. If I close them down manually I too often find myself forgetting to turn it on again.\nThis allows me to focus on what I am doing for nth minutes and coming out again to see if there are any actions or threads to take on.\nSo during the part of the day I am open for interruptions I can set it to ‚Äúdnd 25‚Äù for 25 minutes of focus etc.\nI can do this through out the day, but during the ‚Äúcoding time‚Äù or ‚Äúfocus time‚Äù I might just set ‚Äúdnd 180‚Äù so 3 hours for example.\n Giving you self enough time to get into the zone but not in too deep that you lose focus of the bigger picture is a good balance.\n Coding or Focus Time Since I can not section off a day for 3‚Äì4 hours since someone in UTC higher or lower than mine may need to meet with me I set aside days and expectations for the day.\n Setting expectations for a day no longer leaves me feeling like I got nothing (coding) done. For example at the end of Monday I feel like I got a lot done if the meetings went well and planning for the week went well.\n Monday, Tuesday Are meetings days, free to be chopped up, free to NOT get large tasks done that need focus time. These two are great days to work on organizing the week, getting all your tickets in place, pinging people in Slack about meetings and what not.\nWednesday I start protecting my day after 11am. That is when I start to take on a large task. Before that time I have time for meetings and interruptions. The last of my planning should be done by now.\nThursday and Friday These are the days for getting the work done that is on the list of items to get done. Make a realistic list for yourself. Track them using ideas like this one. And go at it. But with that said I still need to keep an eye on Slack. But as noted above how often? And let people know your cycle of focus and reply, set your status so people know you are in a Pomodoro (tomato icon?) or just tell your team when they see that you may not get back to them asap. But these two days should be not chopped into bits by meetings, slack and other context changes. StandUp? Fine maybe one quick one that is focused, but StandUps? That brings you out. So maybe limit to a Slack Standup. For these StandUps stick to the guidelines\n  What did you do yesterday What is your task(s) for today Any blockers   Point being the doing of the work needs to get done and the planning time if done properly has had it‚Äôs chance to be laid down and hopefully done well. In this case giving it almost 50% of a chance to create a work load and expectations. (for me this is okay but for a developer maybe meetings should be 20% of your week)\nAnd with these patterns in place, then ideally I find myself less feeling like I did not get enough done at the end of the day, or trying to do the ‚Äúreal work‚Äù after hours.\n","relPermalink":"/posts/210/","summary":"Wrote and article https://medium.com/@alnutile/meetings-and-cross-timezone-teams-c9b833c43bfb on trying to find the blanance of meetings and focus time.\nSaved here as well for when they go out of business :)\nMeetings and Cross TimeZone Teams Meetings are needed, most of them at least, and when I worked with a team that was all in the same timezone I was easily able to say, ‚ÄúBetween 1‚Äì4 I am coding/focusing‚Äù or ‚ÄúBetween 6am and 9am‚Äù I am coding.","tags":["developers","note2self"],"title":"Meetings and Cross TimeZone Teams"},{"content":"Working on learning Dusk and really excited to get going with it.\nBut running it in homestead proved to be a bit tricky.\nAfter following the docs and running php artisan dusk not much happened. Sure if I ran it on my Mac and it just worked but my tests needed to do migrations and what not and I want to keep my work in Homestead.\nSo a few steps later and it worked thanks to this post https://github.com/laravel/dusk/issues/50#issuecomment-275155974\nLocal host file Make sure to edit sudo vim /etc/hosts and add the APP_URL there as well\n127.0.0.1 webforms.dev\rThen make sure you can hit it from inside homestead as well.\ncurl -X GET http://webforms.dev\nAll set?\nThen run xvfb This is a virtual frame buffer that Chrome runs in. Pretty cool really https://en.wikipedia.org/wiki/Xvfb\nSo I like to use screen to start a new session\nscreen -S running_xvfb\nand then in there run\nXvfb :0 -screen 0 1280x8000x24 \u0026amp;\nNow we want to swap back to our default session CTRL+A then still holding CTRL let go of A and press D.\nYou are back at your default terminal\nType:\nvagrant@homestead:~/Code/webforms$ screen -ls\rThere is a screen on:\r16315.running_xvfb\t(04/24/2017 12:34:09 AM)\t(Detached)\r1 Socket in /var/run/screen/S-vagrant.\rNow it all just worked!\n","relPermalink":"/posts/209/","summary":"Working on learning Dusk and really excited to get going with it.\nBut running it in homestead proved to be a bit tricky.\nAfter following the docs and running php artisan dusk not much happened. Sure if I ran it on my Mac and it just worked but my tests needed to do migrations and what not and I want to keep my work in Homestead.\nSo a few steps later and it worked thanks to this post https://github.","tags":["note2self","laravel"],"title":"Dusk and Homestead"},{"content":"In this example I get a message from Slack (but this can be any message) and then send results back to Slack.\nOne thing to keep in mind you really want to get your code working out side of Slack since you cannot easily do a push, test, fix, push, test as we normally do when working locally with a browser.\nGet your PHPUnit working for a class that will handle the payload, then you know when you plug it in to the Slack Route it will \u0026ldquo;just work\u0026rdquo;.\nMore on that shortly\u0026hellip;\n\nGetting a message Going with the POST settings we will setup Slack to send a POST request to a URL we are building.\nSo I will show some tests first here and then trait here\nWe have a few features going on to consider\nAll of which I use this fixture to replicate the incoming Slack Message\n[\r{\u0026quot;token\u0026quot;: \u0026quot;foo\u0026quot;},\r{\u0026quot;team_id\u0026quot;: \u0026quot;bar\u0026quot;},\r{\u0026quot;team_domain\u0026quot;: \u0026quot;baz\u0026quot;},\r{\u0026quot;channel_id\u0026quot;: \u0026quot;C0JKRSDEV\u0026quot;},\r{\u0026quot;channel_name\u0026quot;: \u0026quot;test\u0026quot;},\r{\u0026quot;user_id\u0026quot;: \u0026quot;U02NC4UL2\u0026quot;},\r{\u0026quot;user_name\u0026quot;: \u0026quot;alfrednutile\u0026quot;},\r{\u0026quot;command\u0026quot;: \u0026quot;/hp:report\u0026quot;},\r{\u0026quot;text\u0026quot;: \u0026quot;not really needed yet\u0026quot;},\r{\u0026quot;response_url\u0026quot;: \u0026quot;https://hooks.slack.com/commands/foo/bar/baz\u0026quot;}\r]\rsee here too.\nIs this coming from the right token? testSuccessVerifiesToken and bad testVerifiesToken\nsee example here\nIs this even coming from Slack? testSuccessSlackURL and testFailWrongURL\nsee example here\nIs this person even allowed to do this? testSuccessVerifiesPerson see example here\nIs there info/text in the incoming message for me to consider testKeepSheetsAsTrue shows me looking for text.\nAgain easy stuff to test outside of Slack. here\n\nOkay Now the message is good how to send one back? The route has to becomes a non-auth and non-basic auth protected route so Slack can POST to it\nHere is my nginx default.confconfig (see docs on how to update this using CloudFormation)\nlocation /api/v1/slack/ { auth_basic \u0026quot;off\u0026quot;; allow all; satisfy any; try_files $uri $uri/ /index.php?$query_string; }\rTo allow this to happen see the full file here LINK.\nThen the route is simple routes/api.php\nRoute::group(['prefix' =\u0026gt; 'v1'], function(){\rRoute::post('slack/hp_reports', 'RunReportSlackController@handle');\rRoute::post('slack/hp_user_reports', 'RunUserLevelReportSlackController@handle');\r});\rThe Controller here does as little work as possible.\nThough I would like to move these into a Validation\n if(!$this-\u0026gt;token) {\r$this-\u0026gt;setToken(env('SLACK_TOKEN_REPORT_REQUEST'));\r}\rif($this-\u0026gt;notASlackUrl($request)) {\r$message = sprintf(\u0026quot;Not a Slack URL\u0026quot;);\rthrow new NotSlackUrlException($message);\r}\rAgain the Controller should not have to do too much.\nBut the logic is outside the controller and which now is outside the scope of the example since at this point we just have, as seen in the fixture above so do what you want with the incoming JSON.\nOnce done it sends it back to the Controller here to respond back to Slack using respondToSlack seen in SlackTrait.php here\nWhich simple breaks it up into an array\n public function respondToSlack($message, $attachment, $type = 'in_channel')\r{\rreturn ['response_type' =\u0026gt; $type, 'text' =\u0026gt; $message, 'attachments' =\u0026gt; [ ['text' =\u0026gt; $attachment ] ] ];\r}\rAttachments in this case just being more text. For our team you can see it when you type /sd behat in Slack. This request goes to our app, looks for the word(s) behat in the docs and replies back to Slack as such\nslash-command APP [11:43 AM] Your original search slack total found 3\rTitle: Holiday and other Team Processes URL: https://foo.com/team-managment\rTitle: Getting Started New to the Team URL: https://foo.com/new-to-the-team\rTitle: Onboarding Links URL: https://foo.com/onboarding-links\r\u0026ldquo;Your original search slack total found 3\u0026rdquo; in the text and the rest the \u0026ldquo;attachments\u0026rdquo; is the results we get from Slack\nENV One tricky part here is the .env\nI am looking for SLACK_TOKEN but this will get old soon if I do a few of these since they all have different tokens. I would suggest an config/slack.php to then have areas for this.\n\u0026lt;?php\rreturn [\r'slack_report' =\u0026gt; env('SLACK_TOKEN_FEATURE_FOO', '12345'),\r];\r","relPermalink":"/posts/208/","summary":"In this example I get a message from Slack (but this can be any message) and then send results back to Slack.\nOne thing to keep in mind you really want to get your code working out side of Slack since you cannot easily do a push, test, fix, push, test as we normally do when working locally with a browser.\nGet your PHPUnit working for a class that will handle the payload, then you know when you plug it in to the Slack Route it will \u0026ldquo;just work\u0026rdquo;.","tags":["slack","laravel"],"title":"Simple Slack Trait Get Request and return Response"},{"content":"This article can be listened too here or in your favorite podcast player\nWhether you are working Waterfall, or Agile we still need to quote out the time it will take for new features . We still need to give the product owners, or the people with the money, a sense of timing. And it is this skill or lack thereof that drives the experience we are going to have when we code.\nThere are many, many, many formulas around on how to quote and how not to quote. And I am not talking about Fixed Bids here those are a story in an of themselves. I am talking about sprint planning, task planning anything that is part of the relationship between you and the owner to have a sense of how much something might cost.\n And it is this skill or lack there of that drives experience we are going to have when we code\n In this article I will cover two main concepts. One is about pacing yourself for the \u0026ldquo;race\u0026rdquo; ahead. Every task/feature or what ever is like a little, or big, jog. If you start the jog not knowing how long it is then you have no clue how to pace your self. And if you have not idea where you are in the \u0026ldquo;track\u0026rdquo; or race then you have no clue if you should speed up or slow down. So to begin with we need to consider how to quote items. Second I will cover how to know where I am in the race.\n Be warned I suck at spreadsheets. I use them to their bare minimum but that is for me enough to make all the difference in my day to day work\n Who is this article for It is for developers who find themselves not working in the ideal Agile situation and maybe still in Waterfall. Where Story Points are not an option and the clients need a sense of time a feature might take so they can budget for it. This is not for Fixed bids. Sure it can work for that but those always are risky and may take different tools.\nThis is also for developers who know quoting sucks, who know things go wrong and this \u0026ldquo;technique\u0026rdquo; will help to, sooner than later, check in with the client so they and you can have a good sense of how things are really going.\nThoughts on Quoting  And above all remember, you are not building features you are building an application, so with each new feature you are responsible for the bigger picture or health of your application.\n Story points are an interesting practice BUT I find it hard to use them most of the time with clients. It seems a bit too abstract. Sure there might be a client who really get\u0026rsquo;s Story points but this article is more about that middle ground, where you want to write good code in the context of a client who is confident in the time \u0026ldquo;range\u0026rdquo; you quote for the feature.\nI am going to share some spreadsheets, but be warned I suck at spreadsheets. I use them to their bare minimum but that is for me enough to make all the difference in my day to day work.\nThe first \u0026ldquo;tool\u0026rdquo; is here basically I am doing two things. A simple Quoting template with ideas from the book \u0026ldquo;Agile Estimating and Planning\u0026rdquo; no offense to them if I got it totally wrong.\nFirst I will write out all the tasks that make this feature. And second I will write down assumptions so I make sure they are presented to the client as well.\nKeep in mind this is not quoting out an entire project. Sure you can do that but I will focus on a feature. Some of which might take a week or two weeks or maybe less.\nThis sheet will take your items and instead of buffering each item it will buffer the results and add them to the total of the columns you quoted at 60% confidence to hopefully end up with a more realistic result. I will cover Confidence levels in a moment.\nAnd as the book \u0026ldquo;Agile Estimating and Planning\u0026rdquo;; which I link to below, notes if you buffer each item then you are going to end up with too high of a quote, so that is why we use this formula.\nThe book uses a really simple example of having to do 5 things in the morning before going to the airport. If you buffer all 5 things then you will end up in the airport way too early. But with this approach you end up with a better buffer.\nConfidence Level To begin with I consider confidence levels. Have I done this before, has it been done before, etc. Then I quote at two levels. 60% confidence and 90% confidence.\nIt is these two numbers that help us make the final \u0026ldquo;buffered\u0026rdquo; results.\nWhat to consider in this thinking? This is what at my job, we call a \u0026ldquo;Done Done\u0026rdquo; list.\n Testing Documentation Time to model out ideas Feedback CI and deployment Manual QA Deployment  Seriously give your self time to do these things right!\nAnd above all remember, you are not building a features you are building an application, so with each new feature you are responsible for the bigger picture or health of your application.\nTake time to consider what else this feature might be touching that needs to be fixed, tightened up or just made better. Should you include all of these little touches in your conversation with the client? In my opinion no, I think you are responsible for so much that already does not always get brought up in conversations that this falls in that area. For example maybe you know testing is weak because you had to rush the last feature, well add a few more tests while doing this feature. I think that this type of detail work goes beyond any todo list and is just the nature of being an artisan building and maintaining such a complex system.\nRemember in the end if your buffer is too big or too small it leaves you in an unprofessional situation. As a professional I want to have a sense of honesty with the client that I am not over quoting items so I can sit around on Facebook or over compensate for my lack of skill in quoting. And that I am not under quoting forcing myself into a situation where I am not able to deliver a quality product and not enjoy quality coding time.\nIt is key to keep each item in this sheet under one day. I will cover that shortly.\nTicket System Numbers You will notice in my sheet a column for \u0026ldquo;Ticket System Numbers\u0026rdquo;. This number I will use in the sheet that helps me pace myself. It is not a perfect number but it is a flexible formula (I change as needed) so the total matches the total that comes from the overall buffer the system makes for me. I could maybe make it a bit more dynamic and relative to the spread of each item related to the 60% and 90% quote but in the mean time I just adjust the multiplier as needed till the total matches the \u0026ldquo;Total Days\u0026rdquo; that system originally totaled up for me. Not ideals but just to help me pace myself in the bigger picture of the total time quoted.\nAssumptions Before I move on to \u0026ldquo;Pacing Yourself\u0026rdquo; I want to note this area of the sheet. This is very import. The hardest part of our job is not coding but communicating with other humans, especially those who we are trying to comprehend what it is they want us to build.\n The hardest part of our job is not coding but communicating with other humans, especially those who we are trying to comprehend what it is they want us to build\n So write them out, no matter how dumb they might sound and review them with the client to make sure you are both assuming the same things.\nPacing Yourself  Human nature, in my opinion, when we do not know the length of the course we are on, is too start off too slow and end off in a desperate pace when finally we see the finish line and realize it is too late.\n The client approved your numbers now it is time to start the project. Ah the first few days, so nice, so easy to relax, write a test, go for a jog, code slowly, chit chat on Slack but then it happens! You finally see there is a week left in the project, you can finally see the due date outside the abstraction of gantt charts or a ticket system, and you finally see you have a ton more work to do, and you start to run really, really fast, do not sleep, eat, do not test, do not QA or do anything but code hoping to get to the finish line.\nFor me this very simple system showed me how I can easily start and manage my pace. Not only that but help me to see when I am falling behind as early as possible, so I can talk to the client and let them know up front what is happening. It is a lot nicer for them to see 2 weeks before the deadline versus 2 days before the deadline how the project is really going.\n I hated when managers asked me how are things going as if I could stick my thumb in the air to measure the wind and tell them \u0026ldquo;Yup things are great project is on time\u0026rdquo;\n The simple stupid spread sheet can be seen here the broken site explaining it is here by Joel Wenzel\nAnd let\u0026rsquo;s keep it simple stupid by following a few key rules.\nOne, who cares if you are 1/2 way done or 75% done or 90% done, it is just not done. So an item is either Complete or not. And until it is Complete do not consider it as a task done. Once Complete then add that day to the section where you total up the work you did for that day.\nSecond, check in the morning and see how to pace your day. It is a great way to start.\nThird, you will not make up time! So do not start behind, and once you fall behind talk sooner than later to the client. It might be hard to admit you are falling behind but do it.\nFourth, one day tops per quoted item. No item can be more than a day, why? Cause you will fool yourself and if an item is say 2 days long and on the 3rd day you finally admit to yourself you fell behind then now you are possibly 2-3 more days behind than you think. Where if you had it at one day then by the next day\u0026rsquo;s morning check in you would know that you are not done and falling behind.\nThat really is it for this, keep it simple, check in daily and keep the tasks small.\nSpikes Quoting is hard. I mean how do you quote things you have never done before! Sometimes a Spike is a great way to just say to the client, I am not sure how long this will take, let me take 1-2 days to take a stab at it, paid days of course, and then let\u0026rsquo;s see what comes from that. If anything you will have a sense of how possible the task is and in what timeframe. In a Spike you can set aside some of the detail work and just code away knowing the code will be thrown out once done. You are mainly just trying to get an idea of how and if this task is possible.\nWell, that is it! I just wanted to share these simple tools and concepts that I think are really key to coding in the context of less stressful expectations and therefore giving your self space to code well and happily.\nLinks to Resources Agile Estimating and Planning here\nJoel\u0026rsquo;s burn down here\nMy Quoting Template here Figured from the book linked to above\n","relPermalink":"/posts/207/","summary":"This article can be listened too here or in your favorite podcast player\nWhether you are working Waterfall, or Agile we still need to quote out the time it will take for new features . We still need to give the product owners, or the people with the money, a sense of timing. And it is this skill or lack thereof that drives the experience we are going to have when we code.","tags":["coding","planning"],"title":"We Code in the Context of our Quoting"},{"content":"When I need to make a request for a test in which the Class is expecting a \\Illuminate\\Http\\Request I can do this for a file based or non file based request.\n /**\r* @Then I should be able to upload an image file\r*/\rpublic function iShouldBeAbleToUploadAnImageFile()\r{\r$request = new \\Illuminate\\Http\\Request();\r$file = new \\Symfony\\Component\\HttpFoundation\\FileBag();\r$path = base_path('tests/fixtures/example_profile.jpg');\r$originalName = 'example_profile.jpg';\r$upload = new \\Illuminate\\Http\\UploadedFile($path, $originalName, null, null, null, true);\r$file-\u0026gt;set('profile_image', $upload);\r$request-\u0026gt;files = $file;\r$this-\u0026gt;repo = new \\App\\Repositories\\ProfileRepository();\r$results = $this-\u0026gt;repo-\u0026gt;uploadUserProfileImage($request);\rPHPUnit::assertTrue($results, \u0026quot;Repo did not return true\u0026quot;);\rPHPUnit::assertTrue(File::exists(public_path('storage/' . $this-\u0026gt;user-\u0026gt;id . '/example_profile.jpg')), \u0026quot;File Not found\u0026quot;);\r}\rOr just Mocked\n $fixture = File::get(base_path('tests/fixtures/slack_incoming_run_report.json'));\r$fixture = json_decode($fixture, true);\r//$request = new \\Illuminate\\Http\\Request([], [], $fixture,[], [], [], false);\r$request = Mockery::mock(\\Illuminate\\Http\\Request::class);\r$request-\u0026gt;shouldReceive('all')-\u0026gt;andReturn($fixture);\r/** @var \\App\\PlannerSlackReport $report */\r$report = new \\App\\PlannerSlackReport();\r$report-\u0026gt;handle($request);\r","relPermalink":"/posts/206/","summary":"When I need to make a request for a test in which the Class is expecting a \\Illuminate\\Http\\Request I can do this for a file based or non file based request.\n /**\r* @Then I should be able to upload an image file\r*/\rpublic function iShouldBeAbleToUploadAnImageFile()\r{\r$request = new \\Illuminate\\Http\\Request();\r$file = new \\Symfony\\Component\\HttpFoundation\\FileBag();\r$path = base_path('tests/fixtures/example_profile.jpg');\r$originalName = 'example_profile.jpg';\r$upload = new \\Illuminate\\Http\\UploadedFile($path, $originalName, null, null, null, true);\r$file-\u0026gt;set('profile_image', $upload);\r$request-\u0026gt;files = $file;\r$this-\u0026gt;repo = new \\App\\Repositories\\ProfileRepository();\r$results = $this-\u0026gt;repo-\u0026gt;uploadUserProfileImage($request);\rPHPUnit::assertTrue($results, \u0026quot;Repo did not return true\u0026quot;);\rPHPUnit::assertTrue(File::exists(public_path('storage/' .","tags":["laravel","note2self","php","testing"],"title":"Instantiate Request for Testing"},{"content":"The team I am a part of write our tests using Behat for the most part as we try to practice BDD and take advantage of how writing in Gherkin can lead our code to be more inline with the language of the business.\nIn this case I wanted to replicate some file upload and processing that the system will be doing during a training that will happen next week as 4 users are uploading files and going through the entire process.\nTo do this I made an Artisan command to run these tests in parallel\n\u0026lt;?php\rnamespace App\\Console\\Commands;\ruse Illuminate\\Console\\Command;\ruse Symfony\\Component\\Process\\Process;\rclass LoadTestingCommand extends Command\r{\rpublic $processes;\rprotected $signature = 'load:testing {number} {--profile=default}';\rprotected $description = 'Run x number of load tests';\rpublic function __construct()\r{\rparent::__construct();\r}\rpublic function handle()\r{\r$this-\u0026gt;processes = [];\rforeach(range(1, $this-\u0026gt;argument('number')) as $index) {\r$this-\u0026gt;info(sprintf(\u0026quot;Start running process %d\u0026quot;, $index + 1));\r$command = $this-\u0026gt;getCommandToRun();\r$process = new Process($command);\r$process-\u0026gt;setTimeout(12000);\r$process-\u0026gt;start();\r$this-\u0026gt;processes[] = $process;\r}\rwhile(count($this-\u0026gt;processes) \u0026gt; 0) {\r/** @var Process $process */\rforeach($this-\u0026gt;processes as $key =\u0026gt; $process) {\rif(!$process-\u0026gt;isRunning()) {\r$this-\u0026gt;info(sprintf(\u0026quot;Done running process %d\u0026quot;, $key));\r$this-\u0026gt;info($process-\u0026gt;getOutput());\runset($this-\u0026gt;processes[$key]);\r}\r$this-\u0026gt;info(sprintf(\u0026quot;Still running process %d\u0026quot;, $key));\rsleep(2);\r}\r}\r}\rprivate function getCommandToRun()\r{\r$profile = $this-\u0026gt;option('profile');\r$command = sprintf(\u0026quot;vendor/bin/behat --profile=%s -se2e_load_test\u0026quot;, $profile);\rreturn $command;\r}\r}\rJust very simple for now. It allows the user to pass the number of concurrent tests to run and the profile to use, eg Staging, Production etc.\nHere is the behat.yml\nload_testing_staging:\rextensions:\rBehat\\MinkExtension:\rbase_url: https://foo-staging.bar.com\rload_testing_production:\rextensions:\rBehat\\MinkExtension:\rbase_url: https://foo.bar.com\rNow when I run the command we get 4 windows starting up interacting with the site, and a terminal running top just to see if there are any obvious issues. I could take this a lot further by running other monitoring tools on the servers but in this case I wanted to just get a sense of how well it would work for there to be x users uploading files and what not at the same time.\n","relPermalink":"/posts/205/","summary":"The team I am a part of write our tests using Behat for the most part as we try to practice BDD and take advantage of how writing in Gherkin can lead our code to be more inline with the language of the business.\nIn this case I wanted to replicate some file upload and processing that the system will be doing during a training that will happen next week as 4 users are uploading files and going through the entire process.","tags":["behat","laravel"],"title":"Load Testing With Behat"},{"content":"Sometimes I just need this info to remind myself what a job looks like in a queue and how to mock it etc.\nIn this case I have a simple class that will be used to dispatch the job.\n\u0026lt;?php\rnamespace App\\Jobs;\ruse Illuminate\\Bus\\Queueable;\ruse Illuminate\\Queue\\SerializesModels;\ruse Illuminate\\Queue\\InteractsWithQueue;\ruse Illuminate\\Contracts\\Queue\\ShouldQueue;\ruse Illuminate\\Support\\Facades\\Log;\rclass RandomWordJob implements ShouldQueue\r{\ruse InteractsWithQueue, Queueable, SerializesModels;\rpublic $payload = [];\rpublic function __construct($payload)\r{\r$this-\u0026gt;payload = $payload;\r}\r/**\r* Execute the job.\r*\r* @return void\r*/\rpublic function handle()\r{\rLog::debug(\u0026quot;Here\u0026quot;, [var_dump($this-\u0026gt;payload)]);\rdd($this-\u0026gt;payload);\r}\r}\rNotice, in this case I put an array payload into the constructor. And it is public because I want to be passed into the queue.\nWhat the payload in the queue will look like is this\n{\u0026quot;job\u0026quot;:\u0026quot;Illuminate\\\\Queue\\\\CallQueuedHandler@call\u0026quot;,\u0026quot;data\u0026quot;:{\u0026quot;commandName\u0026quot;:\u0026quot;App\\\\Jobs\\\\RandomWordJob\u0026quot;,\u0026quot;command\u0026quot;:\u0026quot;O:22:\\\u0026quot;App\\\\Jobs\\\\RandomWordJob\\\u0026quot;:5:{s:7:\\\u0026quot;payload\\\u0026quot;;a:2:{s:11:\\\u0026quot;word_number\\\u0026quot;;i:28;s:17:\\\u0026quot;destination_queue\\\u0026quot;;s:20:\\\u0026quot;docker-words-private\\\u0026quot;;}s:6:\\\u0026quot;\\u0000*\\u0000job\\\u0026quot;;N;s:10:\\\u0026quot;connection\\\u0026quot;;s:8:\\\u0026quot;requests\\\u0026quot;;s:5:\\\u0026quot;queue\\\u0026quot;;N;s:5:\\\u0026quot;delay\\\u0026quot;;N;}\u0026quot;}}\rSerialized data.\nFor a quick example of making this happen I made an Artisan command just to put job(s) into the queue so I can see this and maybe for fun just see the whole process through (but honestly it is best to mock the queue and know your class will work if the payload is right) more on that in a moment.\n\u0026lt;?php\rnamespace App\\Console\\Commands;\ruse App\\Jobs\\RandomWordJob;\ruse Illuminate\\Console\\Command;\rclass PutSampleRequestInQueue extends Command\r{\r/**\r* The name and signature of the console command.\r*\r* @var string\r*/\rprotected $signature = 'docker-work:sample-request';\r/**\r* The console command description.\r*\r* @var string\r*/\rprotected $description = 'Put a sample request into the right queue';\r/**\r* Create a new command instance.\r*\r* @return void\r*/\rpublic function __construct()\r{\rparent::__construct();\r}\r/**\r* Execute the console command.\r*\r* @return mixed\r*/\rpublic function handle()\r{\r$payload = [\r'word_number' =\u0026gt; random_int(1, 100),\r'destination_queue' =\u0026gt; \u0026quot;docker-words-private\u0026quot;\r];\r$job = (new RandomWordJob($payload))-\u0026gt;onConnection('requests');\rdispatch($job);\r}\r}\rFrom here I can now run php artisan queue:work requests --once to see my class get this job and \u0026ldquo;process it\u0026rdquo;\nTesting But now for ease of testing this Job Class I can just do this.\n /**\r* @test\r*/\rpublic function process_payload_make_word_count_and_destination_in_payload()\r{\r//Should get the number\r//make a word\r//make a payload to put back into the queue\r$payload = [\r'word_number' =\u0026gt; random_int(1, 100),\r'destination_queue' =\u0026gt; \u0026quot;docker-words-private\u0026quot;\r];\r$job = new \\App\\Jobs\\RandomWordJob($payload);\r$job-\u0026gt;handle();\rPHPUnit_Framework_Assert::assertNotNull($job-\u0026gt;getResults());\r}\rIn this case I will store some results of the process, since it is not saved in a databse for this example, in the object and then in my test prove the class did what it was suppose to do.\nBasically I know Laravel works, I know SQS works, and I know how the data will be handed to the class as it is instantiated so I am just testing the Class and how it handles the request.\nNote too like a Controller it is really key to handle inside a Try/Catch\n public function handle()\r{\rtry {\rLog::debug(\u0026quot;Here\u0026quot;, [var_dump($this-\u0026gt;payload)]);\rdd($this-\u0026gt;payload);\r} catch (\\Exception $e) {\rLog::debug(sprintf(\u0026quot;Failed to work :( %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\r","relPermalink":"/posts/204/","summary":"Sometimes I just need this info to remind myself what a job looks like in a queue and how to mock it etc.\nIn this case I have a simple class that will be used to dispatch the job.\n\u0026lt;?php\rnamespace App\\Jobs;\ruse Illuminate\\Bus\\Queueable;\ruse Illuminate\\Queue\\SerializesModels;\ruse Illuminate\\Queue\\InteractsWithQueue;\ruse Illuminate\\Contracts\\Queue\\ShouldQueue;\ruse Illuminate\\Support\\Facades\\Log;\rclass RandomWordJob implements ShouldQueue\r{\ruse InteractsWithQueue, Queueable, SerializesModels;\rpublic $payload = [];\rpublic function __construct($payload)\r{\r$this-\u0026gt;payload = $payload;\r}\r/**\r* Execute the job.","tags":["note2self","laravel"],"title":"Example Job Format for Queue"},{"content":"Just the start to a new library that I hope others will help out on https://github.com/alfred-nutile-inc/larscanner\nThere is a roadmap in the readme.md but basically how to start adding more and more features on this to protect our applications built in Laravel.\n","relPermalink":"/posts/203/","summary":"Just the start to a new library that I hope others will help out on https://github.com/alfred-nutile-inc/larscanner\nThere is a roadmap in the readme.md but basically how to start adding more and more features on this to protect our applications built in Laravel.","tags":["laravel","security"],"title":"LarScanner simple foundation for building a good Laravel Security Scanner"},{"content":"Laravel 5.3 has this feature. But for those not using that version or who just want to see how easy this is, I will show here how I been doing this for some time now.\nHere is the main Class I call to send a message. As you can see I am using Guzzle, in this case \u0026quot;guzzlehttp/guzzle\u0026quot;: \u0026quot;^6.1\u0026quot; but others versions can work.\n\u0026lt;?php\rnamespace App\\Services;\ruse Illuminate\\Support\\Facades\\Log;\ruse GuzzleHttp\\Client;\rclass SlackWrapper\r{\r/**\r* @var Client $client\r*/\rprotected $client;\rprotected $slack_url = false;\rpublic function __construct(Client $client)\r{\r$this-\u0026gt;client = $client;\r}\rpublic function sendMessageToSlack($message)\r{\rtry {\r$this-\u0026gt;client-\u0026gt;request(\r'POST',\r$this-\u0026gt;getSlackUrl(),\r[\r'body' =\u0026gt; $this-\u0026gt;message($message)\r]\r);\r} catch (\\Exception $e) {\rLog::debug(sprintf(\u0026quot;Error sending to Slack %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\rprotected function message($message)\r{\rreturn json_encode(\r[\r'text' =\u0026gt; $message\r]\r);\r}\rpublic function getSlackUrl()\r{\rif (!$this-\u0026gt;slack_url)\rreturn env('SLACK_URL');\rreturn $this-\u0026gt;slack_url;\r}\r/**\r* @param boolean $slack_url\r*/\rpublic function setSlackUrl($slack_url)\r{\r$this-\u0026gt;slack_url = $slack_url;\rreturn $this;\r}\r}\rAnd that is it. As long as I set this env('SLACK_URL') in my .env OR in the class instantiation it will get to that endpoint.\nThen in slack just add get the webhook/room you want to post to\n","relPermalink":"/posts/202/","summary":"Laravel 5.3 has this feature. But for those not using that version or who just want to see how easy this is, I will show here how I been doing this for some time now.\nHere is the main Class I call to send a message. As you can see I am using Guzzle, in this case \u0026quot;guzzlehttp/guzzle\u0026quot;: \u0026quot;^6.1\u0026quot; but others versions can work.\n\u0026lt;?php\rnamespace App\\Services;\ruse Illuminate\\Support\\Facades\\Log;\ruse GuzzleHttp\\Client;\rclass SlackWrapper\r{\r/**\r* @var Client $client\r*/\rprotected $client;\rprotected $slack_url = false;\rpublic function __construct(Client $client)\r{\r$this-\u0026gt;client = $client;\r}\rpublic function sendMessageToSlack($message)\r{\rtry {\r$this-\u0026gt;client-\u0026gt;request(\r'POST',\r$this-\u0026gt;getSlackUrl(),\r[\r'body' =\u0026gt; $this-\u0026gt;message($message)\r]\r);\r} catch (\\Exception $e) {\rLog::debug(sprintf(\u0026quot;Error sending to Slack %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\rprotected function message($message)\r{\rreturn json_encode(\r[\r'text' =\u0026gt; $message\r]\r);\r}\rpublic function getSlackUrl()\r{\rif (!","tags":["php","laravel","slack"],"title":"Super Simple Sending Messages to Slack from Laravel"},{"content":"Note to self. Getting this error \u0026ldquo;Error Failed to connect to Pusher\u0026rdquo; but the front end is working. And you know your credentials are correct, AND it was working just a day ago check the date and time on your machine/vm.\nMine had drift and since it was behind by 20 minutes I would end up with this error.\nOy what a waste or time x 2 :(\n","relPermalink":"/posts/201/","summary":"Note to self. Getting this error \u0026ldquo;Error Failed to connect to Pusher\u0026rdquo; but the front end is working. And you know your credentials are correct, AND it was working just a day ago check the date and time on your machine/vm.\nMine had drift and since it was behind by 20 minutes I would end up with this error.\nOy what a waste or time x 2 :(","tags":["php","note2self","laravel"],"title":"Pusher and PHP 'Error Failed to connect to Pusher'"},{"content":"Just a quick not to modify model data upon an event. Laravel docs talk about it here\nBut putting it in another class can get kinda confusing when you are trying to debug or update the code.\nIn this example I have a model Board and I want to, upon saving, make sure it has some key data.\n protected static function boot()\r{\rstatic::bootTraits();\r/** @var \\App\\Board $model */\rstatic::creating(function ($model) {\rif (!$model-\u0026gt;id) {\r$model-\u0026gt;id = Uuid::uuid4()-\u0026gt;toString();\r}\r});\r}\rSo now my \\App\\Board class will trigger this addition of UUID if the ID is not set upon creation.\n","relPermalink":"/posts/200/","summary":"Just a quick not to modify model data upon an event. Laravel docs talk about it here\nBut putting it in another class can get kinda confusing when you are trying to debug or update the code.\nIn this example I have a model Board and I want to, upon saving, make sure it has some key data.\n protected static function boot()\r{\rstatic::bootTraits();\r/** @var \\App\\Board $model */\rstatic::creating(function ($model) {\rif (!","tags":["laravel","note2self"],"title":"Model Boot Events"},{"content":"If you look here https://laravel.com/docs/5.3/queues#customizing-the-queue-and-connection\nUnder \u0026ldquo;Dispatching To A Particular Connection\u0026rdquo;\nBut if running test and local where I just want sync or database\n if(env('QUEUE_DRIVER') != 'sync' \u0026amp;\u0026amp; env('QUEUE_DRIVER') != 'database') {\r$concentration_curve = (new ImportDataColumnWorker($this-\u0026gt;job_notice-\u0026gt;model, $this-\u0026gt;job_notice-\u0026gt;payload))\r-\u0026gt;onConnection('columns');\r} else {\r$concentration_curve = (new ImportDataColumnWorker($this-\u0026gt;job_notice-\u0026gt;model, $this-\u0026gt;job_notice-\u0026gt;payload));\r}\r$this-\u0026gt;dispatch($concentration_curve);\r","relPermalink":"/posts/199/","summary":"If you look here https://laravel.com/docs/5.3/queues#customizing-the-queue-and-connection\nUnder \u0026ldquo;Dispatching To A Particular Connection\u0026rdquo;\nBut if running test and local where I just want sync or database\n if(env('QUEUE_DRIVER') != 'sync' \u0026amp;\u0026amp; env('QUEUE_DRIVER') != 'database') {\r$concentration_curve = (new ImportDataColumnWorker($this-\u0026gt;job_notice-\u0026gt;model, $this-\u0026gt;job_notice-\u0026gt;payload))\r-\u0026gt;onConnection('columns');\r} else {\r$concentration_curve = (new ImportDataColumnWorker($this-\u0026gt;job_notice-\u0026gt;model, $this-\u0026gt;job_notice-\u0026gt;payload));\r}\r$this-\u0026gt;dispatch($concentration_curve);\r","tags":["laravel","note2self"],"title":"Queue onConnection"},{"content":"Sometimes Guzzle can be a real pain to use in an library. You choose 5.x and then some other library needed 6.x and heck you really did not care either way.\nOne interesting package example is aws/aws-sdk-php\nIf you look in it\u0026rsquo;s composer.json you will see this\n \u0026quot;require\u0026quot;: {\r\u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.5\u0026quot;,\r\u0026quot;guzzlehttp/guzzle\u0026quot;: \u0026quot;~5.3|~6.0.1|~6.1\u0026quot;,\r\u0026quot;guzzlehttp/psr7\u0026quot;: \u0026quot;~1.0\u0026quot;,\r\u0026quot;guzzlehttp/promises\u0026quot;: \u0026quot;~1.0\u0026quot;,\r\u0026quot;mtdowling/jmespath.php\u0026quot;: \u0026quot;~2.2\u0026quot;\r},\rSo it allows for other libraries to choose as needed and it will deal with the different versions as needed.\nvendor/aws/aws-sdk-php/src/functions.php:263\nfunction default_http_handler()\r{\r$version = (string) ClientInterface::VERSION;\rif ($version[0] === '5') {\rreturn new \\Aws\\Handler\\GuzzleV5\\GuzzleHandler();\r} elseif ($version[0] === '6') {\rreturn new \\Aws\\Handler\\GuzzleV6\\GuzzleHandler();\r} else {\rthrow new \\RuntimeException('Unknown Guzzle version: ' . $version);\r}\r}\rThen each class deals with instantiating the GuzzleHttp\\Client as needed.\n","relPermalink":"/posts/198/","summary":"Sometimes Guzzle can be a real pain to use in an library. You choose 5.x and then some other library needed 6.x and heck you really did not care either way.\nOne interesting package example is aws/aws-sdk-php\nIf you look in it\u0026rsquo;s composer.json you will see this\n \u0026quot;require\u0026quot;: {\r\u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.5\u0026quot;,\r\u0026quot;guzzlehttp/guzzle\u0026quot;: \u0026quot;~5.3|~6.0.1|~6.1\u0026quot;,\r\u0026quot;guzzlehttp/psr7\u0026quot;: \u0026quot;~1.0\u0026quot;,\r\u0026quot;guzzlehttp/promises\u0026quot;: \u0026quot;~1.0\u0026quot;,\r\u0026quot;mtdowling/jmespath.php\u0026quot;: \u0026quot;~2.2\u0026quot;\r},\rSo it allows for other libraries to choose as needed and it will deal with the different versions as needed.","tags":["php","note2self"],"title":"Guzzle 5 or 6 or ????"},{"content":"Had trouble running behat after I ran updates on Chrome\nMy typical install https://www.npmjs.com/package/selenium-standalone\ndid not fix it, even try brew but no luck.\nAll I needed to do was go here and grab the lastest one for my Mac. For me this was the 32 bit.\nThen after running\nselenium-standalone install\rto see where the old one was installed I used that path to unzip this file and move it there  /usr/local/lib/node_modules/selenium-standalone/.selenium/chromedriver/2.21-x64-chromedriver\nThen started things backup again and it was fine.\ncurl -O https://chromedriver.storage.googleapis.com/2.25/chromedriver_mac64.zip\runzip chromedriver_mac64.zip\rmv chromedriver /usr/local/lib/node_modules/selenium-standalone/.selenium/chromedriver/2.21-x64-chromedriver\r","relPermalink":"/posts/197/","summary":"Had trouble running behat after I ran updates on Chrome\nMy typical install https://www.npmjs.com/package/selenium-standalone\ndid not fix it, even try brew but no luck.\nAll I needed to do was go here and grab the lastest one for my Mac. For me this was the 32 bit.\nThen after running\nselenium-standalone install\rto see where the old one was installed I used that path to unzip this file and move it there  /usr/local/lib/node_modules/selenium-standalone/.","tags":["note2self","behat"],"title":"Chrome update equals Behat Fail"},{"content":"Had a interesting issue with Laravel and the cast feature\nBasically a Chinese set of characters would be converted to their unicode counterpart http://php.net/manual/en/json.constants.php\nSo saving \u0026ldquo;‰Ω†Â•ΩÔºå‰∏ñÁïå\u0026rdquo; would become \u0026ldquo;\\u4f60\\u597d\\uff0c\\u4e16\\u754c\u0026rdquo; in the database.\nMaking it hard to search for \u0026ldquo;‰Ω†Â•ΩÔºå‰∏ñÁïå\u0026rdquo;\nBut I just wanted this data as it was, so later I could query the data and interact with it in it\u0026rsquo;s default character state.\nDigging into the Model class vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:3044 I found that this method would json_encode but with no options.\nSo on my model I had to override that\n protected function asJson($value)\r{\r/**\r* Alter Cast\r* Default is altering unicode\r*/\rreturn json_encode($value, JSON_UNESCAPED_UNICODE);\r}\rAnd now \u0026ldquo;‰Ω†Â•ΩÔºå‰∏ñÁïå\u0026rdquo; would save that way to the database and not \u0026ldquo;\\u4f60\\u597d\\uff0c\\u4e16\\u754c\u0026rdquo;\n","relPermalink":"/posts/196/","summary":"Had a interesting issue with Laravel and the cast feature\nBasically a Chinese set of characters would be converted to their unicode counterpart http://php.net/manual/en/json.constants.php\nSo saving \u0026ldquo;‰Ω†Â•ΩÔºå‰∏ñÁïå\u0026rdquo; would become \u0026ldquo;\\u4f60\\u597d\\uff0c\\u4e16\\u754c\u0026rdquo; in the database.\nMaking it hard to search for \u0026ldquo;‰Ω†Â•ΩÔºå‰∏ñÁïå\u0026rdquo;\nBut I just wanted this data as it was, so later I could query the data and interact with it in it\u0026rsquo;s default character state.\nDigging into the Model class vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.","tags":["laravel","json","note2self"],"title":"Laravel and Casting 'JSON_UNESCAPED_UNICODE' Data"},{"content":"Topics  Events Questions  ComicClientInterface But there is no mention about layout file     Just wanted to make a place to centralize some comments and feedback around the book Laravel Cookbook\nI will do my best to reply and help with the book as needed.\nThe main repo for this book is here btw\nJust add comments below and I will get them.\n \nEvents Wednesday October 26th 2pm EST Will host a live hangout for all to join and ask question. I will try and do this once per week for a bit here\nSession one. Here is a little intro\n\rFuture sessions I will record\nWednesday November 2nd 2pm EST Will host a live hangout for all to join and ask question. I will try and do this once per week for a bit here\nThursday November 10th 2pm EST Will host a live hangout for all to join and ask question. I will try and do this once per week for a bit here\nWednesday November 16th 2pm EST Will host a live hangout for all to join and ask question. I will try and do this once per week for a bit here\nWednesday November 23th 2pm EST Will host a live hangout for all to join and ask question. I will try and do this once per week for a bit here \nQuestions \nComicClientInterface For example, at chapter 3, page 34, point 4, the book says: ‚ÄúAnd in the ComicClientInterface class, I handle the comics method like this.‚Äù. And then there is a screenshot of the comics function, but there is no clue about in which file put these lines of code, and no mention of ComicClientInterface so far.\nAnswer The first part but there is no clue about in which file put these lines of code is me assuming you would know it is the controller since I show the route. Sorry about that assumption. I see now I could have been more clear that just showing this\nRoute::get(\u0026quot;api/v1/search\u0026quot;, \u0026quot;SearchComics@searchComicsByName\u0026quot;);\rI should also have noted this relates to, as always in Laravel \u0026ldquo;app/Http/Controllers/SearchComics.php\u0026rdquo; eg CLASS_NAME is before the @\nYes you are correct. At that start of this process I had Chapter 8 \u0026ldquo;Testing\u0026rdquo; as the first chapter in the book since I start projects with testing and was trying to show that as a foundation to all these recipes but when I was asked to move it to Chapter 8 I missed this \u0026ldquo;context\u0026rdquo;. Chapter 8 section \u0026ldquo;Using tests to think through your code TDT (Test Driven Thinking)\u0026rdquo; starts to cover that.\nAnd moreover, I have not idea how to get the result showing in the next picture, at point 5. Where do these informations about comics come from? Later in the book I see there is a MARVEL_API_BASE_URL= https://gateway.marvel.com but how can the example in chapter 3 work without pointing to this url?\nAnswer Again sorry it is confusing seems this Context is lost as above. You are correct you needed to have the URL in your .env file to make this work. It is in section 10 of Chapter 8 section \u0026ldquo;Using tests to think through your code TDT (Test Driven Thinking)\u0026rdquo; starts to cover that.\n \nBut there is no mention about this file \u0026ldquo;@extends(‚Äòlayout')\u0026rdquo; Furthermore, at page 41, the book show how to write a route_view.blade.php file than at the first row refers to a layout.blade.php file: \u0026ldquo;@extends(‚Äòlayout')\u0026rdquo;. But there is no mention about this file, until page 70 when his says: ‚Äút has made resources/views/layout.blade.php, which is the base to all your Blade files. In here, we see content.‚Äù and then there is a screenshot that show the content of this file. And this is a very simple and beginning topic in Laravel Framework. So, how is supposed that a person could follow the book, if there is full lack and references to future parts of the book?\nAnswer As noted above we had some chapter changes that may have caused this. Chapter 4 \u0026ldquo;Organizing your Blade files\u0026rdquo; I install a template helper that brings in this file. Basically I think that Routing was written after Views. But honestly on that one I am not sure why I would have done that since imo I needed to tackle Routing before I can show you views.\n ","relPermalink":"/posts/195/","summary":"Topics  Events Questions  ComicClientInterface But there is no mention about layout file     Just wanted to make a place to centralize some comments and feedback around the book Laravel Cookbook\nI will do my best to reply and help with the book as needed.\nThe main repo for this book is here btw\nJust add comments below and I will get them.\n \nEvents Wednesday October 26th 2pm EST Will host a live hangout for all to join and ask question.","tags":[],"title":"Laravel 5.x Cookbook Chat Area"},{"content":"NOTE: 5.3, for 5.2 see ending update\nThe Laravel Throttle feature here is a great addition to the framework. By default it uses the username and the IP for the key to count attempts.\nBut I want to cover how to switch that to use an IP only and not the username. A good example of why is a hacker running through a list of emails and passwords just trying to break into sites where that user would use the same password as the site the got the list from. This person could try this 5000 long list against your server and not once will Throttle care about that.\nThe fix is fairly simple in your app/Http/Controllers/Auth/AuthController.php add\n /**\r* Get the throttle key for the given request.\r*\r* @param \\Illuminate\\Http\\Request $request\r* @return string\r*/\rprotected function throttleKey(Request $request)\r{\rif (Config::get('auth.throttle_key') == 'ip') {\rreturn $request-\u0026gt;ip();\r} else {\rreturn Str::lower($request-\u0026gt;input($this-\u0026gt;username())).'|'.$request-\u0026gt;ip();\r}\r}\rThen in your config/auth.php add\n /*\r|--------------------------------------------------------------------------\r| Throttle Key\r|--------------------------------------------------------------------------\r|\r| You may choose to block ip address from failed attempts\r| of a combination of IP and Username\r|\r| Supported: \u0026quot;ip\u0026quot;, \u0026quot;username|ip\u0026quot;\r|\r*/\r'throttle_key' =\u0026gt; 'ip'\rThis way you can switch it later back if needed\nFrom here on the IP will track the failed attempts.\nLaravel 5.2 In 5.2 I had to change  protected function throttleKey to  protected function throttleKey\n","relPermalink":"/posts/193/","summary":"NOTE: 5.3, for 5.2 see ending update\nThe Laravel Throttle feature here is a great addition to the framework. By default it uses the username and the IP for the key to count attempts.\nBut I want to cover how to switch that to use an IP only and not the username. A good example of why is a hacker running through a list of emails and passwords just trying to break into sites where that user would use the same password as the site the got the list from.","tags":["laravel","security"],"title":"Laravel Throttle Feature using IP address as Key"},{"content":"Laravel Throttle works on failed auth attempts but how about password resets?\nHere is what I made my app/Http/Controllers/Auth/PasswordController.php look like\n5.3 \u0026lt;?php\rnamespace App\\Http\\Controllers\\Auth;\ruse App\\Http\\Controllers\\Controller;\ruse Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\ruse Illuminate\\Foundation\\Auth\\ResetsPasswords;\ruse Illuminate\\Foundation\\Auth\\ThrottlesLogins;\ruse Illuminate\\Http\\Request;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Facades\\Validator;\rclass PasswordController extends Controller\r{\r/*\r|--------------------------------------------------------------------------\r| Password Reset Controller\r|--------------------------------------------------------------------------\r|\r| This controller is responsible for handling password reset requests\r| and uses a simple trait to include this behavior. You're free to\r| explore this trait and override any methods you wish to tweak.\r|\r*/\ruse ResetsPasswords, ThrottlesLogins;\rprotected $username;\r/**\r* Create a new password controller instance.\r*\r* @return void\r*/\rpublic function __construct()\r{\r$this-\u0026gt;middleware('guest');\r}\r/**\r* Validate the request of sending reset link.\r*\r* @param \\Illuminate\\Http\\Request $request\r* @return void\r*/\rprotected function validateSendResetLinkEmail(Request $request)\r{\r$this-\u0026gt;incrementLoginAttempts($request);\r$this-\u0026gt;username = 'email';\rif($this-\u0026gt;hasTooManyLoginAttempts($request)) {\rreturn back()\r-\u0026gt;withError(\u0026quot;You have exceeded the limit of attempts. Please try again shortly\u0026quot;)\r-\u0026gt;withInput();\r}\r$validator = Validator::make(\r$request-\u0026gt;all(), [\r'email' =\u0026gt; 'required|email'\r]\r);\rif ($validator-\u0026gt;fails()) {\rreturn back()\r-\u0026gt;withMessage(\u0026quot;If you are in the system you will get an email shortly to reset your password\u0026quot;)\r-\u0026gt;withInput();\r}\r}\rpublic function loginUsername()\r{\rreturn property_exists($this, 'username') ? $this-\u0026gt;username : 'email';\r}\rprotected function getThrottleKey(Request $request)\r{\rreturn $request-\u0026gt;ip();\r}\r}\r5.2 The controller ended up looking like this\n\u0026lt;?php\rnamespace App\\Http\\Controllers\\Auth;\ruse App\\Http\\Controllers\\Controller;\ruse Illuminate\\Foundation\\Auth\\ResetsPasswords;\ruse Illuminate\\Foundation\\Auth\\ThrottlesLogins;\ruse Illuminate\\Http\\Request;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Facades\\Password;\rclass PasswordController extends Controller\r{\r/*\r|--------------------------------------------------------------------------\r| Password Reset Controller\r|--------------------------------------------------------------------------\r|\r| This controller is responsible for handling password reset requests\r| and uses a simple trait to include this behavior. You're free to\r| explore this trait and override any methods you wish to tweak.\r|\r*/\ruse ResetsPasswords, ThrottlesLogins;\rprotected $username;\r/**\r* Create a new password controller instance.\r*\r* @return void\r*/\rpublic function __construct()\r{\r$this-\u0026gt;middleware('guest');\r}\r/**\r* Validate the request of sending reset link.\r*\r* @param \\Illuminate\\Http\\Request $request\r* @return void\r*/\rprotected function sendResetLinkEmail(Request $request)\r{\r$this-\u0026gt;incrementLoginAttempts($request);\r$this-\u0026gt;username = 'email';\rLog::debug(\u0026quot;Validate\u0026quot;);\rif($this-\u0026gt;hasTooManyLoginAttempts($request)) {\rreturn redirect()-\u0026gt;back()-\u0026gt;withErrors(['email' =\u0026gt; \u0026quot;You have exceeded the limit of attempts. Please try again shortly\u0026quot;]);\r}\r$this-\u0026gt;validate($request, ['email' =\u0026gt; 'required|email']);\r$broker = $this-\u0026gt;getBroker();\r$response = Password::broker($broker)-\u0026gt;sendResetLink(\r$request-\u0026gt;only('email'), $this-\u0026gt;resetEmailBuilder()\r);\rswitch ($response) {\rcase Password::RESET_LINK_SENT:\rreturn $this-\u0026gt;getSendResetLinkEmailSuccessResponse($response);\rcase Password::INVALID_USER:\rdefault:\rreturn $this-\u0026gt;getSendResetLinkEmailFailureResponse($response);\r}\r}\rpublic function loginUsername()\r{\rreturn property_exists($this, 'username') ? $this-\u0026gt;username : 'email';\r}\rprotected function getThrottleKey(Request $request)\r{\rreturn $request-\u0026gt;ip();\r}\r}\rTIP: While your add it leak even less about your app\u0026rsquo;s user emails On other thing here is take a moment to change your error message resources/lang/en/passwords.php\n 'password' =\u0026gt; 'Passwords must be at least six characters and match the confirmation.',\r'reset' =\u0026gt; 'Your password has been reset!',\r'sent' =\u0026gt; 'We have e-mailed your password reset link!',\r'token' =\u0026gt; 'This password reset token is invalid.',\r'user' =\u0026gt; \u0026quot;If you are a user in the system an a reset email has been sent\u0026quot;,\rWhere user does not leak out any information about the email being correct or not.\n","relPermalink":"/posts/194/","summary":"Laravel Throttle works on failed auth attempts but how about password resets?\nHere is what I made my app/Http/Controllers/Auth/PasswordController.php look like\n5.3 \u0026lt;?php\rnamespace App\\Http\\Controllers\\Auth;\ruse App\\Http\\Controllers\\Controller;\ruse Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\ruse Illuminate\\Foundation\\Auth\\ResetsPasswords;\ruse Illuminate\\Foundation\\Auth\\ThrottlesLogins;\ruse Illuminate\\Http\\Request;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Facades\\Validator;\rclass PasswordController extends Controller\r{\r/*\r|--------------------------------------------------------------------------\r| Password Reset Controller\r|--------------------------------------------------------------------------\r|\r| This controller is responsible for handling password reset requests\r| and uses a simple trait to include this behavior.","tags":["laravel","security"],"title":"Throttle Password Reset"},{"content":"In this article, I will continue where I left off with my previous post, Laravel and Behat Using Selenium and Headless Chrome, and explain what you can do when troubleshooting a failed build.\nCheckout the article on CodeShip https://blog.codeship.com/troubleshooting-a-failed-build-with-codeship-and-saucelabs/\n","relPermalink":"/posts/192/","summary":"In this article, I will continue where I left off with my previous post, Laravel and Behat Using Selenium and Headless Chrome, and explain what you can do when troubleshooting a failed build.\nCheckout the article on CodeShip https://blog.codeship.com/troubleshooting-a-failed-build-with-codeship-and-saucelabs/","tags":["codeship","saucelabs"],"title":"Troubleshooting a Failed Build with Codeship and SauceLabs"},{"content":"This is mostly a note2self.\nAmazon Machine learning is one way to dig into things. For me it mean not getting bogged down in Python or tons of formulas for now.\nBasically I watched their main video here to get a view of how things worked.\nThen I read their docs here and follow this tutorial.\nAfter that I took a moment to watch another video of how they used ML to help process messages from Twitter https://www.youtube.com/watch?v=GRRX9amYsyM\nFrom there I tried a few of my own datasets one I used on a not ready for prime time product here\nAnyways it was just fun to play around. Their API is super easy to use, even to the point of having a PHP client I could plug in for AWS or MicroSoft https://alfrednutile.info/projects/57\nHave a number of other ideas as well looking forward to making them happen here or with other services.\n","relPermalink":"/posts/191/","summary":"This is mostly a note2self.\nAmazon Machine learning is one way to dig into things. For me it mean not getting bogged down in Python or tons of formulas for now.\nBasically I watched their main video here to get a view of how things worked.\nThen I read their docs here and follow this tutorial.\nAfter that I took a moment to watch another video of how they used ML to help process messages from Twitter https://www.","tags":["note2self"],"title":"Amazon Machine Learning "},{"content":"This is a quick view of using this library https://github.com/laracasts/Behat-Laravel-Extension and a Mockery Trait (should be included soon but for now put the below in your features/bootstrap folder and run composer dump).\nThe example here is a method that looks like this\nfeatures/bootstrap/ExampleContext.php\n $partial = Mockery::mock(\\App\\Broadcasts\\ColumnsAndRowsDoneProcessingEmail::class, [$this-\u0026gt;segment])-\u0026gt;makePartial();\r$partial-\u0026gt;shouldReceive('sendEmail')-\u0026gt;never();\r$repo = App::make(\\App\\JobsRepository::class);\r$partial-\u0026gt;handle($repo);\rWhen this is done running I would get pass BUT if I change it never to once and run it again I still get green :(\nBut I need to include the Mockery. In my case I made this trait that will allow me to also tests and mock events.\n\u0026lt;?php\rtrait MockeryTrait\r{\rpublic $firedEvents = [];\rpublic $beforeApplicationDestroyedCallbacks = [];\r/**\r* @AfterScenario\r*/\rpublic function reviewMocks()\r{\rif ($this-\u0026gt;app) {\rforeach ($this-\u0026gt;beforeApplicationDestroyedCallbacks as $callback) {\rcall_user_func($callback);\r}\r$this-\u0026gt;app-\u0026gt;flush();\r$this-\u0026gt;app = null;\r}\rif (class_exists('Mockery')) {\rMockery::close();\r}\r$this-\u0026gt;beforeApplicationDestroyedCallbacks = [];\r}\rprotected function beforeApplicationDestroyed(callable $callback)\r{\r$this-\u0026gt;beforeApplicationDestroyedCallbacks[] = $callback;\r}\r/**\r* Specify a list of events that should be fired for the given operation.\r*\r* These events will be mocked, so that handlers will not actually be executed.\r*\r* @param array|string $events\r* @return $this\r*\r* @throws \\Exception\r*/\rpublic function expectsEvents($events)\r{\r$events = is_array($events) ? $events : func_get_args();\r$this-\u0026gt;withoutEvents();\r$this-\u0026gt;beforeApplicationDestroyed(function () use ($events) {\r$fired = $this-\u0026gt;getFiredEvents($events);\rif ($eventsNotFired = array_diff($events, $fired)) {\rthrow new Exception(\r'These expected events were not fired: ['.implode(', ', $eventsNotFired).']'\r);\r}\r});\rreturn $this;\r}\r/**\r* Mock the event dispatcher so all events are silenced and collected.\r*\r* @return $this\r*/\rprotected function withoutEvents()\r{\r$mock = Mockery::mock('Illuminate\\Contracts\\Events\\Dispatcher');\r$mock-\u0026gt;shouldReceive('fire')-\u0026gt;andReturnUsing(function ($called) {\r$this-\u0026gt;firedEvents[] = $called;\r});\r$this-\u0026gt;app-\u0026gt;instance('events', $mock);\rreturn $this;\r}\r/**\r* Filter the given events against the fired events.\r*\r* @param array $events\r* @return array\r*/\rprotected function getFiredEvents(array $events)\r{\rreturn $this-\u0026gt;getDispatched($events, $this-\u0026gt;firedEvents);\r}\r/**\r* Filter the given classes against an array of dispatched classes.\r*\r* @param array $classes\r* @param array $dispatched\r* @return array\r*/\rprotected function getDispatched(array $classes, array $dispatched)\r{\rreturn array_filter($classes, function ($class) use ($dispatched) {\rreturn $this-\u0026gt;wasDispatched($class, $dispatched);\r});\r}\r/**\r* Check if the given class exists in an array of dispatched classes.\r*\r* @param string $needle\r* @param array $haystack\r* @return bool\r*/\rprotected function wasDispatched($needle, array $haystack)\r{\rforeach ($haystack as $dispatched) {\rif ((is_string($dispatched) \u0026amp;\u0026amp; ($dispatched === $needle || is_subclass_of($dispatched, $needle))) ||\r$dispatched instanceof $needle) {\rreturn true;\r}\r}\rreturn false;\r}\r}\rThis pulls in a trait Laravel uses in PHPUnit.\nSo now when I run that test I get red and when I set it back to zero I get green!\n","relPermalink":"/posts/190/","summary":"This is a quick view of using this library https://github.com/laracasts/Behat-Laravel-Extension and a Mockery Trait (should be included soon but for now put the below in your features/bootstrap folder and run composer dump).\nThe example here is a method that looks like this\nfeatures/bootstrap/ExampleContext.php\n $partial = Mockery::mock(\\App\\Broadcasts\\ColumnsAndRowsDoneProcessingEmail::class, [$this-\u0026gt;segment])-\u0026gt;makePartial();\r$partial-\u0026gt;shouldReceive('sendEmail')-\u0026gt;never();\r$repo = App::make(\\App\\JobsRepository::class);\r$partial-\u0026gt;handle($repo);\rWhen this is done running I would get pass BUT if I change it never to once and run it again I still get green :(","tags":["php","laravel","behat","bdd"],"title":"Mockery Behat and Laravel"},{"content":"make the username and password http://www.htaccesstools.com/htpasswd-generator/\nadmin:$apr1$wLiZDI74$/D64sfIdn74kHc6F.76Qv/\rAnd save it in a file called, for example, htpass\nNow scp -v htpass forge@your_server:~/\nGo to forge and find the site and click \u0026ldquo;Edit Nginx Configuration\u0026rdquo;\nNow in there just add these lines\n auth_basic \u0026quot;Restricted Area\u0026quot;;\rauth_basic_user_file /home/forge/htpass;\rAs seen below\nI think that will restart/reload Nginx, if does not go to the page that list your \u0026ldquo;Server Details\u0026rdquo; and restart there\n","relPermalink":"/posts/189/","summary":"make the username and password http://www.htaccesstools.com/htpasswd-generator/\nadmin:$apr1$wLiZDI74$/D64sfIdn74kHc6F.76Qv/\rAnd save it in a file called, for example, htpass\nNow scp -v htpass forge@your_server:~/\nGo to forge and find the site and click \u0026ldquo;Edit Nginx Configuration\u0026rdquo;\nNow in there just add these lines\n auth_basic \u0026quot;Restricted Area\u0026quot;;\rauth_basic_user_file /home/forge/htpass;\rAs seen below\nI think that will restart/reload Nginx, if does not go to the page that list your \u0026ldquo;Server Details\u0026rdquo; and restart there","tags":["note2self"],"title":"Adding Basic Auth to Forge"},{"content":"The goal here is as follows\n @fileCleanup @javascript\rScenario: Uploading File\rGiven I already made a Segmentation and am editing it\rThen I add file and the system will process it\rAnd I can not add another file till it is done\rAnd when the system is done I can add another file\rIn this case they are large files and I want to get an MVP for the users to interact with so one file at a time is enough for now.\nThe tricky part is that I am running Selenium on my Mac and running behat in my VM there is no file path connection between the two. This can also be an issue when using Saucelabs and https://crossbrowsertesting.com/.\nUI Level I am using the Flow Angular library so it is JavaScript heavy (some notes below). Otherwise your work is even easier.\nMy step to set things up Given I already made a Segmentation and am editing it just adds that resource to the system and then I visit it.\nFrom there I hit Then I add file and the system will process it and this is where it all begins\n /**\r* @Then I add file and the system will process it\r*/\rpublic function iAddFileAndTheSystemWillProcessIt()\r{\r$this-\u0026gt;visit('/segments/files/' . $this-\u0026gt;segment_uuid);\rsleep(2); //load up the page\r$this-\u0026gt;assertPageContainsText('Upload File'); //make sure the button is there\r/**\r* Here is the meat of it, or tofu, I have to deal with the fact I am running * Selenium on a different machine than my VM's filesystem\r* So I inject this into the WebDriverSession\r* Which only exists because this Scenario is marked `@javascript`\r*/\r$localFile = base_path('features/fixtures/data_columns_not_snaked.xls');\r$tempZip = tempnam('', 'WebDriverZip');\r$zip = new \\ZipArchive();\r$zip-\u0026gt;open($tempZip, \\ZipArchive::CREATE);\r$zip-\u0026gt;addFile($localFile, basename($localFile));\r$zip-\u0026gt;close();\r$remotePath = $this-\u0026gt;getSession()-\u0026gt;getDriver()-\u0026gt;getWebDriverSession()-\u0026gt;file([\r'file' =\u0026gt; base64_encode(file_get_contents($tempZip))\r]);\r/** end the hard part **/\r$this-\u0026gt;attachFileToField('image_upload', $remotePath); //see Flow notes at the bottom of this page\r$this-\u0026gt;assertPageNotContainsText('Upload File');\runlink($tempZip);\rsleep(5); //Later on I will move this to `spin` see notes below\r$this-\u0026gt;assertPageContainsText('data_columns_not_snaked');\r}\rLet me show that again but now more simple just a normal input button\n /**\r* @Then I add file and the system will process it\r*/\rpublic function iAddFileAndTheSystemWillProcessIt()\r{\r$this-\u0026gt;visit('/segments/files/' . $this-\u0026gt;segment_uuid);\rsleep(2); //load up the page\r$this-\u0026gt;assertPageContainsText('Upload File'); //make sure the button is there\r/**\r* Here is the meat of it, or tofu, I have to deal with the fact I am running * Selenium on a different machine than my VM's filesystem\r* So I inject this into the WebDriverSession\r* Which only exists because this Scenario is marked `@javascript`\r*/\r$localFile = base_path('features/fixtures/data_columns_not_snaked.xls'); $tempZip = tempnam('', 'WebDriverZip');\r$zip = new \\ZipArchive();\r$zip-\u0026gt;open($tempZip, \\ZipArchive::CREATE);\r$zip-\u0026gt;addFile($localFile, basename($localFile));\r$zip-\u0026gt;close();\r$remotePath = $this-\u0026gt;getSession()-\u0026gt;getDriver()-\u0026gt;getWebDriverSession()-\u0026gt;file([\r'file' =\u0026gt; base64_encode(file_get_contents($tempZip))\r]);\r/** end the hard part **/\r$this-\u0026gt;attachFileToField('image_upload', $remotePath); //the input field\r/** prove the button is gone during this process **/ $this-\u0026gt;assertPageNotContainsText('Upload File');\runlink($tempZip);\r$this-\u0026gt;pressButton('Upload File'); //dealing with normal input button\r}\rDomain Level Since my Controller gets the info from the incoming Request and hands it to the Repository class, I like to test my classes outside the Controller then plug them in (see here for more on that), there is typically no need to pass the full Request to the Repository. But in this case I went about passing the entire Request to the Repository and doing some checking in there as well.\n /**\r* @Then I should be able to upload an image file\r*/\rpublic function iShouldBeAbleToUploadAnImageFile()\r{\r$request = new \\Illuminate\\Http\\Request();\r$file = new \\Symfony\\Component\\HttpFoundation\\FileBag();\r$path = base_path('features/fixtures/data_columns_not_snaked.xls');\r$originalName = 'data_columns_not_snaked.xls';\r/** note `true` passed in to `UploadedFile` it defines this as a test request **/\r$upload = new \\Illuminate\\Http\\UploadedFile($path, $originalName, null, null, null, true);\r$file-\u0026gt;set('profile_image', $upload);\r$request-\u0026gt;files = $file;\r$this-\u0026gt;repo = new \\App\\Repositories\\ProfileRepository();\r$results = $this-\u0026gt;repo-\u0026gt;uploadUserProfileImage($request);\rPHPUnit::assertTrue($results, \u0026quot;Repo did not return true\u0026quot;);\rPHPUnit::assertTrue(File::exists(public_path('storage/' . $this-\u0026gt;user-\u0026gt;id . '/data_columns_not_snaked.xls')), \u0026quot;File Not found\u0026quot;);\r}\rAnd now that is passing as well.\nThats It I am now testing both the UI and the Domain level part of this Application.\nNote Using Flow Library https://github.com/flowjs/ng-flow makes it easy to process large files in PHP for me.\nOne thing I had to do was do was set flow-attrs to the directive so I can get a name in there to target field.\n\u0026lt;div class=\u0026quot;btn btn-xs btn-primary\u0026quot; flow-attrs=\u0026quot;{name:'image_upload'}\u0026quot; flow-btn ng-if=\u0026quot;vm.file_uploading\u0026quot;\u0026gt;\r\u0026lt;i class=\u0026quot;fa fa-cloud-upload\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;¬†Upload File\r\u0026lt;/div\u0026gt;\rLink to Spin on Behat docs and StackOverflow for a better solution than sleep\nhttp://stackoverflow.com/questions/28510155/how-to-get-the-mink-selenium-2-driver-to-wait-for-the-page-to-load-with-behat\nhttp://docs.behat.org/en/v2.5/cookbook/using_spin_functions.html\nAnd a bit more on that http://www.tentacode.net/10-tips-with-behat-and-mink\n","relPermalink":"/posts/188/","summary":"The goal here is as follows\n @fileCleanup @javascript\rScenario: Uploading File\rGiven I already made a Segmentation and am editing it\rThen I add file and the system will process it\rAnd I can not add another file till it is done\rAnd when the system is done I can add another file\rIn this case they are large files and I want to get an MVP for the users to interact with so one file at a time is enough for now.","tags":["behat","bdd","php","laravel"],"title":"Uploading Images in Behat both at Domain Level and UI Level"},{"content":"I will cover the use of FormRequest, Mockery, Behat and more in this article.\nThe article will show how to test your Domain code, in this case I mean testing how the code will work outside of the Routing and Controller layer of your Application. But what this will lead to is a \u0026ldquo;lego\u0026rdquo; like moment of plugging in these parts to your Controller so you know it will work. Of course it will be tested as well during the UI testing.\nI will start off with this Behat Feature\nFeature: Login Page\rLogin page to do authenticated tasks\rAs an anonymous user\rSo we can protect some personal and administrative parts of the site\r@happy_path @smoke @javascript @profile\rScenario: A user can login and see their profile\rGiven I am on the login page\rAnd I fill in the login form with my proper username and password\rThen I should be able to see my profile page\rThen if I try to see another persons page I should get rejected\r@smoke @profile\rScenario: A non logged in user can not get a profile\rGiven I am an anonymous user\rAnd I go to the profile page\rThen I should get redirected with an error message to let me know the problem\rWhat we have is the @happy_path that will be the UI Scenario in this case as well as the Domain. And yes I can have more than one UI Scenario but in this case I just want to deliver something that let\u0026rsquo;s the Product Owner knows her application is working as expected.\nWhat we will start with is Scenario: A user can login and see their profile\nIn my example there will be a Repository class to manage the Business logic and a FormRequest Class to deal with managing ACL.\nLet\u0026rsquo;s take the Context file one step at a time features/bootstrap/LoginPageDomainContext.php\n /**\r* @Given I am on the login page\r*/\rpublic function iAmOnTheLoginPage()\r{\r$this-\u0026gt;user = factory(\\App\\User::class)-\u0026gt;create();\r}\rI setup the state of the world for this Scenario I do not rely on seed data.\nAlso at the top of the Class I pull in use \\Laracasts\\Behat\\Context\\DatabaseTransactions; and \\Laracasts\\Behat\\Context\\Migrator\nThese come from the Laracast Library on Behat https://laracasts.com/lessons/laravel-5-and-behat-bffs and https://github.com/laracasts/Behat-Laravel-Extension\nThis next step is written with too much \u0026ldquo;Web\u0026rdquo; in mind. I should try and reword it so it fits more inline with the business goals.\n /**\r* @Given I fill in the login form with my proper username and password\r*/\rpublic function iFillInTheLoginFormWithMyProperUsernameAndPassword()\r{\rAuth::login($this-\u0026gt;user);\rPHPUnit_Framework_Assert::assertFalse(Auth::guest());\r}\rHere is where things get fun\n /**\r* @Then I should be able to see my profile page\r*/\rpublic function iShouldBeAbleToSeeMyProfilePage()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\rfactory(\\App\\Profile::class)-\u0026gt;create(['user_id' =\u0026gt; $user-\u0026gt;id]);\r/** @var \\App\\Http\\Requests\\ProfileShowRequest $auth */\r$auth = Mockery::mock(\\App\\Http\\Requests\\ProfileShowRequest::class)-\u0026gt;makePartial();\r$auth-\u0026gt;shouldReceive('route')-\u0026gt;andReturn($user-\u0026gt;url);\r$results = $auth-\u0026gt;authorize();\rPHPUnit::assertTrue($results);\r}\rAnd the next part to that\n /**\r* @Then if I try to see another persons page I should get rejected\r*/\rpublic function ifITryToSeeAnotherPersonsPageIShouldGetRejected()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\rfactory(\\App\\Profile::class)-\u0026gt;create(\r['favorite_comic_character' =\u0026gt; \u0026quot;foo\u0026quot;, 'user_id' =\u0026gt; $user-\u0026gt;id]\r);\r/** @var \\App\\Http\\Requests\\ProfileShowRequest $auth */\r$auth = Mockery::mock(\\App\\Http\\Requests\\ProfileShowRequest::class)-\u0026gt;makePartial();\r$auth-\u0026gt;shouldReceive('route')-\u0026gt;andReturn($user-\u0026gt;url);\r$results = $auth-\u0026gt;authorize();\rPHPUnit::assertFalse($results);\r}\rMaking sure to close my Mockery when done\n /**\r* @afterScenario\r*/\rpublic function cleanUp() {\rMockery::close();\r}\rWe are testing the two pieces that matter right now, the Repo and the FormRequest.\nAll I did was run vendor/bin/behat -slogin_domain --append-snippets --tags=@happy_path and I got to see the one(s) with that tag working.\nThe Repo \\App\\Repositories\\ProfileShowPage\n\u0026lt;?php\rnamespace App\\Repositories;\ruse App\\Profile;\ruse Illuminate\\Database\\Eloquent\\ModelNotFoundException;\ruse Illuminate\\Support\\Facades\\Auth;\rclass ProfileShowPage extends ProfileRepository\r{\rpublic function showProfileForUserFromSlug($slug)\r{\rreturn \\App\\User::fromSlug($slug);\r}\r}\rWhy not just use the Controller! Well this is still a simple simple example but honestly if you are just building something for fun or something serious and just getting the feel of an idea go for it. I am doing this cause I want to plug in more to this later since it is part of a larger plan.\nNote: Profile::fromSlug() is just a scope and the model works out the rest of the query for me\n public function scopeFromSlug($query, $slug)\r{\rreturn $query-\u0026gt;with('profile')-\u0026gt;where('url', $slug)-\u0026gt;firstOrFail();\r}\rThat is it for the repository, now how about this FormRequest at app/Http/Requests/ProfileShowRequest.php?\nFormRequest You can read more about this here on Laravel Docs\n\u0026lt;?php\rnamespace App\\Http\\Requests;\r/**\r* @NOTE THERE ARE SOME CLASSES HERE SEE GITHUB\r*/\rclass ProfileShowRequest extends Request\r{\rprotected $profile;\r/**\r* Determine if the user is authorized to make this request.\r*\r* @return bool\r*/\rpublic function authorize()\r{\rif (Auth::guest()) {\rreturn false;\r}\r/** @var \\App\\Repositories\\ProfileShowPage $profilePage */\r$profilePage = App::make(\\App\\Repositories\\ProfileShowPage::class);\r$user = $profilePage-\u0026gt;showProfileForUserFromSlug($this-\u0026gt;route('slug'));\rreturn Auth::user()-\u0026gt;id == $user-\u0026gt;profile-\u0026gt;user_id;\r}\rpublic function forbiddenResponse()\r{\rreturn redirect('login')-\u0026gt;with('message', \u0026quot;You need to login first\u0026quot;);\r}\r/**\r* Get the validation rules that apply to the request.\r*\r* @return array\r*/\rpublic function rules()\r{\rreturn [\r//\r];\r}\r}\rThe Controller All right now that step is passing and the pieces are ready to plug in to the Controller!\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse App\\Http\\Requests\\ProfileShowRequest;\ruse App\\Repositories\\ProfileShowPage;\ruse Illuminate\\Database\\Eloquent\\ModelNotFoundException;\rclass ProfileShowController extends Controller\r{\rpublic function getProfileForUserUsingSlug(ProfileShowRequest $request, ProfileShowPage $repository, $slug)\r{\rtry {\r$profile = $repository-\u0026gt;showProfileForUserFromSlug($slug);\rreturn view('profile.show', compact('profile'));\r} catch (ModelNotFoundException $e) {\rreturn redirect()-\u0026gt;route('home')-\u0026gt;with('message', \u0026quot;Could not find your profile :(\u0026quot;);\r} catch (\\Exception $e) {\rreturn redirect()-\u0026gt;route('home')-\u0026gt;with('message', \u0026quot;Error getting profile :(\u0026quot;);\r}\r}\r}\rThis controller has one Job app/Http/Controllers/ProfileShowController.php Showing the profile.\nIn with that job it has the ACL taken care of before it even has to think about what it needs to do.\nAfter that it asks the repo to take care of the request and it deals with the response or inevitable exception!\nSo right away I can go to my ui test and make it so you can see the code here\nFollow Up All code for this can be seen at https://github.com/alnutile/recipes this is a foundation repo for a new book coming out in 2 months with many day to day Laravel Recipes!\n","relPermalink":"/posts/187/","summary":"I will cover the use of FormRequest, Mockery, Behat and more in this article.\nThe article will show how to test your Domain code, in this case I mean testing how the code will work outside of the Routing and Controller layer of your Application. But what this will lead to is a \u0026ldquo;lego\u0026rdquo; like moment of plugging in these parts to your Controller so you know it will work. Of course it will be tested as well during the UI testing.","tags":["behat","bdd","php","laravel"],"title":"Behat Laravel Domain Testing Inside Out"},{"content":"Just wanted to show two things here. One is how sometimes I end up in PHPUnit to work out some ideas. And two how awesome it is to refactor thanks to PHPUnit.\nIn this example I had a Class responsible for saving data, we\u0026rsquo;ll call FooSaveData. But before that save it has to process some incoming information against another set of data to save the results of that. So I made another class we\u0026rsquo;ll call FooProcessData.\nThe BDD Story for this worked out well in that just like in Konstantin Kudryashov noted in this article I had a great reading business driven gherkin feature that I then, using Behat 3 and Suites was able to make some really great names for my classes and methods.\nBut this was fine as I was working on FooSaveData, but the fact that FooProcessData had to iterate over a large complex array of data I did not want to do inside of this Gherkin test. It would mean that I had to deal with 5 other steps, x number of model states I needed etc. Instead I just made a unit test for that class \u0026ldquo;FooProcessData\u0026rdquo; and focused on it for a bit outside the rest of this work.\nTo begin with I just use\nFile::put(base_path('tests/fixtures/data_to_process.json', json_encode($some_data, JSON_PRETTY_PRINT))\rto put that data right where I want it for my unit tests.\nThen from there I go around and around unil the thinking on the left reads more like the thinking on the right\n\nWhich is my favorite part of this really as I see code evolve to something I can come back 6 months later and read.\n Let\u0026rsquo;s Plan for a Future Where We\u0026rsquo;re All As Stupid as We Are Today - Dan Milstein\n At this point that \u0026ldquo;lego\u0026rdquo; like piece is done and I can go back to my Behat BDD Gherkin test to finish off where I left off.\n","relPermalink":"/posts/185/","summary":"Just wanted to show two things here. One is how sometimes I end up in PHPUnit to work out some ideas. And two how awesome it is to refactor thanks to PHPUnit.\nIn this example I had a Class responsible for saving data, we\u0026rsquo;ll call FooSaveData. But before that save it has to process some incoming information against another set of data to save the results of that. So I made another class we\u0026rsquo;ll call FooProcessData.","tags":["php","laravel","bdd","behat","phpunit"],"title":"Example of Mixing it up Behat BDD and PHPUnit"},{"content":"When I am done with a controller, done mocking up ideas and ready for some long term code, then I think this is the most information a Controller method should have.\npublic function updateFoor($id, $foo) {\rtry {\r$results = $this-\u0026gt;someRepoOrServiceClass($Id, $foo);¬†return Response::json(['data' =\u0026gt; [], 'message' =\u0026gt; \u0026quot;Success doing something\u0026quot;], 202);\r} catch (\\Exception $e) {\r$message = sprintf(\u0026quot;Error doing something %s\u0026quot;, $e-\u0026gt;getMessage());\rLog::debug($message);\rreturn Response::json(['data' =\u0026gt; [], 'message' =\u0026gt; $message], 400);\r}\r}\rAt this point I have someRepoOrServiceClass well tested outside of this Controller. And I do not need to do much to this controller since it is just returning the results or dealing with an error.\nEven using Form Request Validation I can create logic and test logic outside of my Controller. Making the moment I come back to my controller just about plugging in these \u0026ldquo;lego\u0026rdquo; like pieces.\n","relPermalink":"/posts/186/","summary":"When I am done with a controller, done mocking up ideas and ready for some long term code, then I think this is the most information a Controller method should have.\npublic function updateFoor($id, $foo) {\rtry {\r$results = $this-\u0026gt;someRepoOrServiceClass($Id, $foo);¬†return Response::json(['data' =\u0026gt; [], 'message' =\u0026gt; \u0026quot;Success doing something\u0026quot;], 202);\r} catch (\\Exception $e) {\r$message = sprintf(\u0026quot;Error doing something %s\u0026quot;, $e-\u0026gt;getMessage());\rLog::debug($message);\rreturn Response::json(['data' =\u0026gt; [], 'message' =\u0026gt; $message], 400);\r}\r}\rAt this point I have someRepoOrServiceClass well tested outside of this Controller.","tags":["php","coding"],"title":"Keeping a Controller Method Simple"},{"content":"I discovered this Vagrant Plugin https://github.com/cogitatio/vagrant-hostsupdater thanks to https://github.com/cogitatio/vagrant-hostsupdater when setting up Windows and thought why can\u0026rsquo;t I use it on my Mac?\nJust like the docs say on their github site\nvagrant plugin install vagrant-hostsupdater\rThen update your ruby file that setups up homestead\nsubl ~/Homestead/scripts/homestead.rb\rThis will look like Then\nsubl ~/.homestead/Homestead.yaml\rAnd make that like this\nThen run provision\ncd ~/Homestead\rvagrant provision\rThat is it now your /etc/hosts file will look like this\n","relPermalink":"/posts/184/","summary":"I discovered this Vagrant Plugin https://github.com/cogitatio/vagrant-hostsupdater thanks to https://github.com/cogitatio/vagrant-hostsupdater when setting up Windows and thought why can\u0026rsquo;t I use it on my Mac?\nJust like the docs say on their github site\nvagrant plugin install vagrant-hostsupdater\rThen update your ruby file that setups up homestead\nsubl ~/Homestead/scripts/homestead.rb\rThis will look like Then\nsubl ~/.homestead/Homestead.yaml\rAnd make that like this\nThen run provision\ncd ~/Homestead\rvagrant provision\rThat is it now your /etc/hosts file will look like this","tags":["homestead","laravel"],"title":"Homestead and Auto Setup Hosts File"},{"content":"API Token Laravel 5.2 introduces the auth token guard setup which is way simpler than Oauth. Also it does not assume a certain level of complexity in needs like Scopes and expirations of tokens that we do not need for our internal app to app communications.\nWe are using 5.1 so this will implement it.\nSee some docs here https://gistlog.co/JacobBennett/090369fbab0b31130b51\nFor creating a user the AppServiceProvider boots the user record and if no api_token is present it will set one. As well as the UUID (we use https://packagist.org/packages/ramsey/uuid for this)\napp/Providers/AppServiceProvider.php:18\n User::creating(function($user) {\rif (!$user-\u0026gt;id)\r{\r$user-\u0026gt;id = Uuid::uuid4()-\u0026gt;toString();\r}\rif (!$user-\u0026gt;api_token)\r{\r$user-\u0026gt;api_token = Uuid::uuid4()-\u0026gt;toString();\r}\r});\rThe factory includes this as well database/factories/ModelFactory.php\n$factory-\u0026gt;define(App\\User::class, function ($faker) {\rreturn [\r'id' =\u0026gt; $faker-\u0026gt;uuid,\r'name' =\u0026gt; $faker-\u0026gt;name,\r'email' =\u0026gt; $faker-\u0026gt;email,\r'api_token' =\u0026gt; $faker-\u0026gt;uuid,\r'password' =\u0026gt; str_random(10),\r'remember_token' =\u0026gt; str_random(10),\r];\r});\rNote in the \\App\\User model has this field hidden like the password field app/User.php\n///\rclass User extends Model implements AuthenticatableContract, CanResetPasswordContract\r{\ruse Authenticatable, CanResetPassword;\rprotected $hidden = ['password', 'remember_token', 'api_token'];\r///\rAnd of course we need the migration for this\n\u0026lt;?php\ruse Illuminate\\Database\\Schema\\Blueprint;\ruse Illuminate\\Database\\Migrations\\Migration;\rclass AddApiTokenToUsersTable extends Migration\r{\r/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::table('users', function(Blueprint $table)\r{\r$table-\u0026gt;string('api_token', 60)-\u0026gt;unique();\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::table('users', function(Blueprint $table)\r{\rif(Schema::hasColumn('users', 'api_token'))\r$table-\u0026gt;dropColumn('api_token');\r});\r}\r}\rThis is all happening using the api_token middleware seen here app/Http/Middleware/ApiToken.php\n\u0026lt;?php\rnamespace App\\Http\\Middleware;\ruse App\\User;\ruse Closure;\ruse Illuminate\\Contracts\\Auth\\Guard;\ruse Illuminate\\Support\\Facades\\App;\rclass ApiToken\r{\rprotected $auth;\rpublic function __construct(Guard $auth)\r{\r$this-\u0026gt;auth = $auth;\r}\rpublic function handle($request, Closure $next)\r{\rif($request-\u0026gt;input('api_token') \u0026amp;\u0026amp; $this-\u0026gt;hasMatchingToken($request-\u0026gt;input('api_token'))) {\rreturn $next($request);\r}\r/**\r* This assumes it is behind auth at all times\r* so if the above fails we then let auth manage it\r*/\rif ($this-\u0026gt;auth-\u0026gt;guest()) {\rif ($request-\u0026gt;ajax()) {\rreturn response('Unauthorized.', 401);\r} else {\rreturn redirect()-\u0026gt;guest('auth/login');\r}\r}\rreturn $next($request);\r}\r/**\r* Laravel 5.2 uses vendor/laravel/framework/src/Illuminate/Auth/TokenGuard.php:66 and then\r* vendor/laravel/framework/src/Illuminate/Auth/EloquentUserProvider.php:87 to get\r* a user based on the password\r*\r* @NOTE\r* We can load the user if we want to manage scopes/roles etc but right now it is\r* just pass fail\r*/\rpublic function hasMatchingToken($token)\r{\rif($user = User::where('api_token', $token)-\u0026gt;first())\rreturn true;\r}\r}\rAnd plug that into the Kernel app/Http/Kernel.php\n\u0026lt;?php\rnamespace App\\Http;\ruse Illuminate\\Foundation\\Http\\Kernel as HttpKernel;\rclass Kernel extends HttpKernel\r{\r/**\r* The application's global HTTP middleware stack.\r*\r* @var array\r*/\rprotected $middleware = [\r\\Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::class,\r\\App\\Http\\Middleware\\EncryptCookies::class,\r\\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\r\\Illuminate\\Session\\Middleware\\StartSession::class,\r\\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\r\\App\\Http\\Middleware\\VerifyCsrfToken::class,\r];\r/**\r* The application's route middleware.\r*\r* @var array\r*/\rprotected $routeMiddleware = [\r'auth' =\u0026gt; \\App\\Http\\Middleware\\Authenticate::class,\r'auth.token' =\u0026gt; \\App\\Http\\Middleware\\ApiToken::class,\r'auth.basic' =\u0026gt; \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\r'guest' =\u0026gt; \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\r];\r}\rTests You can see the tests tests/UserTokenTest.php\n\u0026lt;?php\ruse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\ruse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\ruse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\rclass UserTokenTest extends TestCase\r{\ruse DatabaseMigrations;\r/**\r* @test\r*/\rpublic function should_pass_auth_with_no_token_since_they_auth()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$this-\u0026gt;be($user);\r$results = $this-\u0026gt;call('GET', '/example/auth_token');\r$this-\u0026gt;assertEquals(200, $results-\u0026gt;status());\r$this-\u0026gt;assertEquals(\u0026quot;foo\u0026quot;, $results-\u0026gt;getContent());\r}\r/**\r* @test\r*/\rpublic function should_auth_user_since_they_have_token()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$results = $this-\u0026gt;call('GET', sprintf(\u0026quot;/example/auth_token?api_token=%s\u0026quot;, $user-\u0026gt;api_token));\r$this-\u0026gt;assertEquals(200, $results-\u0026gt;status());\r$this-\u0026gt;assertEquals(\u0026quot;foo\u0026quot;, $results-\u0026gt;getContent());\r}\r/**\r* @test\r*/\rpublic function should_fail_user_no_token_no_auth()\r{\r$results = $this-\u0026gt;call('GET', '/example/auth_token');\r$this-\u0026gt;assertEquals(302, $results-\u0026gt;status());\r}\r}\rConsole Commands to Make Tokens You can see the commands app/Console/Commands/UserTokenCrud.php\n\u0026lt;?php\rnamespace App\\Console\\Commands;\ruse App\\User;\ruse Illuminate\\Console\\Command;\ruse Ramsey\\Uuid\\Uuid;\rclass UserTokenCrud extends Command\r{\r/**\r* @TODO\r* Show, Update, Delete\r*/\rprotected $signature = 'cat:create-token {user_email} {--show=false : Just show the token} ';\rprotected $description = 'Create the token for the user';\rpublic function __construct()\r{\rparent::__construct();\r}\rpublic function handle()\r{\rtry\r{\r$user = User::where('email', $this-\u0026gt;argument('user_email'))-\u0026gt;first();\rif(!$user)\rthrow new \\Exception(sprintf(\u0026quot;User not found for %s\u0026quot;, $this-\u0026gt;argument(\u0026quot;user_email\u0026quot;)));\rif($this-\u0026gt;option('show'))\r{\r$this-\u0026gt;info(sprintf(\u0026quot;User token is %s\u0026quot;, $user-\u0026gt;api_token));\rreturn false;\r}\r$token = Uuid::uuid4()-\u0026gt;toString();\r$user-\u0026gt;api_token = $token;\r$user-\u0026gt;save();\r$this-\u0026gt;info(sprintf(\u0026quot;User with email %s now has token %s\u0026quot;, $user-\u0026gt;email, $token));\r}\rcatch(\\Exception $e)\r{\r$this-\u0026gt;error(sprintf(\u0026quot;Error finding user %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\r}\rPlug that into the Console Kernel Console/Kernel.php\n\u0026lt;?php\rnamespace App\\Console;\ruse Illuminate\\Console\\Scheduling\\Schedule;\ruse Illuminate\\Foundation\\Console\\Kernel as ConsoleKernel;\rclass Kernel extends ConsoleKernel\r{\r/**\r* The Artisan commands provided by your application.\r*\r* @var array\r*/\rprotected $commands = [\r//\\App\\Console\\Commands\\Inspire::class,\r\\App\\Console\\Commands\\UserTokenCrud::class\r];\r/**\r* Define the application's command schedule.\r*\r* @param \\Illuminate\\Console\\Scheduling\\Schedule $schedule\r* @return void\r*/\rprotected function schedule(Schedule $schedule)\r{\r//$schedule-\u0026gt;command('inspire')\r-\u0026gt;hourly();\r}\r}\rAllowing to update, delete and see tokens\nExample Routes Route::group(['middleware' =\u0026gt; 'auth.token'], function () {\rRoute::get('example/auth_token', function () {\rreturn \u0026quot;foo\u0026quot;;\r});\r});\rI added some testing / example routes. Once you have your api_token give them a try\n /example/auth_token?api_token=foo to show the API Token working /s3?api_token=foo /rds?api_token=foo /dynamodb?api_token=foo  Note the token might change if you seed the database. You can ssh into the server and run\nphp artisan cat:create-token foo@gmail.com --show\rTo get the token.\n","relPermalink":"/posts/183/","summary":"API Token Laravel 5.2 introduces the auth token guard setup which is way simpler than Oauth. Also it does not assume a certain level of complexity in needs like Scopes and expirations of tokens that we do not need for our internal app to app communications.\nWe are using 5.1 so this will implement it.\nSee some docs here https://gistlog.co/JacobBennett/090369fbab0b31130b51\nFor creating a user the AppServiceProvider boots the user record and if no api_token is present it will set one.","tags":["php","auth","laravel","api"],"title":"API Token Based Access Laravel 5.1 (Yet another article on this)"},{"content":"Sometimes we need to make sure external APIs have not changed. Some of those we have control over some of those we do not.\nEither way we can run tests daily, weekly or as needed, outside of our tests we run with every push to Github, that will make sure this API is still delivering what we expect.\nThis video gave me some good tips on this one being to keep your Contract tests outside of your Domain Logic. Secondly to focus on the KEYS and VALUES you care about.\nKEYS Focusing on the ones you care about can make this a ton easier. If I am calling an API and only want to know the ID and TITLE then I am going to make sure those exist and are in the same place every time.\nHere are some results from the Marvel Comics API\n{\r\u0026quot;offset\u0026quot;: 0,\r\u0026quot;limit\u0026quot;: 20,\r\u0026quot;total\u0026quot;: 733,\r\u0026quot;count\u0026quot;: 20,\r\u0026quot;results\u0026quot;: [\r{\r\u0026quot;id\u0026quot;: 55699,\r\u0026quot;digitalId\u0026quot;: 0,\r\u0026quot;title\u0026quot;: \u0026quot;Spider-Man (2016) #5\u0026quot;,\r\u0026quot;issueNumber\u0026quot;: 5,\r\u0026quot;variantDescription\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;BLACK CAT makes her move against SPIDER-MAN!!!\u0026quot;,\r\u0026quot;modified\u0026quot;: \u0026quot;2016-04-05T12:46:27-0400\u0026quot;,\r\u0026quot;isbn\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;upc\u0026quot;: \u0026quot;75960608314500511\u0026quot;,\r\u0026quot;diamondCode\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;ean\u0026quot;: \u0026quot;\u0026quot;,\rI just want to make sure \u0026ldquo;results\u0026rdquo; has a record, with ID and TITLE. So I can call this api via PHPUnit on a scheduled basis and make sure it is working if not ping us in Slack.\nVALUES Then there are values. Many times these change so I might not focus on the value of the value but the type. Integer, Array, Not-Null, Empty etc. What am I expecting?\nPHPUnit With these two things in place we can have a set of PHPUnit tests that can run on a schedule. You can set your phpunit.xml to hit these as separate Suites.\n \u0026lt;testsuites\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Application Test Suite\u0026quot;\u0026gt;\r\u0026lt;directory\u0026gt;./tests/\u0026lt;/directory\u0026gt;\r\u0026lt;/testsuite\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Contracts Test Suite\u0026quot;\u0026gt;\r\u0026lt;directory\u0026gt;./tests/contracts/\u0026lt;/directory\u0026gt;\r\u0026lt;/testsuite\u0026gt;\r\u0026lt;/testsuites\u0026gt;\rAnd just run those phpunit --testsuite Contracts Test Suite\n","relPermalink":"/posts/182/","summary":"Sometimes we need to make sure external APIs have not changed. Some of those we have control over some of those we do not.\nEither way we can run tests daily, weekly or as needed, outside of our tests we run with every push to Github, that will make sure this API is still delivering what we expect.\nThis video gave me some good tips on this one being to keep your Contract tests outside of your Domain Logic.","tags":["php","testing"],"title":"Contract Testing"},{"content":"Quick Install Steps\nVagrant and Homestead This was easy I just followed these steps here and I was done. For me I used Vmware but Virtualbox is fine.\nWindows in Selenium Two easy steps\nStep 1 Install Node.js SUPER EASY https://nodejs.org/en/download/\nInstall the .exe, restart your console and you have node!\nStep 2 Install Selenium Just go here and you are done! https://www.npmjs.com/package/selenium-standalone\nAfter those steps I run it in a powershell and the server is running and I am set to use it.\nFinal Touches In my VM I \u0026ldquo;sudo vim /etc/hosts\u0026rdquo; and point it to my selenium on windows using the domain \u0026ldquo;selenium.dev\u0026rdquo;\n192.168.7.57 selenium.dev\rThen my behat.yml looks like this\nSo when I run this inside the VM it knows to talk to the exteral version of Selenium\ndefault:\rsuites:\rhome_ui:\rpaths: [ %paths.base%/features/home]\rcontexts: [ HomePageUiContext ]\rextensions:\rLaracasts\\Behat:\renv_path: .env.behat\rBehat\\MinkExtension:\rdefault_session: laravel\rbase_url: https://recipes.dev\rlaravel: ~\rselenium2:\rwd_host: \u0026quot;http://selenium.dev:4444/wd/hub\u0026quot;\rbrowser_name: chrome\rYou can see more of it here\n","relPermalink":"/posts/181/","summary":"Quick Install Steps\nVagrant and Homestead This was easy I just followed these steps here and I was done. For me I used Vmware but Virtualbox is fine.\nWindows in Selenium Two easy steps\nStep 1 Install Node.js SUPER EASY https://nodejs.org/en/download/\nInstall the .exe, restart your console and you have node!\nStep 2 Install Selenium Just go here and you are done! https://www.npmjs.com/package/selenium-standalone\nAfter those steps I run it in a powershell and the server is running and I am set to use it.","tags":["bdd","behat","windows"],"title":"Getting Going Quickly Windows, Behat and Selenium"},{"content":"Storing files on S3 is great. And many times those files are private so I only want to give temporary access to them. Using Laravel Storage I can interact with the file-system quite easily and seamlessly especially between Cloud and Local.\nIn this case I want to return a file only for 10 minutes\n public function getSignedUrl($filename_and_path, $expires_minutes = '10')\r{\r$client = Storage::disk('s3')-\u0026gt;getDriver()-\u0026gt;getAdapter()-\u0026gt;getClient();\r$bucket = env('BUCKET');\r$command = $client-\u0026gt;getCommand('GetObject', [\r'Bucket' =\u0026gt; $bucket,\r'Key' =\u0026gt; $filename_and_path\r]);\r$request = $client-\u0026gt;createPresignedRequest($command, Carbon::now()-\u0026gt;addMinutes($expires_minutes));\rreturn (string) $request-\u0026gt;getUri();\r}\rThat is it!\nThanks to this post for the help.\n","relPermalink":"/posts/180/","summary":"Storing files on S3 is great. And many times those files are private so I only want to give temporary access to them. Using Laravel Storage I can interact with the file-system quite easily and seamlessly especially between Cloud and Local.\nIn this case I want to return a file only for 10 minutes\n public function getSignedUrl($filename_and_path, $expires_minutes = '10')\r{\r$client = Storage::disk('s3')-\u0026gt;getDriver()-\u0026gt;getAdapter()-\u0026gt;getClient();\r$bucket = env('BUCKET');\r$command = $client-\u0026gt;getCommand('GetObject', [\r'Bucket' =\u0026gt; $bucket,\r'Key' =\u0026gt; $filename_and_path\r]);\r$request = $client-\u0026gt;createPresignedRequest($command, Carbon::now()-\u0026gt;addMinutes($expires_minutes));\rreturn (string) $request-\u0026gt;getUri();\r}\rThat is it!","tags":["php","aws"],"title":"AWS, S3 Storage and limited Visibility"},{"content":"Just had to tackle this issue so making some notes for later here :)\nUpdated and more detailed here\nI run selenium on my Windows PC and before that my Mac, either one would have had this issue since my test is running side my VM. This meant when I needed to run a test to interact with a form to upload an image that image path was relative to the machine (VM) that I started the test on and not the Browser that was being manipulated by Selenium2.\nThe solution was \u0026ldquo;easy\u0026rdquo; thanks to this thread\nAfter that my step just looked like this and I was done\n /**\r* @Then I should be able to upload an image file\r*/\rpublic function iShouldBeAbleToUploadAnImageFile()\r{\r$localFile = base_path('features/assets/profile.jpg');\r$tempZip = tempnam('', 'WebDriverZip');\r$zip = new \\ZipArchive();\r$zip-\u0026gt;open($tempZip, \\ZipArchive::CREATE);\r$zip-\u0026gt;addFile($localFile, basename($localFile));\r$zip-\u0026gt;close();\r$remotePath = $this-\u0026gt;getSession()-\u0026gt;getDriver()-\u0026gt;getWebDriverSession()-\u0026gt;file([\r'file' =\u0026gt; base64_encode(file_get_contents($tempZip))\r]);\r$this-\u0026gt;attachFileToField('profile_image', $remotePath);\runlink($tempZip);\r$this-\u0026gt;pressButton('Save');\r}\rI also had to add @javascript to the test to allow this WebDriver feature to work.\nThat was it, saved me a ton of time suffering through this gotcha moment.\n","relPermalink":"/posts/179/","summary":"Just had to tackle this issue so making some notes for later here :)\nUpdated and more detailed here\nI run selenium on my Windows PC and before that my Mac, either one would have had this issue since my test is running side my VM. This meant when I needed to run a test to interact with a form to upload an image that image path was relative to the machine (VM) that I started the test on and not the Browser that was being manipulated by Selenium2.","tags":["behat","bdd","php","note2self"],"title":"Behat and Uploading Files to a Form Even on Remote Selenium2 Servers"},{"content":"Going crazy running PHPUnit all and getting fail but you run the one route and it works!\nThe difference is require versus require_once in PHPUnit tests.\nFor example\nrequire __DIR__ . '/../ConfigurationExamples/routes.php';\rRoute::get('/', function () {\rreturn view('welcome');\r});\rNow when I run my tests I get 100% pass\n/**\r* @test\r*/\rpublic function should_auth_user()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$results = $this-\u0026gt;call('GET', sprintf(\u0026quot;/example/auth_token?api_token=%s\u0026quot;, $user-\u0026gt;api_token));\r$this-\u0026gt;assertEquals(200, $results-\u0026gt;status());\r$this-\u0026gt;assertEquals(\u0026quot;foo\u0026quot;, $results-\u0026gt;getContent());\r}\r/**\r* @test\r*/\rpublic function should_fail_user()\r{\r$results = $this-\u0026gt;call('GET', '/example/auth_token');\r$this-\u0026gt;assertEquals(302, $results-\u0026gt;status());\r}\r/**\r* @test\r*/\rpublic function should_pass_auth_with_no_token()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$this-\u0026gt;be($user);\r$results = $this-\u0026gt;call('GET', '/example/auth_token');\r$this-\u0026gt;assertEquals(200, $results-\u0026gt;status());\r$this-\u0026gt;assertEquals(\u0026quot;foo\u0026quot;, $results-\u0026gt;getContent());\r}\rThe moment I change it to require_once I get fails on the last or second to last one, it is not consistant except that it will fail. I immediately run that one and it passes.\nIt is not the database and I can change the order of these tests to have the bottom one fail.\nSo require is your friend!!\n","relPermalink":"/posts/178/","summary":"Going crazy running PHPUnit all and getting fail but you run the one route and it works!\nThe difference is require versus require_once in PHPUnit tests.\nFor example\nrequire __DIR__ . '/../ConfigurationExamples/routes.php';\rRoute::get('/', function () {\rreturn view('welcome');\r});\rNow when I run my tests I get 100% pass\n/**\r* @test\r*/\rpublic function should_auth_user()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$results = $this-\u0026gt;call('GET', sprintf(\u0026quot;/example/auth_token?api_token=%s\u0026quot;, $user-\u0026gt;api_token));\r$this-\u0026gt;assertEquals(200, $results-\u0026gt;status());\r$this-\u0026gt;assertEquals(\u0026quot;foo\u0026quot;, $results-\u0026gt;getContent());\r}\r/**\r* @test\r*/\rpublic function should_fail_user()\r{\r$results = $this-\u0026gt;call('GET', '/example/auth_token');\r$this-\u0026gt;assertEquals(302, $results-\u0026gt;status());\r}\r/**\r* @test\r*/\rpublic function should_pass_auth_with_no_token()\r{\r$user = factory(\\App\\User::class)-\u0026gt;create();\r$this-\u0026gt;be($user);\r$results = $this-\u0026gt;call('GET', '/example/auth_token');\r$this-\u0026gt;assertEquals(200, $results-\u0026gt;status());\r$this-\u0026gt;assertEquals(\u0026quot;foo\u0026quot;, $results-\u0026gt;getContent());\r}\rThe moment I change it to require_once I get fails on the last or second to last one, it is not consistant except that it will fail.","tags":["note2self","php","laravel"],"title":"Laravel, PHPUnit, Require_Once on Routes"},{"content":"Listen Here\nThis document will cover how to use a Behat specific API to setup a site for testing. What this includes is setting up a Scenario so that it has the data you need to run a test. This makes it possible not to rely on Seed data for this. This will allow us to run behat tests from remote machines as well as run tests in parallel.\nWhy not seed data? From experience seed data fails in two ways.\nOne a project gets large and there is a ton of seed data and one person adds to it or alters in a way that effects how someone else was expecting the data to be. It just becomes too much of it\u0026rsquo;s own domain of knowledge outside of the test it applies to.\nSecond seed data assumes you can reset the state of the application at anytime. But if you want to run your tests in parallel you need to have a more precise system to set up the \u0026ldquo;World\u0026rdquo; for that particular Scenario.\nThe API First we will setup an API in our app just for Behat and the behat user.\nExample Route protected by Authentication as a particular user.\nRoute::get('/api/v1/behat/setup_campaign_eu',\r['as' =\u0026gt; 'behat.camp_eu', 'uses' =\u0026gt; '\\AlfredNutileInc\\BehatAPI\\BehatApiController@setupCampaignEU']);\rExample Controller\n public function setEUCampaignToPushed()\r{\r$campaign = Campaign::find($this-\u0026gt;campaign_id_eu);\rif($campaign)\r{\r$campaign-\u0026gt;status = Campaign::PUSHED;\r$campaign-\u0026gt;save();\r}\r}\rSo now our data is set.\nBehat Steps So when we run our Behat test we start by setting that state.\n Background: Login\rGiven I setup campaigns\rGiven I login as \u0026quot;admin\u0026quot;\rAnd I wait\rWe are setting up this state right before we run the Scenario(s). Of course we can move this one step into the needed Scenario if there are many in the test.\nExample of the FeatureContext.php file that has this step.\n /**\r* @Given /^I setup campaigns$/\r*/\rpublic function iSetupCampaigns()\r{\r$this-\u0026gt;iLoginAs('behat');\r$this-\u0026gt;visit('/api/v1/behat/setup_campaign_eu');\r}\rYou see we are using the already existing Behat steps and sessions to log in and finally hit the API path we created above.\nClean Up And using the hooks that Behat has we can clean up after our steps even if there is a fail. Again leaving the system in the same stat it was when we first hit it with our tests.\nThe test file\u0026rsquo;s scenario has a tag @1_1 as seen below\n @1_1\rScenario: Campaign Misc\rGiven I am on an EU Campaign\rAnd I wait\rThis tag is then called in our FeatureContext file using a Behat Hook AfterScenario\n /**\r* @AfterScenario @1_1\r*/\rpublic function after_1_1($event)\r{\r$this-\u0026gt;iLoginAs('behat');\r$this-\u0026gt;visit('/api/v1/behat/1_1_cleanup');\r}\rThis allows us to hit the api at the end of the Scenario once again\n public function cleanUpCampaignEU()\r{\rtry\r{\r$country = Country::find('test-country-eu');\r$country-\u0026gt;active = 0;\r$country-\u0026gt;save();\r$campaign_fixture = $this-\u0026gt;loadCampaignFixtureForEu();\r$this-\u0026gt;cleanOutRelatedMetaMaster($campaign_fixture);\r$this-\u0026gt;cleanUpByID($campaign_fixture);\r$this-\u0026gt;cleanUpByID_16Name();\r$this-\u0026gt;misc_cleanup();\rreturn Response::json(\u0026quot;Done cleaning Campaign EU\u0026quot;, 200);\r}\rcatch(\\Exception $e)\r{\rreturn Response::json(\u0026quot;Error cleaning Campaign EU \u0026quot; . $e-\u0026gt;getMessage());\r}\r}\rAnd that is it. We have tested and cleaned up after our selves with a precision that allows us to run tests in parallel, from remote machines and to even do smoke tests on any environment.\n","relPermalink":"/posts/177/","summary":"Listen Here\nThis document will cover how to use a Behat specific API to setup a site for testing. What this includes is setting up a Scenario so that it has the data you need to run a test. This makes it possible not to rely on Seed data for this. This will allow us to run behat tests from remote machines as well as run tests in parallel.\nWhy not seed data?","tags":["behat","laravel"],"title":"Remote Behat Testing with Laravel"},{"content":"This video just shows and example of a NOT CMS we built for a client. Sure they can add content and manage it BUT they did not need all the extra features that come with Wordpress or Drupal like workflows, versioning, intricate roles etc.\nAlso they had a huge need to easily deploy all of this work. For example the Help system can have updates deployed to all of the sites via one Github commit.\nSo in this case the need for spinning up new instances for clients, easily updating 100s of sites and keeping the whole UI simple far out weighed all the other features Wordpress and Drupal gave you out of the box.\n","relPermalink":"/posts/176/","summary":"This video just shows and example of a NOT CMS we built for a client. Sure they can add content and manage it BUT they did not need all the extra features that come with Wordpress or Drupal like workflows, versioning, intricate roles etc.\nAlso they had a huge need to easily deploy all of this work. For example the Help system can have updates deployed to all of the sites via one Github commit.","tags":["cms","laravel"],"title":"CMS or NOT CMS"},{"content":"Overview Library is https://github.com/friendsofcat/laravel-feature-flag/\nListen here\nWatch https://youtu.be/4nq7FyHQj8I\nWe are working on using FeatureFlags or Toggles in our applications. For one we are aiming to do all our work on mainline branch at all times so this would be a key coding discipline to use FeatureFlags so we can hide a feature in progress knowing it will not interfere with the application. For example if a hotfix or another feature is ready to go to production we can push that with no worries of the in progress feature.\n FeatureFlags so we can hide a feature in progress knowing it will not interfere with the application\n You can see many of the reasons in this article http://martinfowler.com/articles/feature-toggles.html by Pete Hodgson for using this system. So not just the more common situations of permissions but also Release Toggles, Experiment Toggles and more see list and image below\n[image from martin fowler feature-toggles article\n Release Toggles Ops Toggles Permission Toggles Experiment Toggles  The core coding logic I will be using is this library Atriedes/feature as it has the logic needed to consider common feature flag states eg user, users, on, off, groups, admin, internal, random etc.\n on or off value simple! on for users on for groups on for a user bucketing random random percentage url query string   The core coding logic I will be using is this library Atriedes/feature\n One key thing, as I use this in Laravel, is I will try and mix this with the existing Authorization workflow that is already present. This gives me some already prepared ways to think about this both at the view layer, model layer and controller layer and where to register these states. Plus we then get great Laravel docs to help explain some of it.\nFor example I can use this in my theme snippet\nInstalling This will install two things. The library I made to do this and the Example library I am using to show it in action.\nProviders Add the below to your config/app.php\nAlfredNutileInc\\LaravelFeatureFlags\\FeatureFlagsProvider::class,\rAlfredNutileInc\\LaravelFeatureFlags\\ExampleFeatureProvider::class,\rThe Core Library FeatureFlagsProvider What does this do?\nIt does some basic Laravel work for registering views for settings, routes for managing settings CRUD and some cache on model changes so we can update the World as needed.\nThe big thing it does do is instantiate World.\n public function boot()\r{\r$this-\u0026gt;registerViewFiles();\r$this-\u0026gt;injectLinks();\r$this-\u0026gt;registerFeatureFlags();\r}\rprivate function registerFeatureFlags()\r{\r$features = FeatureFlag::where('active', 1)-\u0026gt;get()-\u0026gt;toArray();\rforeach($features as $key =\u0026gt; $value)\r{\r$features = $this-\u0026gt;transformFeatures($features, $value, $key);\runset($features[$key]);\r}\r$world = new World();\r\\Feature\\Feature::create($world, $features);\r}\rprivate function transformFeatures($features, $value, $key)\r{\r$features[$value['key']] = $value;\r$features[$value['key']]['users'] = (isset($value['variants']['users'])) ? $value['variants']['users'] : [];\rreturn $features;\r}\r The big thing it does do is instantiate World.\n The database saves the data in a way that I will talk about below. Above is the transformation of that data into a more compatible form to this library.\nSo at this point we have World, which is where we set our way of finding truth and $features which is the state of all features.\nWorld This class implements the interface that comes with the library\nYou can see that here\nI simply do some logic in there based off User email since that is all I am using right now instead of user id or name. More can be added as needed to react to all the other options.\nBut this is how we find things like \u0026lsquo;can this user see this feature\u0026rsquo;, \u0026lsquo;what users are active for this feature\u0026rsquo; etc. Basically it is the class you use to tie your framework into the FeatureFlag logic. So when it asks for groups, users, etc it has the methods and logic needed to compare your data to the feature flag requirements.\nThen the ExampleFeature Provider Just so I could try out this library on something so I could wrap my head around it I made an example feature that added a twitter field to the user data.\nThis was great cause it was a schema change so I had to make sure the field was nullable and it offered some view level interactions with the FeatureFlag.\nIn the View I made a view of it partial\nThat can be injected into the main view that this feature will be altering example.blade.php\nAll of this is registered in the Provider setup above\npublic function boot(GateContract $gate)\r{\r$this-\u0026gt;registerPolicies($gate);\r$gate-\u0026gt;define('add-twitter-field', '\\AlfredNutileInc\\LaravelFeatureFlags\\ExampleFeatureFlagLogic@addTwitterField');\r$gate-\u0026gt;define('see-twitter-field', '\\AlfredNutileInc\\LaravelFeatureFlags\\ExampleFeatureFlagLogic@seeTwitterField');\r}\rThose logic classes are super simple thanks to this library and really could just have been Closures.\n\u0026lt;?php\rnamespace AlfredNutileInc\\LaravelFeatureFlags;\rclass ExampleFeatureFlagLogic\r{\rpublic function addTwitterField()\r{\rreturn \\Feature\\Feature::isEnabled('add-twitter-field');\r}\rpublic function seeTwitterField($user)\r{\rreturn \\Feature\\Feature::isEnabled('see-twitter-field');\r}\r}\rNow you can turn off this info as needed. And in your Controllers/Repository just remember to not assume that field is coming in via request or that it even exists in the Model.\n$user-\u0026gt;twitter = ($request-\u0026gt;input(\u0026quot;twitter\u0026quot;)) ? $request-\u0026gt;input(\u0026quot;twitter\u0026quot;) : null;\rHonestly I think it is better to add this to a Laravel Model Event. Then as you listen to that Event you can react to it. And when not having the feature on or installed any longer it is one less place your code is being injected into the application.\nFeatureFlag Migration The Migration will make one table for feature_flags and add a column to the user table for the example twitter field feature.\nNote the Example Provider will add the twitter column to the user table. It is nullable so it will not be an issue if other parts of the app do not consider this data.\nIn the feature_flags table there we have the id column, the key column, active column to even consider the feature flag and then the variants column if any. I might get rid of the active column but thought it might speed up queries.\nThe variant column being json allows us to store unstructured data to hold any data for different situations so we can cover all the possible variants listed above.\nFor example\n\r$server_config['show-twitter'] =\u0026gt; array('users' =\u0026gt; array('on' =\u0026gt; array('fred')))\rwould store as\n|ID |KEY |ACTIVE |VARIANT |\r|---|--------------|---------|---------------------------------|\r| 2 | show-twitter | 1 |{ 'users': [ 'on': [ 'fred' ] ] }|\r| | | | |\rMenu Just a note the demo has the Feature Flag menu. Because this core app uses the ViewComposer pattern to create a \u0026ldquo;links\u0026rdquo; array I can add to that later on in my FeatureFlagProvider\n private function injectLinks()\r{\rview()-\u0026gt;composer(\r'layouts.default', function($view) {\rif ($view-\u0026gt;offsetExists('links')) {\r$links_original = $view-\u0026gt;offsetGet('links');\r$links = [\r['title' =\u0026gt; 'Feature Flags', 'url' =\u0026gt; route('feature_flags.index'), 'icon' =\u0026gt; 'flag-o']\r];\r$view-\u0026gt;with('links', array_merge($links_original, $links));\r}\r}\r);\r}\rBut that is for another post!\nVideo \r\rTODO  Use Model Events to do that level of work Cache of the FeatureFlag Settings and update Cache on Change Show how it works in the menu and other areas eg include and Provider  ","relPermalink":"/posts/175/","summary":"Overview Library is https://github.com/friendsofcat/laravel-feature-flag/\nListen here\nWatch https://youtu.be/4nq7FyHQj8I\nWe are working on using FeatureFlags or Toggles in our applications. For one we are aiming to do all our work on mainline branch at all times so this would be a key coding discipline to use FeatureFlags so we can hide a feature in progress knowing it will not interfere with the application. For example if a hotfix or another feature is ready to go to production we can push that with no worries of the in progress feature.","tags":["laravel","feature_flags","php"],"title":"Feature Flags In Laravel"},{"content":"This is so I do not forget!\nUPDATED: go here instead https://www.npmjs.com/package/selenium-standalone\n1) sudo npm -g install webdriver-manager 2) sudo webdriver-manager update \u0026ndash;chrome 3) Get Java for the Mac Googled El Capitan Java and takes me to Apples site to get the right version of java\nhttps://support.apple.com/kb/dl1572?locale=en_US\n4) webdriver-manager start That is it!\n","relPermalink":"/posts/174/","summary":"This is so I do not forget!\nUPDATED: go here instead https://www.npmjs.com/package/selenium-standalone\n1) sudo npm -g install webdriver-manager 2) sudo webdriver-manager update \u0026ndash;chrome 3) Get Java for the Mac Googled El Capitan Java and takes me to Apples site to get the right version of java\nhttps://support.apple.com/kb/dl1572?locale=en_US\n4) webdriver-manager start That is it!","tags":["behat","note2self"],"title":"Install Webdriver to get testing with Behat and Javascript"},{"content":"Laravel or anything you are comfortable with making a Route and Response will work fine really.\nThis \u0026ldquo;messaging as a platform\u0026rdquo; is a new world for me, challenging my way of thinking in many ways. Some things just do not need a authentication of their own, a UI, etc they just need a place to get info from, or do something with some info etc.\nIn this case I made a really simple \u0026ldquo;Custom Slash Command\u0026rdquo; to translate British Slang to American and American to British (so I can sound cooler!)\nLater I will look into bots etc but for now here is a look at a custom slash commands.\nGetting API Endpoint Setup I still do not have a great local workflow for this. There are articles about this online with secure tunnels etc. My next step is to use my wildcard cert or using https://letsencrypt.org/ to have a local url so I can make this workflow a ton easier.\nBut to get going I had to setup a domain with valid HTTPS. As linked above, Let\u0026rsquo;s Encrypt might be a great way to setup a play area and solutions like Forge https://forge.laravel.com/ Heroku https://www.heroku.com/ are great ways to get going quickly on getting a \u0026ldquo;POSTABLE\u0026rdquo; API in place.\nWhat I mean by POSTABLE is that your API needs to take a POST from Slack (it can take a GET but not sure the advantage to that) but consider App you are setting up the foundation to so many cool integrations you can do with Slack all using this one server your are setting up, until of course something needs it\u0026rsquo;s own space. One POSTABLE API can be like your own \u0026ldquo;If This Then That\u0026rdquo; https://ifttt.com/ solution in my opinion. Fun for some of us that is for sure.\nOnce that was setup I could start playing around.\nSetting up the Slack Endpoint Once I log into the slack.com website and read up on the API went over to Custom Integrations. Making a Slack App will come later but for not this was more than enough to have some fun.\nIn there I added a configuration.\nThere are several settings here that matter.\n Command: /b2a URL: https://foo.com/api/v1/brit_to_us Method: POST Token: TOP_SECRET Customize Name: brit2american Custom Icon: speaking_head_in_silhouette Help Text: Description: Translate British slang to American Slang Usage hint: Throw A Spanner In The Works Descriptive Label: Brit to American Slang  I made two of them since I also need to turn my boring American into cool British Slang\n Command: /a2b URL: https://foo.com/api/v1/us_to_brit Method: POST Token: TOP_SECRET Customize Name: american2brit Custom Icon: speaking_head_in_silhouette Help Text: Description: Translate American to Cool British Slang Usage hint: Throw A Spanner In The Works Descriptive Label: Good Morning All!  Once these are setup we are ready to build our Routes!\nSetting Up the Receiving API This part could have gone better if I had a local environment setup to receive these Slack commands and next time I will, I just did not realize how easy it was to just setup my own local environment with a good signed cert which Slack requires until I started writing this article.\nThis was for fun so I did not go crazy with design. All of it could have been in the route file really. But I do want this domain and Laravel install I made to allow me to plug in other Custom Commands and later Slack App.\nSlack Payload Note this page on Slack https://api.slack.com/slash-commands you will get a payload like this\ntoken=gIkuvaNzQIHg97ATvDxqgjtO\rteam_id=T0001\rteam_domain=example\rchannel_id=C2147483705\rchannel_name=test\ruser_id=U2147483697\ruser_name=Steve\rcommand=/weather\rtext=94070\rresponse_url=https://hooks.slack.com/commands/1234/5678\rFor me that meant keeping some things in the .env file as needed to look for a specific Token, User etc BUT later I can see making a Provider class and Config file to setup up for each Slash Command or App I make so that I keep the settings as needed in one grouped place and not in a huge file.\nFor now I just use the text and the response_url to my advantage the rest I am not worried about right now.\nThis is also I good example of an easy Webhook workflow. Give me your object and where to send the results back to.\nKeeping the routing simple my routes.php file is just this\nRoute::post('/api/v1/brit_to_us', 'BritToUSController@britToUs');\rRoute::post('/api/v1/us_to_brit', 'BritToUSController@usToBrit');\rAnd that controller is just this\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse Illuminate\\Http\\Request;\ruse App\\Http\\Requests;\ruse App\\Http\\Controllers\\Controller;\ruse Goutte\\Client as GoutteClient;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Facades\\Response;\rclass BritToUSController extends Controller\r{\rprotected $url = 'http://www.translatebritish.com/';\r/**\r* @var GoutteClient\r*/\rprotected $client;\rpublic function __construct(GoutteClient $client)\r{\r$this-\u0026gt;client = $client;\r}\rpublic function usToBrit(Request $request)\r{\r$this-\u0026gt;validate($request, [ 'token' =\u0026gt; 'required']);\rLog::info($request-\u0026gt;input());\r$crawler = $this-\u0026gt;client-\u0026gt;request('GET', $this-\u0026gt;url . 'reverse.php');\r$form = $crawler-\u0026gt;siblings()-\u0026gt;filterXPath('//*[@id=\u0026quot;content-area\u0026quot;]/div/div[1]/div[1]/div[1]/div[1]/form')-\u0026gt;form();\r$crawler = $this-\u0026gt;client-\u0026gt;submit($form,\rarray('p' =\u0026gt; $request-\u0026gt;input('text')));\r$results = $crawler-\u0026gt;siblings()-\u0026gt;filter('.translation-text')-\u0026gt;text();\rreturn Response::json($this-\u0026gt;respondToSlack($results, $request-\u0026gt;input('text'), 'in_channel'));\r}\rpublic function britToUs(Request $request)\r{\r$this-\u0026gt;validate($request, [ 'token' =\u0026gt; 'required']);\rLog::info($request-\u0026gt;input());\r$crawler = $this-\u0026gt;client-\u0026gt;request('GET', $this-\u0026gt;url);\r$form = $crawler-\u0026gt;siblings()-\u0026gt;filterXPath('//*[@id=\u0026quot;content-area\u0026quot;]/div/div[1]/div[1]/div[1]/div[1]/form')-\u0026gt;form();\r$crawler = $this-\u0026gt;client-\u0026gt;submit($form,\rarray('p' =\u0026gt; $request-\u0026gt;input('text')));\r$results = $crawler-\u0026gt;siblings()-\u0026gt;filter('.translation-text')-\u0026gt;text();\rreturn Response::json($this-\u0026gt;respondToSlack($results, $request-\u0026gt;input('text'), 'in_channel'));\r}\rprotected function respondToSlack($message, $original_message, $type = 'in_channel')\r{\rreturn ['response_type' =\u0026gt; 'in_channel', 'text' =\u0026gt; trim($message), 'attachments' =\u0026gt; ['text' =\u0026gt; $original_message]];\r}\r/**\r* @return string\r*/\rpublic function getUrl()\r{\rreturn $this-\u0026gt;url;\r}\r/**\r* @param string $url\r*/\rpublic function setUrl($url)\r{\r$this-\u0026gt;url = $url;\r}\r}\rThe gist of it is to take the incoming text and pass it to the Translation Site, and return it to the response_url using the Response::json Facade.\nPretty easy. Later I can validate tokens, validate users or query info based on a user eg \u0026ldquo;Get me my tickets from JIRA\u0026rdquo; for example\nThat is some of my goals later, how to use Slack to automate some of my, and my teams, day to day needs and workflows.\nUPDATE Make sure you exclude this route from the \u0026ldquo;app/Http/Middleware/VerifyCsrfToken.php\u0026rdquo; middleware\n protected $except = [\r'api/v1/imports'\r];\r","relPermalink":"/posts/173/","summary":"Laravel or anything you are comfortable with making a Route and Response will work fine really.\nThis \u0026ldquo;messaging as a platform\u0026rdquo; is a new world for me, challenging my way of thinking in many ways. Some things just do not need a authentication of their own, a UI, etc they just need a place to get info from, or do something with some info etc.\nIn this case I made a really simple \u0026ldquo;Custom Slash Command\u0026rdquo; to translate British Slang to American and American to British (so I can sound cooler!","tags":["laravel","php","slack"],"title":"Slack Custom Commands and Laravel to Make an American to British Translater"},{"content":"Listen here\nThis article will focus on web applications and not really be about building websites eg a company blog, college website etc.\nThis will cover two things. One, how helpful it can be to make a clickable Proof of Concepts (POC), not just with images, or tools the spit out html but instead just enough javascript and base theme to help \u0026ldquo;sell\u0026rdquo; the idea, or more importantly to help Product Owners see the possibilities that are not too far out of reach. And the second, and maybe more important thing I will cover is that the developer has a lot to gain in taking on this seemingly non-coding path.\n \u0026ldquo;Use it to make the \u0026ldquo;happy paths\u0026rdquo; that the Product Owners need to see\u0026rdquo;\n To begin with I want to set a baseline for the user interface. If your project is new find a theme or base theme (WrapBootstrap, BootStrap, Zurb Foundation, etc). Something that you can easily plug a collection of pieces together to get going easily. This leaves your more time, energy and budget to focus on the business\u0026rsquo;s solution. But if this is an existing project then use the already established theme for your POC so people can really see the context of what you are showing them. Either way you want more than just a un-styled, out of context feature on a white background to help them, the Product Owners, see how their User Stories can work. And you want something more than a bunch of image maps in my opinion.\nAnd to help with the above use Javascript, but keep the it \u0026ldquo;simple\u0026rdquo; while also keeping in realistic. Use it to make the \u0026ldquo;happy paths\u0026rdquo; that the Product Owners need to see. For example, I had to show a POC of turning on and off comments, different levels of diffs on images for comparing two states of a website page from 2 different time periods in 3 different widths. And in about two days, with the foundation theme we used before, I was able to show this interactive web application. And in this case the designer helped to translate the business needs into wireframes to help lay out a bare path for me to follow.\n \u0026ldquo;\u0026hellip;only they (the developer) know the boundaries of the technologies being used and possibilities\u0026rdquo;\n So why should the developer do this and not a person un-experienced in the technologies being used? Why not just use one of those tools that spit out html and make a clickable mock in the context of those tool? This is the key, in my opinion, because it is only the developer who will be able to push the technologies to the next level of possibilities for the solution because only they know the boundaries of the technologies being used and possibilities. And only they can discover new possibilities along the way. And what you will get is a solution that can confidently expose new ideas and possibilities that helps it exceed expectations.\n \u0026ldquo;But the developer also needs to do this for their own good\u0026rdquo;\n But the developer also needs to do this for their own good, to get into the business domain, to start thinking about the business needs and exploring, knowing it is not final, knowing it can be thrown away. And it is this process that helps the developer to see the many things they had not realized they had missed about the business domain model and grow in the knowledge needed to make the right product.\nAnd when it is done it might have zero reusable code but that is fine. Maybe the developer can use it to build some acceptance tests out of it as he or she starts working with real code having a clear understanding of the goals.\nLinks to Great Resources Themes that have lots of widgets and UI elements  https://wrapbootstrap.com/ https://www.google.com/design/spec/material-design/introduction.html http://getbootstrap.com/ https://material.angularjs.org/latest/ http://foundation.zurb.com/ https://angular-ui.github.io/bootstrap/  Techniques  https://alfrednutile.info/posts/58 https://laravel.com/docs/5.2/routing See the Any route  Tools  http://www.json-generator.com/ http://www.layoutit.com/  ","relPermalink":"/posts/172/","summary":"Listen here\nThis article will focus on web applications and not really be about building websites eg a company blog, college website etc.\nThis will cover two things. One, how helpful it can be to make a clickable Proof of Concepts (POC), not just with images, or tools the spit out html but instead just enough javascript and base theme to help \u0026ldquo;sell\u0026rdquo; the idea, or more importantly to help Product Owners see the possibilities that are not too far out of reach.","tags":["developer","user stories","workflows"],"title":"Then Benefits of Building a Clickable POC as a Developer"},{"content":"Update: September 06 2016\nWe stopped doing this. I do not think it is a bad idea but we ended up going with CodeDeploy on AWS. So after our CI does a Composer install and all passes, CodeDeploy will just bundle everything up as a Zip file and deploy that to the server.\nOr Listen here\nAnother article about this written by Loran Jane Mitchell Using Composer Without GitIgnoring Vendor\nI have done this for sometime with node_modules because I use to hate waiting for npm to pull down during CI builds. I could have used the CI systems cache for this but I realized once the project starts it is rare that I needed to add more libraries. And when I did it was just as easy to wipe using git rm and do them again fresh. This included my use of Bower.\nBut then there is Composer and PHP. The project starts and I might be pulling in libraries quite a bit but at some point we are just running composer install and never composer update. This step included rm -rf vendor which helped with the speed. And this is going great BUT has a few draw backs I will cover below.\n \u0026ldquo;I have seen it too many times. Our CI goes well even our stage goes well but then git via Github gets stuck on one repo out of the many you are installing\u0026rdquo;\n Speed (CI, and Deployment) This is not HUGE but with workflow now each deployment, unless it is a quick one, we tend to just use rm -rf vendor \u0026amp;\u0026amp; composer install. And it does cost us 1/2 a minute. Again not huge but nice to not have that as down time to the user. For at this point the app is not usable. And even worse as I will talk about below. And we do a lot of builds a day in the CI.\nOne Point of Failure VS Many This is the big reason in my opinion. I have seen it too many times. Our CI goes well even our stage goes well but then git via Github gets stuck on one repo out of the many you are installing. This can be caused due to a misconfiguration on our part, eg using anonymous Github connections but at times I have seen it even when authenticated and am not totally sure why.\nThen there are those moments, and they happen, when Github is under DDOS attack! So then it is just a day of no deployments and that is not an option really. And with this technique we have a good chance of getting a deployment in since we are just hitting one repo and not trying our luck at many.\nRollback Then there are Rollback moments. Zero down time would be great and this is one step closer. With our releases we use Tags. So if I was to release 1.2.2 and it had a bug I could rollback to tag 1.2.1 in moments. No need to rebuild composer. Sure it saves minor amount of time but when things are down on production 1/2 a minute can feel like a life time. This does not cover all migration issues but that is not a thing we do every deployment and honestly with the migration rollback feature we have in Laravel I think that becomes an edge case that can be dealt with using Artisan and some creative coding.\n \u0026ldquo;when things are down on production 1/2 a minute can feel like a life time\u0026rdquo;\n Fixing Merge Conflicts Well what happens when there is a conflict in this vendor folder? That is easy really just rm the whole thing and do what I have been doing all along composer install saving composer update only for those moments you are looking for something to really be updated and feeling lucky (and patient).\n","relPermalink":"/posts/171/","summary":"Update: September 06 2016\nWe stopped doing this. I do not think it is a bad idea but we ended up going with CodeDeploy on AWS. So after our CI does a Composer install and all passes, CodeDeploy will just bundle everything up as a Zip file and deploy that to the server.\nOr Listen here\nAnother article about this written by Loran Jane Mitchell Using Composer Without GitIgnoring Vendor","tags":["laravel","php","workflows","coding","best practices"],"title":"Put It All Into Version Control Even Composer!"},{"content":"You can Listen here!\nFirst let me define what a ‚ÄúSide Project‚Äù is. In this case a ‚ÄúSide Project‚Äù is something you are not being paid for and something that you have complete control over. It can even be something you are just trying out some new ideas on. The reason it can not be something you are being paid for and ideally something you are fully in charge of is so you\u0026rsquo;re not under any pressure to deliver but you have time to explore, to learn, to try new ideas and overall build confidence.\n In this case of ‚ÄúSide Project‚Äù is something you are not being paid for something and that you have complete control over.\n Otherwise I would say; for me, side projects are the worst thing to do if you are working full time and using them to earn money on the side. Of course I have done many of them, mainly because I had to but at some point when my finances were at a certain place, and my skills needed more than that type of work gave me, it just was not worth my time. This does not include contributing to OpenSource.\nSo now we have a good idea of what I mean by side project so why is it good for me to have one? I think there are a few reasons.\nSwitching my mindset so that I can focus on the business details of the daytime job and the business details of the night time job, for me, is very difficult. I believe this is especially true since some of the domain knowledge of the business, that comes with the work, is so important to grasp and sometimes difficult to really understand. And for me switching from say a full time job that has a business domain of sports and a side project that has a business domain of clothing can be too much to do either well.\nThen there is the chance to have control. When it\u0026rsquo;s a side project we can control of expectations, goals etc and we can kind of just explore. We can try ideas and not worry about immediate deadlines and not worry about delivering a certain feature a certain way. It is this control that allows us to just be creative and not have to really rush things.\nAlso if we are in charge of both the item to be delivered and the person who needs to deliver it we get to see both sides of the challenge. And by doing so we can sometimes build empathy for that Project Owner. Then the next time they do not realize till after the feature was built, by me, that it just was not what they wanted, it will not be as frustrating.\n Then there is the chance to have control\n Then there is repetition. The act of nightly or a few times a week sitting down to create something makes the repetition happen that we need to code well. Maybe you are just building a library or learning how to unit test or acceptance test better. Maybe you\u0026rsquo;re building an API or just going to play around with some API to get data from a website that you like to make a little tool to scratch your own itch. It is the repetition that starts to build the confidence we need to code well.\n It is the repetition that starts to build the confidence we need to code well.\n All of this goes hand in hand of course with learning from more senior developers, books, videos etc but none of those can make us a better coder as much as doing.\nOne thing I do during the day to help with my side work is I will post into Wunderlist any ideas that come to mind that I might like to try out later on. And then when the time comes that have I set aside at the end of the day I can find inspirations from that list and just give it a go for an hour or two. And it has been many times in those sessions of coding, without pressure, that I have experienced the moments of why I still find coding so interesting and satisfying.\n","relPermalink":"/posts/170/","summary":"You can Listen here!\nFirst let me define what a ‚ÄúSide Project‚Äù is. In this case a ‚ÄúSide Project‚Äù is something you are not being paid for and something that you have complete control over. It can even be something you are just trying out some new ideas on. The reason it can not be something you are being paid for and ideally something you are fully in charge of is so you\u0026rsquo;re not under any pressure to deliver but you have time to explore, to learn, to try new ideas and overall build confidence.","tags":["readorlisten","freelance"],"title":"Why Side Projects are Good For Me"},{"content":"Clean out old code can be hard. When your application has numerous javascript widgets, blade templates and forms you can not easily say what routes are being used. But with just a few artisan commands we can easily make this happen.\nAlso this can help with knowing what routes your Tests are NOT covering.\nPackage can be found here as well.\nThe Commands to Get Started php artisan make:model RouteUsage\rphp artisan make:middleware RouteUsageTracker\rphp artisan make:migration route_usage_tracker_table\rphp artisan make:console RouteReport\rMigration \u0026lt;?php\ruse Illuminate\\Database\\Schema\\Blueprint;\ruse Illuminate\\Database\\Migrations\\Migration;\rclass RouteUsageTrackerTable extends Migration\r{\rpublic function up()\r{\rSchema::create('route_usages', function (Blueprint $table) {\r$table-\u0026gt;increments('id');\r$table-\u0026gt;string('path');\r$table-\u0026gt;timestamps();\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::drop('route_usages');\r}\r}\rMiddleware \u0026lt;?php\rnamespace App\\Http\\Middleware;\ruse App\\RouteUsage;\ruse Closure;\rclass RouteUsageTracker\r{\r/**\r* Handle an incoming request.\r*\r* @param \\Illuminate\\Http\\Request $request\r* @param \\Closure $next\r* @return mixed\r*/\rpublic function handle($request, Closure $next)\r{\rRouteUsage::create(['path' =\u0026gt; $request-\u0026gt;path()]);\rreturn $next($request);\r}\r}\rAnd plug that into the Kernel.php\n\rclass Kernel extends HttpKernel\r{\r/**\r* The application's global HTTP middleware stack.\r*\r* @var array\r*/\rprotected $middleware = [\r\\Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::class,\r\\App\\Http\\Middleware\\EncryptCookies::class,\r\\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\r\\Illuminate\\Session\\Middleware\\StartSession::class,\r\\App\\Http\\Middleware\\RouteUsageTracker::class,\r];\rModel \u0026lt;?php\rnamespace App;\ruse Illuminate\\Database\\Eloquent\\Model;\rclass RouteUsage extends Model\r{\rprotected $fillable = ['path'];\r}\rArtisan Reporting This can use more work like pagination, filtering etc. I used the RouteListCommand to get started\n\u0026lt;?php\rnamespace App\\Console\\Commands;\ruse App\\RouteUsage;\ruse Illuminate\\Console\\Command;\ruse Illuminate\\Support\\Facades\\DB;\rclass RouteReport extends Command\r{\r/**\r* The name and signature of the console command.\r*\r* @var string\r*/\rprotected $signature = 'route:report {page?} {--count} ';\rprotected $headers = ['Path', 'Date'];\rprotected $headers_count = ['count', 'Path'];\r/**\r* The console command description.\r*\r* @var string\r*/\rprotected $description = 'Command description';\r/**\r* Create a new command instance.\r*\r* @return void\r*/\rpublic function __construct()\r{\rparent::__construct();\r}\r/**\r* Execute the console command.\r*\r* @return mixed\r*/\rpublic function handle()\r{\rif($this-\u0026gt;option('count'))\r{\r$report = RouteUsage::select(DB::raw('count(*) as used, path'))-\u0026gt;groupBy('path')-\u0026gt;orderBy('used', 'DESC')-\u0026gt;get()-\u0026gt;toArray();\r$this-\u0026gt;table($this-\u0026gt;headers_count, $report);\r}\relse\r{\r$report = RouteUsage::select('path', 'created_at')-\u0026gt;paginate(100);\r$this-\u0026gt;table($this-\u0026gt;headers, $report-\u0026gt;toArray()['data']);\r}\r}\r}\rphp artisan route:report --count\rCan give us\n","relPermalink":"/posts/169/","summary":"Clean out old code can be hard. When your application has numerous javascript widgets, blade templates and forms you can not easily say what routes are being used. But with just a few artisan commands we can easily make this happen.\nAlso this can help with knowing what routes your Tests are NOT covering.\nPackage can be found here as well.\nThe Commands to Get Started php artisan make:model RouteUsage\rphp artisan make:middleware RouteUsageTracker\rphp artisan make:migration route_usage_tracker_table\rphp artisan make:console RouteReport\rMigration \u0026lt;?","tags":["php"],"title":"Do I Really Need This Route Anymore?"},{"content":"Original Post http://laravel-tricks.com/tricks/session-timeout-for-logged-in-user\nThis Middleware made it super easy to satisfy a requirement to log the user out after 15 minutes of in activity.\nI added only a few touchups.\nOne was the getTimeOut this was so I can work locally and override this by setting it to a large number. I could even use it to just bypass the whole things for a bit since on local I rather not deal with this.\nAlso I removed the message count since it just was not needed for what I was doing.\n\u0026lt;?php namespace App\\Http\\Middleware;\ruse Closure;\ruse Illuminate\\Support\\Facades\\Auth;\ruse Illuminate\\Session\\Store;\rclass SessionTimeout {\rprotected $session;\rprotected $timeout=900;\rpublic function __construct(Store $session){\r$this-\u0026gt;session=$session;\r}\r/**\r* Handle an incoming request.\r*\r* @param \\Illuminate\\Http\\Request $request\r* @param \\Closure $next\r* @return mixed\r*/\rpublic function handle($request, Closure $next)\r{\rif(!$this-\u0026gt;session-\u0026gt;has('lastActivityTime'))\r$this-\u0026gt;session-\u0026gt;put('lastActivityTime',time());\relseif(time() - $this-\u0026gt;session-\u0026gt;get('lastActivityTime') \u0026gt; $this-\u0026gt;getTimeOut()){\r$this-\u0026gt;session-\u0026gt;forget('lastActivityTime');\rAuth::logout();\rreturn redirect('auth/login')-\u0026gt;withErrors(['You had not activity in 15 minutes']);\r}\r$this-\u0026gt;session-\u0026gt;put('lastActivityTime',time());\rreturn $next($request);\r}\rprotected function getTimeOut()\r{\rreturn (env('TIMEOUT')) ?: $this-\u0026gt;timeout;\r}\r}\r","relPermalink":"/posts/168/","summary":"Original Post http://laravel-tricks.com/tricks/session-timeout-for-logged-in-user\nThis Middleware made it super easy to satisfy a requirement to log the user out after 15 minutes of in activity.\nI added only a few touchups.\nOne was the getTimeOut this was so I can work locally and override this by setting it to a large number. I could even use it to just bypass the whole things for a bit since on local I rather not deal with this.","tags":["laravel","php"],"title":"Logout User After Inactivity Laravel and Milddleware"},{"content":"Got Ideas from here An Ansible Tutorial\nJust wrapped up setting up two RedHat servers (version 7) and one CentOS Virtual box so I could deploy a Laravel site.\nCode is here\nThanks to Ansible it was not as bad as it could have been.\nI am not an ansible expert just getting into it as we need to do this more. What these scripts will do is\n Setup a CentOS Vagrant box Setup a Server for Laravel and Queues SupervisorD Setup up SSHD to be key based only you can remove this Setup Cron to run scheduler Setup SSL if you make the keys for this Redirect to https for site  Local VM Step one is to install Ansible on your Mac and then vim /etc/ansible/hosts\nIn there I have\n[local]\r192.168.1.22\r[serverprod]\r111.111.111.111\r[serverstage]\r111.111.111.111\rLocal is the VM\nI needed a local VM to run CentOS since I did not have RedHat but it is close enough. I downloaded the ISO installed it the old fashion way on VirtualBox then I ran my ansible scripts against it. You can see this line in the readme.md\nansible-playbook --limit local -s centos.yml -u centos -k --ask-sudo-pass --extra-vars \u0026quot;user=centos\u0026quot;\rNow that that is set I can hit it with my nginx config\nansible-playbook --limit local -s nginx.yml -u centos --extra-vars \u0026quot;user=centos version=centos\u0026quot;\rOkay now it should work?\nRedHat As I note in the readme.md I then setup the RedHat servers. They where a bit tougher but it all worked out. Note SELinux might be on that is why I have some lines to allow things but they may not be enough for your setup.\n","relPermalink":"/posts/167/","summary":"Got Ideas from here An Ansible Tutorial\nJust wrapped up setting up two RedHat servers (version 7) and one CentOS Virtual box so I could deploy a Laravel site.\nCode is here\nThanks to Ansible it was not as bad as it could have been.\nI am not an ansible expert just getting into it as we need to do this more. What these scripts will do is\n Setup a CentOS Vagrant box Setup a Server for Laravel and Queues SupervisorD Setup up SSHD to be key based only you can remove this Setup Cron to run scheduler Setup SSL if you make the keys for this Redirect to https for site  Local VM Step one is to install Ansible on your Mac and then vim /etc/ansible/hosts","tags":["laravel","devops"],"title":"CentOS or RedHat and Laravel"},{"content":"With the great Laravel Docs I will quickly show how to \u0026ldquo;encourage\u0026rdquo; the user to set a better password.\nGoing through the standard docs for Authentication we end up with a registration form.\nThen in the AuthController that comes with Laravel I modify it a bit.\n protected function validator(array $data)\r{\r$messages = ['password.regex' =\u0026gt; \u0026quot;Your password must contain 1 lower case character 1 upper case character one number\u0026quot;];\rreturn Validator::make($data, [\r'name' =\u0026gt; 'required|max:255',\r'email' =\u0026gt; 'required|email|max:255|unique:users',\r'password' =\u0026gt; 'required|confirmed|min:8|regex:/^(?=\\S*[a-z])(?=\\S*[A-Z])(?=\\S*[\\d])\\S*$/',\r], $messages);\r}\rUsing the regex rule seen in the docs http://php.net/manual/en/function.preg-match.php and the Laravel docs I can then set an expression to check for these characters, and I can also set a custom message if it fails.\nAnd with that little bit of work we get an error message to help the user make a better password.\nbtw this is coming about as I start this Web Security Course and try to consider some of these ideas in my day to day Laravel work.\n","relPermalink":"/posts/166/","summary":"With the great Laravel Docs I will quickly show how to \u0026ldquo;encourage\u0026rdquo; the user to set a better password.\nGoing through the standard docs for Authentication we end up with a registration form.\nThen in the AuthController that comes with Laravel I modify it a bit.\n protected function validator(array $data)\r{\r$messages = ['password.regex' =\u0026gt; \u0026quot;Your password must contain 1 lower case character 1 upper case character one number\u0026quot;];\rreturn Validator::make($data, [\r'name' =\u0026gt; 'required|max:255',\r'email' =\u0026gt; 'required|email|max:255|unique:users',\r'password' =\u0026gt; 'required|confirmed|min:8|regex:/^(?","tags":["laravel","php","security"],"title":"Quick Tip Forcing More Complex Passwords in Laravel"},{"content":"Here is one combination out of many to make this happen.\nThe libraries are\nhttps://github.com/flowjs/ng-flow\nand\nhttps://github.com/flowjs/flow-php-server\nModel and Imageable Resource What I like about this is we can make 1 controller to manage uploads. That controller will upload the file, place it into the correct folder, and setup the relationship to the resource.\nIn this example the Resource will be a Contact.\nSo I then follow Laravel docs to create the Polymorphic Imageable/Photo example http://laravel.com/docs/master/eloquent-relationships#polymorphic-relations\nEnding up with an image model like this\n\u0026lt;?php\rnamespace App;\ruse Illuminate\\Database\\Eloquent\\Model;\rclass Image extends Model\r{\rpublic $timestamps = false;\r/**\r* Get all of the owning imageable models.\r*/\rpublic function imageable()\r{\rreturn $this-\u0026gt;morphTo();\r}\r}\rAnd a Contact.php file like this\n\u0026lt;?php\rnamespace App;\ruse Illuminate\\Database\\Eloquent\\Model;\ruse Rhumsaa\\Uuid\\Uuid;\rclass Contact extends Model\r{\rprotected $fillable = [\r'first_name',\r'last_name',\r'active'\r];\rpublic function images()\r{\rreturn $this-\u0026gt;morphMany(\\App\\Image::class, 'imageable');\r}\r}\rNothing special really\nEven the migration is right from the docs\n\u0026lt;?php\ruse Illuminate\\Database\\Schema\\Blueprint;\ruse Illuminate\\Database\\Migrations\\Migration;\rclass CreateTableImageable extends Migration\r{\rpublic function up()\r{\rSchema::create('images', function (Blueprint $table) {\r$table-\u0026gt;increments('id');\r$table-\u0026gt;string('path');\r$table-\u0026gt;integer('imageable_id');\r$table-\u0026gt;string('imageable_type');\r});\r}\rpublic function down()\r{\rSchema::drop('images');\r}\r}\rController Now for the Controller.\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse App\\Image;\ruse Flow\\Config;\ruse Illuminate\\Support\\Facades\\Input;\ruse Illuminate\\Http\\Request;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Facades\\Response;\rclass ImageController extends Controller\r{\rpublic $model_id;\rpublic $model_class_path;\rpublic $destination_path;\rpublic $filename;\rpublic $config;\rpublic function uploadFile(Request $request, $model_id = false)\r{\rtry\r{\r$this-\u0026gt;model_id = $model_id;\r$model_class_path = $this-\u0026gt;getClassName($request);\r$path = $this-\u0026gt;getImagePublicDestinationPath($request);\r$this-\u0026gt;model_class_path = $model_class_path;\r$this-\u0026gt;destination_path = $path;\r$this-\u0026gt;config = new Config(array(\r'tempDir' =\u0026gt; storage_path('chunks_temp_folder')\r));\r$this-\u0026gt;filename = Input::get('flowFilename');\r$this-\u0026gt;saveImagable();\r$flowRequest = new \\Flow\\Request();\rif(\\Flow\\Basic::save(\rpublic_path($this-\u0026gt;getDestinationPath()). '/' . $this-\u0026gt;filename,\r$this-\u0026gt;config,\r$flowRequest)) {\rreturn Response::json(['data' =\u0026gt; $model_id, 'message' =\u0026gt; \u0026quot;File Uploaded $this-\u0026gt;filename\u0026quot;], 200);\r} else {\rreturn Response::json([], 204);\r}\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(sprintf(\u0026quot;Error saving image %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\rpublic function saveImagable()\r{\r$imageable = new Image();\r$imageable-\u0026gt;path = $this-\u0026gt;destination_path . '/' . $this-\u0026gt;filename;\r$imageable-\u0026gt;imageable_id = $this-\u0026gt;model_id;\r$imageable-\u0026gt;imageable_type = $this-\u0026gt;model_class_path;\r$imageable-\u0026gt;save();\r}\rpublic function getDestinationPath()\r{\rreturn $this-\u0026gt;destination_path;\r}\rpublic function setDestinationPath($destination_path)\r{\r$this-\u0026gt;destination_path = $destination_path;\r}\rprivate function getClassName($request)\r{\rreturn ($request-\u0026gt;input('model_class_path')) ? $request-\u0026gt;input('model_class_path') : 'App\\Contact';\r}\rpublic function getImagePublicDestinationPath(Request $request)\r{\rreturn ($request-\u0026gt;input('path')) ? $request-\u0026gt;input('path') : 'images/contacts';\r}\r}\rNothing special there just per the docs of the Flow php library https://github.com/flowjs/flow-php-server\nAnd the route.php file\nRoute::get('images/upload/{model_id}', 'ImageController@uploadFile');\rRoute::post('images/upload/{model_id}', 'ImageController@uploadFile');\rBy the time this project is done though all of this is behind auth middleware. While being built it is behind htaccess.\nOne catch overall is the resource needs to exist before you can upload a file related to it so on Contact New type pages you may need to wait till the contact is created before you do the upload. There are ways around this but for now we are keeping it simple.\nAngular This is a simple example.\nThe route I made a simple example path\nRoute::get('/upload_example', function () {\rreturn view('upload');\r});\rThat view extends the example layout view\ndefault.blade.php \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;style\u0026gt;\r/* This helps the ng-show/ng-hide animations start at the right place. */\r/* Since Angular has this but needs to load, this gives us the class early. */\r.ng-hide { display: none!important; }\r\u0026lt;/style\u0026gt;\r\u0026lt;title ng-bind=\u0026quot;title\u0026quot;\u0026gt;Ratsoc v2.0\u0026lt;/title\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot; /\u0026gt;\r\u0026lt;meta http-equiv=\u0026quot;X-UA-Compatible\u0026quot; content=\u0026quot;IE=edge, chrome=1\u0026quot; /\u0026gt;\r\u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\u0026quot; /\u0026gt;\r\u0026lt;base href=\u0026quot;/\u0026quot;\u0026gt;\r\u0026lt;!-- Latest compiled and minified CSS --\u0026gt;\r\u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\u0026quot;\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body flow-prevent-drop\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;div ng-include=\u0026quot;'layout/shell.html'\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;div id=\u0026quot;splash-page\u0026quot; ng-show=\u0026quot;showSplash\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;page-splash\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;page-splash-message\u0026quot;\u0026gt;\rRatsoc v2.0\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;progress progress-striped active page-progress-bar\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;bar\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r@yield('content')\r\u0026lt;script src=\u0026quot;/temp/jquery.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026quot;/temp/angular.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026quot;/temp/flow.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026quot;/temp/ng-flow.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026quot;/temp/app.upload.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rOf course this would be setup better with Gulp but for now keeping it simple. The the view that is the content.\nupload.blade.php @extends('layouts.default')\r@section('content')\r\u0026lt;div ng-app=\u0026quot;app.upload\u0026quot; flow-init flow-prevent-drop\u0026gt;\r\u0026lt;div ng-controller=\u0026quot;MainController as vm\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;col-lg-8 col-lg-offset-2\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;\u0026quot;\rflow-init=\u0026quot;{\rtarget: '/images/upload/' + vm.contact.id, singleFile: true, testChunks: true,\rquery: { '_token': vm.token, 'model_class_path': 'App\\\\Contact', 'path': 'images/contacts'}\r}\u0026quot;\rflow-files-submitted=\u0026quot;vm.upload( $files, $event, $flow )\u0026quot;\rflow-file-success=\u0026quot;vm.setFileName($flow.files)\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;alert alert-danger\u0026quot;\rflow-drop flow-drag-enter=\u0026quot;style={opacity: .5}\u0026quot;\rflow-drag-leave=\u0026quot;style={}\u0026quot; ng-style=\u0026quot;style\u0026quot;\rflow-drop-enabled=true\u0026gt;\r\u0026lt;strong\u0026gt;\u0026lt;i class=\u0026quot;fa fa-arrow-right\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;¬†Upload image here by dragging here\u0026lt;/strong\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;a class=\u0026quot;btn btn-xs btn-default\u0026quot; ng-click=\u0026quot;vm.removeFile($flow)\u0026quot;\rng-if=\u0026quot;($flow.files.length \u0026gt; 0)\u0026quot; name=\u0026quot;remove-file\u0026quot;\u0026gt; Remove File \u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;img ng-src=\u0026quot;@{{ vm.image }}\u0026quot; ng-show=\u0026quot;vm.image\u0026quot;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r@endsection\rNot much of a looker here. This makes it super easy to work on things though before plugging it into your more complex applications.\nHere I am adding a payload so when I use this on a page I can decide then is it at Contact, a Project, a Product etc. and setup the path eg \u0026lsquo;images/projects\u0026rsquo; or Model name \u0026lsquo;App\\Contact\u0026rsquo; as needed.\nThen for the app.js file to do all this, again you might break it up into more files just keeping this simple.\n(function () {\r'use strict';\rangular.module('app.upload', [\r'flow'\r]);\rfunction FlowConfig(flowFactoryProvider)\r{\rflowFactoryProvider.defaults = {\rspeedSmoothingFactor: 0.2,\rmaxChunkRetries: 10,\rsimultaneousUploads: 10\r};\r}\rfunction MainController($http, $scope)\r{\rvar vm = this;\rvm.contact = {};\rvm.contact.id = 'new';\rvm.token = false;\rvm.upload = upload;\rvm.setFileName = setFileName;\rvm.image_root = '/images/contacts/';\ractivate();\r////\rfunction activate()\r{\rgetToken();\r}\rfunction setFileName(flow_files)\r{\rvm.image = vm.image_root + flow_files[0].name;\r}\rfunction upload(files, event, flow)\r{\rangular.forEach(files, function(v,i) {\rfiles[i].flowObj.opts.query._token = vm.token;\r});\rflow.upload();\r}\rfunction getToken()\r{\r$http.get('/auth/token').then(\rsuccessGettingToken,\rerrorGettingToken\r);\r}\rfunction successGettingToken(response)\r{\rvm.token = response.data;\r}\rfunction errorGettingToken(response)\r{\rconsole.log(\u0026quot;Error\u0026quot;);\rconsole.log(response);\r}\r}\rangular.module('app.upload')\r.controller(\u0026quot;MainController\u0026quot;, MainController)\r.config(FlowConfig);\r})();\rSo we use the flow upload event to run our upload method. This then adds the token to the POST request for the CSRF middleware.\nKeep in mind my Angular is just a widget in blade. There is no separate session situation that you may have in SPA (Single Page Applications)\nThats it, drag file, file uploads and you have Flow, Angular and Laravel.\n","relPermalink":"/posts/165/","summary":"Here is one combination out of many to make this happen.\nThe libraries are\nhttps://github.com/flowjs/ng-flow\nand\nhttps://github.com/flowjs/flow-php-server\nModel and Imageable Resource What I like about this is we can make 1 controller to manage uploads. That controller will upload the file, place it into the correct folder, and setup the relationship to the resource.\nIn this example the Resource will be a Contact.\nSo I then follow Laravel docs to create the Polymorphic Imageable/Photo example http://laravel.","tags":["laravel","php","angular"],"title":"Image Uploads, Laravel, Angular and Flow.js"},{"content":"Just a quick example\nBefore\n public function updateMarketoFolder($folder)\r{\r/**\r* If parent id found in array then use it else use root\r*/\rif(isset($this-\u0026gt;folders_and_meta_data[$folder['id']]))\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data[$folder['id']];\r}\relseif(isset($folder['parent']) \u0026amp;\u0026amp; isset($folder['parent']['id']) \u0026amp;\u0026amp; isset($this-\u0026gt;folders_and_meta_data[$folder['parent']['id']]))\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data[$folder['parent']['id']];\r}\relse\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data['root'];\r}\rif(isset($folder['name']))\r$this-\u0026gt;names[] = $folder['name'] . '--' . $folder_meta_data-\u0026gt;id;\r$this-\u0026gt;folders_and_meta_data[$folder['id']] = $folder_meta_data;\r}\rHere is what we can do to make it easier to come back to six months later.\n public function updateMarketoFolder($folder)\r{\rif($this-\u0026gt;hasOwnFolder($folder))\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data[$folder['id']];\r}\relseif($this-\u0026gt;hasAParentAndParentHasFolder($folder))\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data[$folder['parent']['id']];\r}\relse\r{\r$folder_meta_data = $this-\u0026gt;getRootFolder();\r}\rif($this-\u0026gt;checkItHasAName($folder))\r$this-\u0026gt;names[] = $folder['name'] . '--' . $folder_meta_data-\u0026gt;id;\r$this-\u0026gt;folders_and_meta_data[$folder['id']] = $folder_meta_data;\r}\rprivate function hasOwnFolder($folder)\r{\rreturn isset($this-\u0026gt;folders_and_meta_data[$folder['id']]);\r}\rprivate function hasAParentAndParentHasFolder($folder)\r{\rreturn isset($folder['parent']) \u0026amp;\u0026amp; isset($folder['parent']['id']) \u0026amp;\u0026amp; isset($this-\u0026gt;folders_and_meta_data[$folder['parent']['id']]);\r}\rprivate function getRootFolder()\r{\rreturn $this-\u0026gt;folders_and_meta_data['root'];\r}\rprivate function checkItHasAName($folder)\r{\rreturn isset($folder['name']);\r}\rJust a lot easier to come back to an remember why and what I am doing in the if statements. Also just to read a bit more easily what the needs are here of the data.\n","relPermalink":"/posts/164/","summary":"Just a quick example\nBefore\n public function updateMarketoFolder($folder)\r{\r/**\r* If parent id found in array then use it else use root\r*/\rif(isset($this-\u0026gt;folders_and_meta_data[$folder['id']]))\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data[$folder['id']];\r}\relseif(isset($folder['parent']) \u0026amp;\u0026amp; isset($folder['parent']['id']) \u0026amp;\u0026amp; isset($this-\u0026gt;folders_and_meta_data[$folder['parent']['id']]))\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data[$folder['parent']['id']];\r}\relse\r{\r$folder_meta_data = $this-\u0026gt;folders_and_meta_data['root'];\r}\rif(isset($folder['name']))\r$this-\u0026gt;names[] = $folder['name'] . '--' . $folder_meta_data-\u0026gt;id;\r$this-\u0026gt;folders_and_meta_data[$folder['id']] = $folder_meta_data;\r}\rHere is what we can do to make it easier to come back to six months later.","tags":["php","clean code"],"title":"Simple Example of Making Code Easier to Read"},{"content":"During the install https://github.com/laravel/spark I kept getting this error\n Problem 1\r- Installation request for laravel/spark-installer ~1.0 -\u0026gt; satisfiable by laravel/spark-installer[v1.0.0].\r- Conclusion: remove illuminate/support v4.2.17\r- laravel/spark-installer v1.0.0 requires illuminate/support ~5.0 -\u0026gt; satisfiable by illuminate/support[v5.0.0, v5.0.22, v5.0.25, v5.0.26, v5.0.28, v5.0.33, v5.0.4, v5.1.1, v5.1.13, v5.1.16, v5.1.2, v5.1.6, v5.1.8].\r- Can only install one of: illuminate/support[v5.0.0, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.22, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.25, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.26, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.28, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.33, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.4, v4.2.17].\r- Can only install one of: illuminate/support[v5.1.1, v4.2.17].\r- Can only install one of: illuminate/support[v5.1.13, v4.2.17].\r- Can only install one of: illuminate/support[v5.1.16, v4.2.17].\r- Can only install one of: illuminate/support[v5.1.2, v4.2.17].\r- Can only install one of: illuminate/support[v5.1.6, v4.2.17].\r- Can only install one of: illuminate/support[v5.1.8, v4.2.17].\r- Installation request for illuminate/support == 4.2.17.0 -\u0026gt; satisfiable by illuminate/support[v4.2.17].\rFinally I went into my ~/.composer folder. Removed composer.lock then I edited the composer.json to look like this\n{\r\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/envoy\u0026quot;: \u0026quot;~1.0\u0026quot;,\r\u0026quot;laravel/installer\u0026quot;: \u0026quot;~1.1\u0026quot;,\r\u0026quot;laravel/spark-installer\u0026quot;: \u0026quot;~1.0\u0026quot;\r}\r}\rI use Envoy for a lot of my projects so I left that there and made sure to update my installer.\nThen I ran, in that folder composer update.\nFinally I made sure to add the path to my ~/.bash_profile as\nexport PATH=$PATH:/Users/alfrednutile/.composer/vendor/bin/\rThen ran source ~/.bash_profile\nWith all that in place I could go to my new Laravel install to run spark install\n","relPermalink":"/posts/163/","summary":"During the install https://github.com/laravel/spark I kept getting this error\n Problem 1\r- Installation request for laravel/spark-installer ~1.0 -\u0026gt; satisfiable by laravel/spark-installer[v1.0.0].\r- Conclusion: remove illuminate/support v4.2.17\r- laravel/spark-installer v1.0.0 requires illuminate/support ~5.0 -\u0026gt; satisfiable by illuminate/support[v5.0.0, v5.0.22, v5.0.25, v5.0.26, v5.0.28, v5.0.33, v5.0.4, v5.1.1, v5.1.13, v5.1.16, v5.1.2, v5.1.6, v5.1.8].\r- Can only install one of: illuminate/support[v5.0.0, v4.2.17].\r- Can only install one of: illuminate/support[v5.0.22, v4.2.17].\r- Can only install one of: illuminate/support[v5.","tags":["spark","laravel","php"],"title":"Spark Setup Issue"},{"content":"The library is https://github.com/enygma/expose\n \u0026ldquo;Expose is an Intrusion Detection System for PHP loosely based on the PHPIDS project (and using it\u0026rsquo;s ruleset for detecting potential threats).\u0026rdquo;\n After seeing it in the latest PHPArch magazine on security I wanted to give it a try.\nOf course this is far from a complete look.\nStep 1 Make the MiddleWare\nphp artisan make:middleware ExposeMiddleware\nThen add Expose as noted in the docs.\n\u0026lt;?php\rnamespace App\\Http\\Middleware;\ruse Closure;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\Log;\rclass ExposeMiddleware\r{\rpublic function handle($request, Closure $next)\r{\r$filters = new \\Expose\\FilterCollection();\r$filters-\u0026gt;load();\r$logger = App::make('log');\r$manager = new \\Expose\\Manager($filters, $logger);\r$manager-\u0026gt;run($request-\u0026gt;input());\rLog::info(sprintf(\u0026quot;Logging results from Expose %d\u0026quot;, $manager-\u0026gt;getImpact()));\rreturn $next($request);\r}\r}\rThen in app/Http/Kernel.php\n protected $middleware = [\r\\Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::class,\r\\App\\Http\\Middleware\\EncryptCookies::class,\r\\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\r\\Illuminate\\Session\\Middleware\\StartSession::class,\r\\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\r\\App\\Http\\Middleware\\ExposeMiddleware::class,\r\\App\\Http\\Middleware\\VerifyCsrfToken::class,\r];\rNow to make the route for testing\n\u0026lt;?php\rRoute::get('/', function () {\rreturn view('welcome');\r});\rRoute::post('/post', function() {\rreturn \u0026quot;Yo\u0026quot;;\r});\rAnd now a phpunit test to hit the route\n public function testPost()\r{\r$token = csrf_token();\r$data = array(\r'_token' =\u0026gt; $token,\r'test' =\u0026gt; 'foo',\r'bar' =\u0026gt; array(\r'baz' =\u0026gt; 'quux',\r'testing' =\u0026gt; '\u0026lt;script\u0026gt;test\u0026lt;/script\u0026gt;'\r)\r);\r$this-\u0026gt;call('POST', '/post', $data);\r}\rOne more thing is to set the app/Http/Middleware/VerifyCsrfToken.php as such\n\rpublic function handle($request, Closure $next)\r{\rif ( 'testing' === App::environment() \u0026amp;\u0026amp; $request-\u0026gt;exists('_token') ) {\r$input = $request-\u0026gt;all();\r$input['_token'] = $request-\u0026gt;session()-\u0026gt;token();\r$request-\u0026gt;replace( $input );\r}\rif ($this-\u0026gt;isReading($request) || $this-\u0026gt;shouldPassThrough($request) || $this-\u0026gt;tokensMatch($request)) {\rreturn $this-\u0026gt;addCookieToResponse($request, $next($request));\r}\rthrow new TokenMismatchException;\r} Okay so now we can tail the log file in the terminal and hit the route with phpunit\nAnd the logs should output\n[2015-09-02 23:50:44] testing.INFO: Match found on Filter ID 38 [{\u0026quot;id\u0026quot;:\u0026quot;38\u0026quot;,\u0026quot;rule\u0026quot;:\u0026quot;(?:\\\\\u0026lt;[\\\\/]?(?:[i]?frame|applet|isindex|marquee|keygen|script|audio|video|input|button|textarea|style|base|body|meta|link|object|embed|param|plaintext|xm\\\\w+|image|im(?:g|port)))\u0026quot;,\u0026quot;description\u0026quot;:\u0026quot;Detects possibly malicious html elements including some attributes\u0026quot;,\u0026quot;tags\u0026quot;:\u0026quot;xss, csrf, id, rfe, lfi\u0026quot;,\u0026quot;impact\u0026quot;:\u0026quot;4\u0026quot;}]\r[2015-09-02 23:50:44] testing.INFO: Logging results from Expose 8\rAt this point the MiddleWare can do numerous things\n Log to an in memory db IP addresses that violates a rule of a certain level and block them. Keep track of issues and notify the team of issues Cut through a can without getting dull  Anyways I have a ways to go with this but just seeing the different tools I could use to make my applications more secure.\n","relPermalink":"/posts/162/","summary":"The library is https://github.com/enygma/expose\n \u0026ldquo;Expose is an Intrusion Detection System for PHP loosely based on the PHPIDS project (and using it\u0026rsquo;s ruleset for detecting potential threats).\u0026rdquo;\n After seeing it in the latest PHPArch magazine on security I wanted to give it a try.\nOf course this is far from a complete look.\nStep 1 Make the MiddleWare\nphp artisan make:middleware ExposeMiddleware\nThen add Expose as noted in the docs.","tags":["security","laravel","php"],"title":"Adding Expose IDS to Laravel MiddleWare"},{"content":"Since I know this will happen again I want to remind myself and others how to fix it.\nI had this error A VirtualBox machine with the name 'homestead' already exists. when doing my normal vagrant up. I got some help at http://stackoverflow.com/questions/26993903/a-virtualbox-machine-with-the-name-homestead-already-exists but it was not made too clear.\nHere are the exact steps for me to fix this\nRun vboxmanage list vms\nThis will output a list\n\u0026quot;homestead\u0026quot; {5dc30604-8ebe-4060-8966-4881958e6bf5}\r\u0026quot;boot2docker-vm\u0026quot; {38af33d4-7ebc-4498-a80e-39711a08b413}\r\u0026quot;settler_default_1434987271004_24349_1440846292799_16470\u0026quot; {2c80bf94-99b8-4b51-95a0-034dddae8c33}\rThen I took the id of homestead 5dc30604-8ebe-4060-8966-4881958e6bf5 and did\necho '5dc30604-8ebe-4060-8966-4881958e6bf5' \u0026gt; ~/Homestead/.vagrant/machines/default/virtualbox/id\rUPDATE\nRough day. Like I said this rarely happens but in this case I also had the default: Warning: Authentication failure. Retrying... error so I did this\ncd /tmp\rwget https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub\rcat vagrant.pub \u0026gt;\u0026gt; ~/.ssh/authorized_keys\r","relPermalink":"/posts/161/","summary":"Since I know this will happen again I want to remind myself and others how to fix it.\nI had this error A VirtualBox machine with the name 'homestead' already exists. when doing my normal vagrant up. I got some help at http://stackoverflow.com/questions/26993903/a-virtualbox-machine-with-the-name-homestead-already-exists but it was not made too clear.\nHere are the exact steps for me to fix this\nRun vboxmanage list vms\nThis will output a list\n\u0026quot;homestead\u0026quot; {5dc30604-8ebe-4060-8966-4881958e6bf5}\r\u0026quot;boot2docker-vm\u0026quot; {38af33d4-7ebc-4498-a80e-39711a08b413}\r\u0026quot;settler_default_1434987271004_24349_1440846292799_16470\u0026quot; {2c80bf94-99b8-4b51-95a0-034dddae8c33}\rThen I took the id of homestead 5dc30604-8ebe-4060-8966-4881958e6bf5 and did","tags":["laravel","note"],"title":"Note To Self: A VirtualBox machine with the name 'homestead' already exists."},{"content":"Not all apps need to be an SPA (Single Page Application). Sure they have their place but in most cases the task might benefit from just a Blade template and Angular widget. This saves you from having to write an angular route which can be a tedious duplication of work. Also Blade is fast and fun to work with.\nStep One Add Data to Global Window Using the Transform PHP Vars to JavaScript you can easily start to inject some content into your templates, if needed, to setup the data your Angular widget can use to build out it\u0026rsquo;s elements.\nFor example the Controller below will push some info into the view that I can use later\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse App\\Campaign;\ruse App\\Folder;\ruse App\\Helpers\\ReturnWebhook;\ruse App\\Http\\Requests;\ruse App\\Providers\\WebhookExtendedProvider;\ruse App\\Utilities\\GenerateSampleContent;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\Event;\ruse Illuminate\\Support\\Facades\\Response;\ruse Michelf\\MarkdownExtra;\ruse Rhumsaa\\Uuid\\Uuid;\rclass HelpController extends Controller\r{\ruse GenerateSampleContent;\ruse ReturnWebhook;\rpublic function api()\r{\r$url = url();\r$apis['campaigns'] = 'api/v1/campaigns';\r$apis['campaigns_get'] = 'api/v1/campaigns/';\r$campaigns = Campaign::select('id', 'name')-\u0026gt;groupBy('name')-\u0026gt;orderBy('name')-\u0026gt;get();\r$folders = Folder::with('meta_values')-\u0026gt;groupBy('folders.id')-\u0026gt;get();\r/**\r* Using the Javacript Library\r*/\r\\JavaScript::put([\r'campaigns' =\u0026gt; $campaigns,\r'token' =\u0026gt; csrf_token(),\r'folders' =\u0026gt; $folders,\r'url' =\u0026gt; $url,\r'apis' =\u0026gt; $apis\r]);\r$text = file_get_contents(base_path('docs/webhooks.md'));\r$webhooks = MarkdownExtra::defaultTransform($text);\r$api = file_get_contents(base_path('docs/api.md'));\r$api = MarkdownExtra::defaultTransform($api);\rreturn view('help.api', compact('webhooks', 'api', 'campaigns', 'url', 'apis', 'folders'));\r}\rSetting Up the View and Angular Now in the view for the Controller above we use that info. Note the Angular brackets @{{\nSee template here\nSo now that view is rendering both Blade data {{ and Angular.\nYou will see too I setup the Angular controller vm.addMarketoFolderNameToQuery keep in mind I already setup that ng-app in my main template file layouts.default\nSee Default Layout Here\nAngular Controller Here is the ApiController injected above. Notice we use Angular\u0026rsquo;s $window to get the data we passed in from the Laravel Controller. You can also see it making API requests later on as the user clicks buttons etc.\n(function(){\r'use strict';\rfunction ApiControllerUserShow($http, $window, toaster)\r{\rvar vm = this;\rvm.getting_token = '';\rvm.user = $window.user;\rvm.url = $window.url;\rvm.message = \u0026quot;You do not have an API Key yet. Click the button below to make one\u0026quot;;\rvm.getNewApi = getNewApi;\ractivate();\r///\rfunction activate()\r{\rconsole.log($window.user);\rsetApiToken();\r}\rfunction getNewApi()\r{\rvm.getting_token = 'fa-spin';\rtoaster.pop('info', \u0026quot;Getting new token\u0026quot;);\r$http.get('/api/v1/create_client_token')\r.success(function(response) {\rtoaster.pop('info', \u0026quot;Loading new token\u0026quot;);\rconsole.log(response);\rvm.getting_token = ''\rvm.api_token = response.data;\r})\r.error(function(response) {\rtoaster.pop('error', \u0026quot;Could not get token please contact support\u0026quot;);\rconsole.log(response);\r});\r}\rfunction setApiToken()\r{\r//$user-\u0026gt;oauth_client-\u0026gt;oauth_session-\u0026gt;oauth_access_tokens-\u0026gt;id\rif(!vm.user.oauth_client)\r{\rvm.api_token = vm.message;\r}\relse if(!vm.user.oauth_client.oauth_session)\r{\rvm.api_token = vm.message;\r}\relse if(!vm.user.oauth_client.oauth_session.oauth_access_tokens)\r{\rvm.api_token = vm.message;\r}\relse\r{\rvm.api_token = vm.user.oauth_client.oauth_session.oauth_access_tokens.id;\r}\r}\r}\rangular.module('app')\r.controller('ApiControllerUserShow', ApiControllerUserShow);\r})();\rThat is it. Keep in mind that Blade template can have numerous angular \u0026ldquo;widgets\u0026rdquo; so different sections of the page can benefit from Angular. Or the one page can have several places that the Angular controller controls some of the output.\nSo hopefully this sums up a quick way to start putting Angular widgets into your Laravel application and still benefit from all speed that these too tools offer both in developing and in rendering!\n","relPermalink":"/posts/160/","summary":"Not all apps need to be an SPA (Single Page Application). Sure they have their place but in most cases the task might benefit from just a Blade template and Angular widget. This saves you from having to write an angular route which can be a tedious duplication of work. Also Blade is fast and fun to work with.\nStep One Add Data to Global Window Using the Transform PHP Vars to JavaScript you can easily start to inject some content into your templates, if needed, to setup the data your Angular widget can use to build out it\u0026rsquo;s elements.","tags":["laravel","php","angular"],"title":"Laravel and Angular Widgets e.g. Non SPA (Single Page Application) Pattern "},{"content":"Laravel 5.1 and Oauth2 Server Video coming soon\u0026hellip;\nExample repo is here https://github.com/alnutile/oauth_how_to\nThe library we will use is\nhttps://github.com/lucadegasperi/oauth2-server-laravel\nThis will setup a server both client_type and password_type for Grant Types.\nComing to Terms with Oauth Coming to terms with this stuff is long and tedious. The docs are here https://github.com/lucadegasperi/oauth2-server-laravel/ wiki will help and then these lead to the League docs as well http://oauth2.thephpleague.com/\nThere is also a podcast interview with the Alex Bilbie who made the League Oauth Library http://fullstackradio.com/episodes/4/\nWhat I will cover is mainly the instalation going beyond the docs above into the details of getting this thing going. I will also provide a \u0026ldquo;play\u0026rdquo; repo for you to review.\nBase Laravel Install If you want to use this demo to play around just run composer install and see the migration info below.\nInstall laravel as normal, install the library as normal. You will see some extra stuff I have in the repo for helping out as well (this will be seen in the video too)\napp/OauthTools\nSome commands to use artisan to make users, tokens etc.\nSo in the end my app/Console/Kernel.php looked like https://github.com/alnutile/oauth_how_to/blob/master/app/Console/Kernel.php\nSo I could easily do\nphp artisan oauth-tools:adduser admin@foo.com\ror\nphp artisan oauth-tools:generate-token 33591b34-03c2-4ece-a763-d531aee0298a admin@foo.com client\rAlso note composer.json I use a uuid library to help with these commands etc.\nFinally to have all of this work out of the box with the Postman file I shared run it this way for now\ncd public\rphp -S localhost:8181\rThe database for this example is sqlite so\ntouch storage/database.sqlite\rphp artisan migrate:refresh --seed\rAnd you should now have a db and migrations\nSince it is sqlite just rm the file and touch it again to re-migrate and save your self the headache of DBAL driver etc since this just just a quick working demo.\nSetup your oauth config config/oauth2.php file as seen here BUT only if you want these. And my access_token_ttl is way too big so see the defaults in the docs. Also note it points to OauthPasswordVerifier which the docs talk about as well.\nRoute As noted you add the code to your route\nRoute::post('oauth/access_token', function() {\rreturn Response::json(Authorizer::issueAccessToken());\r});\rRoute::get('test', ['middleware' =\u0026gt; 'oauth', function() {\rreturn Response::json(\u0026quot;Welcome\u0026quot;);\r}]);\rLater on you will see this instead\nRoute::post('oauth/access_token', function() {\rreturn Response::json(Authorizer::issueAccessToken());\r});\rRoute::get('test', ['middleware' =\u0026gt; 'oauthOrAuth', function() {\rreturn Response::json(\u0026quot;Welcome\u0026quot;);\r}]);\rWith the oauthOrAuth I will explain that in the video as well. But basically and api endpoint can be used by a local session based user and a remote application using oauth. It is just how our APIs go.\nSo this lets that work just fine.\nPostman Just to show it all working you will see in the video me using postman. You will see that in the repo here\nNow What Between the links above and Postman you have a working\n","relPermalink":"/posts/159/","summary":"Laravel 5.1 and Oauth2 Server Video coming soon\u0026hellip;\nExample repo is here https://github.com/alnutile/oauth_how_to\nThe library we will use is\nhttps://github.com/lucadegasperi/oauth2-server-laravel\nThis will setup a server both client_type and password_type for Grant Types.\nComing to Terms with Oauth Coming to terms with this stuff is long and tedious. The docs are here https://github.com/lucadegasperi/oauth2-server-laravel/ wiki will help and then these lead to the League docs as well http://oauth2.thephpleague.com/\nThere is also a podcast interview with the Alex Bilbie who made the League Oauth Library http://fullstackradio.","tags":["oauth","laravel"],"title":"Laravel 5.1 and Oauth"},{"content":"Just a team related style guide item.\nWhen talking to properties in a class talk via a getter.\n\u0026lt;?php\rclass Foo {\rprotected $client;\rfunction bar()\r{\rreturn $this-\u0026gt;client-\u0026gt;getAll();\r}\r}\rWould then become\n\u0026lt;?php\rclass Foo {\rprotected $client;\rfunction bar()\r{\rreturn $this-\u0026gt;getClient-\u0026gt;getAll();\r}\rfunction getClient()\r{\rreturn $this-\u0026gt;client;\r}\r}\rThere are a few reasons for this\n Consistent style for the team Changes to that property can be done in one place. So if we have to for example alter it before it is used then we can do it here. PHPUnit Mockery can mock both but mocking a Method over a Property is another style I prefer. Easier to have your IDE see all the places that is being used. Instantiate on use  Instantiate on Use When writing a package/libraries that does not have dependency injection and I do not want to make the __constructor too busy I will do this instead.\n\u0026lt;?php\rclass Foo {\rprotected $client;\rfunction bar()\r{\rreturn $this-\u0026gt;getClient-\u0026gt;getAll();\r}\rfunction getClient()\r{\rif($this-\u0026gt;client == null)\r$this-\u0026gt;setClient();\rreturn $this-\u0026gt;client;\r}\rfunction setClient($client = null)\r{\rif($client == null)\r$client = new Client();\r$this-\u0026gt;client = $client;\rreturn $this;\r}\r}\rThis makes it simple to mock during testing and simple to instantiate as needed.\n","relPermalink":"/posts/158/","summary":"Just a team related style guide item.\nWhen talking to properties in a class talk via a getter.\n\u0026lt;?php\rclass Foo {\rprotected $client;\rfunction bar()\r{\rreturn $this-\u0026gt;client-\u0026gt;getAll();\r}\r}\rWould then become\n\u0026lt;?php\rclass Foo {\rprotected $client;\rfunction bar()\r{\rreturn $this-\u0026gt;getClient-\u0026gt;getAll();\r}\rfunction getClient()\r{\rreturn $this-\u0026gt;client;\r}\r}\rThere are a few reasons for this\n Consistent style for the team Changes to that property can be done in one place.","tags":["team","laravel","php"],"title":"Talking to the Methods Not the Properties"},{"content":"The applications I work on have markdown docs. These can be in the docs/ folder for example as docs/webhooks.md\nBut some of these docs have value to the user of the UI not just the developer, and when we include these docs inside the application repo it is a TON easier to just update them as you fix and make new features in the codebase.\nYou can have the best of both worlds with a simple to use library https://github.com/michelf/php-markdown\nThe Controller This then allows me, in my controllers to get some content from these docs, for example\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse App\\Http\\Requests;\ruse Michelf\\MarkdownExtra;\rclass HelpController extends Controller\r{\rpublic function api()\r{\r$text = file_get_contents(base_path('docs/webhooks.md'));\r$webhooks = MarkdownExtra::defaultTransform($text);\rreturn view('help.api', compact('webhooks'));\r}\r}\rThe Blade Template File Then in the blade template all I need to do to show those docs are\n@extends('layouts.default')\r@section('content')\r\u0026lt;div class=\u0026quot;page-header\u0026quot;\u0026gt;\r\u0026lt;h1\u0026gt;API Help\u0026lt;/h1\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;row\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;col-lg-12\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;wrapper wrapper-content animated fadeInRight\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;ibox-content\u0026quot;\u0026gt;\r{!! $webhooks !!}\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r@endsection\rBeing a private repo we review the code so using \u0026ldquo;{!!\u0026rdquo; is not so bad. But keep in mind you are trusting what is in these files! Of course a simple\n$webhooks = strip_tags($webhooks, \u0026quot;tags you allow here\u0026quot;);\rWill help out there.\nThe Markdown Then just write your file as normal in markdown!\n","relPermalink":"/posts/157/","summary":"The applications I work on have markdown docs. These can be in the docs/ folder for example as docs/webhooks.md\nBut some of these docs have value to the user of the UI not just the developer, and when we include these docs inside the application repo it is a TON easier to just update them as you fix and make new features in the codebase.\nYou can have the best of both worlds with a simple to use library https://github.","tags":["laravel","php","docs"],"title":"Using your project docs inside the application"},{"content":"As a developer putting all the business requirements into action and then showing that it is working as expected can be hard. 10 different google docs, 3 different views of what are the goals etc.\nAnd as a Product Owner you are not sure if the work is done without always clicking around. And more importantly you do not even know if the developer really gets what you want.\nThis is where Behat / Gherkin (cause that name really gets Product Owners feeling comfortable) can help out. BUT the key is to remove ALL language barriers.\nGathering the Business Requirements into a Gherkin File Just open up a text editor, or google doc or even email, talk to the product owner, even share your screen, and write it with them.\nFeature: Reporting Goals for Product Foo\rSo I can decide what to order for next week\rAs a the business manager\rShould allow me to see products, sort and filter\rScenario: Visit Reporting Page\rI should be able to go to the report page\rSee all the products but only 100 per page to keep it easy to see\rNo products should be here that are not \u0026quot;active\u0026quot;\rFilter by types of products using many filters at once\rPaginate on those filter results\rExport to a spreadsheet those results\r@done\rScenario: Visit Reporting Page and do not have permission to be here\rAs a non admin person who goes to the reports page I should not be allowed to go here\rSo at this point there are 3 things they need to know and at that the rest is freeform.\nFeature This is a one line look at the goal of this area, requirement.\nThe Three Lines After the Feature Benefit, Role or User or Feature, The Feature itself\nScenario Start your small bite size goals here. Maybe there is just one? Maybe there are also negatives to consider like Scenario: Someone how does not have permission goes here\nTagging Also maybe agree on some simple tags\n@done = um done\n@wip = work in progress\n@needs_review\nEtc.\nNow What At this point the Owners and Developers hopefully have what they need to start writing. Behat so easily let\u0026rsquo;s us make custom steps that we can turn any of this into steps and even better code.\nAnd as an Owner you can go simply to github and add these tests if you feel comfortable (yes some even are okay with this) and write it as the business needs it not as \u0026ldquo;gherkin\u0026rdquo; needs it.\n","relPermalink":"/posts/156/","summary":"As a developer putting all the business requirements into action and then showing that it is working as expected can be hard. 10 different google docs, 3 different views of what are the goals etc.\nAnd as a Product Owner you are not sure if the work is done without always clicking around. And more importantly you do not even know if the developer really gets what you want.\nThis is where Behat / Gherkin (cause that name really gets Product Owners feeling comfortable) can help out.","tags":["bdd","behat"],"title":"Behat for Product Owners"},{"content":"This thread helped a lot http://laravel.io/forum/03-04-2014-hasmanythrough-with-many-to-many\nIn the end I had this query\n class MetaData extends Model {\rpublic function meta_values()\r{\rreturn $this-\u0026gt;belongsToMany(\\App\\MetaValue::class);\r}\rpublic function meta_data_types()\r{\rreturn $this-\u0026gt;belongsToMany(\\App\\MetaValue::class)\r-\u0026gt;leftJoin('meta_data_type_meta_value', 'meta_values.id', '=', 'meta_data_type_meta_value.meta_value_id')\r-\u0026gt;leftJoin('meta_data_types', 'meta_data_types.id', '=', 'meta_data_type_meta_value.meta_data_type_id')\r-\u0026gt;groupBy('meta_data_types.id')\r-\u0026gt;select('meta_data_types.*');\r}\rModel meta_data_types had not direct relation to this MetaData model class. But MetaData did relate to meta_values.\nSo using that info I could get the related MetaValues and then the related MetaDataTypes and that was it.\nIt is a lot easier if just doing this through a One to Many http://laravel.com/docs/5.1/eloquent-relationships#has-many-through\n","relPermalink":"/posts/155/","summary":"This thread helped a lot http://laravel.io/forum/03-04-2014-hasmanythrough-with-many-to-many\nIn the end I had this query\n class MetaData extends Model {\rpublic function meta_values()\r{\rreturn $this-\u0026gt;belongsToMany(\\App\\MetaValue::class);\r}\rpublic function meta_data_types()\r{\rreturn $this-\u0026gt;belongsToMany(\\App\\MetaValue::class)\r-\u0026gt;leftJoin('meta_data_type_meta_value', 'meta_values.id', '=', 'meta_data_type_meta_value.meta_value_id')\r-\u0026gt;leftJoin('meta_data_types', 'meta_data_types.id', '=', 'meta_data_type_meta_value.meta_data_type_id')\r-\u0026gt;groupBy('meta_data_types.id')\r-\u0026gt;select('meta_data_types.*');\r}\rModel meta_data_types had not direct relation to this MetaData model class. But MetaData did relate to meta_values.\nSo using that info I could get the related MetaValues and then the related MetaDataTypes and that was it.","tags":["laravel","php"],"title":"HasMany Through a Many to Many"},{"content":"Using this library https://packagist.org/packages/thujohn/rss\nWe simply install but using a forked version so it works with L5\n \u0026quot;require\u0026quot;: {\r\u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.5.9\u0026quot;,\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;5.1.*\u0026quot;,\r\u0026quot;thujohn/rss\u0026quot;: \u0026quot;dev-master\u0026quot;\r},\r\u0026quot;repositories\u0026quot;: [\r{\r\u0026quot;type\u0026quot;: \u0026quot;vcs\u0026quot;,\r\u0026quot;url\u0026quot;: \u0026quot;https://github.com/majortom731/rss-l4.git\u0026quot;\r}\r],\rcomposer update\rAnd as they note in the docs\n'providers' =\u0026gt; array(\r'Thujohn\\Rss\\RssServiceProvider',\r)\rNow in my route I simply put\nRoute::get('feed', function() {\r$feed = Thujohn\\Rss\\RssFacade::feed('2.0', 'UTF-8');\r$feed-\u0026gt;channel(array('title' =\u0026gt; 'Incomings.io Blog and News', 'description' =\u0026gt; 'Latest News and Blog postings for Incomings.io', 'link' =\u0026gt; 'http://incomings.io/feed'));\r$blogs = Blog::all();\rforeach ($blogs as $blog){\r$feed-\u0026gt;item(array('title' =\u0026gt; $blog-\u0026gt;title, 'description|cdata' =\u0026gt; $blog-\u0026gt;body, 'link' =\u0026gt; 'http://incomings.io/blogs/' . $blog-\u0026gt;id));\r}\rreturn Response::make($feed, 200, array('Content-Type' =\u0026gt; 'text/xml'));\r});\rAnd nothing fancy here I just output my blog model. I could limit to the latest 10 or output the data better but for now.\n","relPermalink":"/posts/154/","summary":"Using this library https://packagist.org/packages/thujohn/rss\nWe simply install but using a forked version so it works with L5\n \u0026quot;require\u0026quot;: {\r\u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.5.9\u0026quot;,\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;5.1.*\u0026quot;,\r\u0026quot;thujohn/rss\u0026quot;: \u0026quot;dev-master\u0026quot;\r},\r\u0026quot;repositories\u0026quot;: [\r{\r\u0026quot;type\u0026quot;: \u0026quot;vcs\u0026quot;,\r\u0026quot;url\u0026quot;: \u0026quot;https://github.com/majortom731/rss-l4.git\u0026quot;\r}\r],\rcomposer update\rAnd as they note in the docs\n'providers' =\u0026gt; array(\r'Thujohn\\Rss\\RssServiceProvider',\r)\rNow in my route I simply put\nRoute::get('feed', function() {\r$feed = Thujohn\\Rss\\RssFacade::feed('2.0', 'UTF-8');\r$feed-\u0026gt;channel(array('title' =\u0026gt; 'Incomings.io Blog and News', 'description' =\u0026gt; 'Latest News and Blog postings for Incomings.","tags":["laravel","php"],"title":"Adding RSS to Your Site"},{"content":"Trying to make this workflow more easy. Right now it seems that since bower ends up putting all assets into bower_components (css and js) and elixir wants assets by default in resources/assets/css and js that I need to have an easy way to get the files via bower and then get them to the needed folders.\nFor most project we actually leave the files in the git repo for faster ui testing builds and we rarely run updates but when we do it would be nice for bower to also be able to work and not mess any of the above settings not cause me to have to manually move files around.\nSetting up Bower Following this https://github.com/blittle/bower-installer I have bower-installer ready to go.\nThen I setup my bower.json to get my long list of way to many files ready to gulp / elixir\n{\r\u0026quot;name\u0026quot;: \u0026quot;demo\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;0.0.0\u0026quot;,\r\u0026quot;homepage\u0026quot;: \u0026quot;https://github.com/alnutile/demo\u0026quot;,\r\u0026quot;license\u0026quot;: \u0026quot;MIT\u0026quot;,\r\u0026quot;ignore\u0026quot;: [\r\u0026quot;**/.*\u0026quot;,\r\u0026quot;node_modules\u0026quot;,\r\u0026quot;bower_components\u0026quot;,\r\u0026quot;test\u0026quot;,\r\u0026quot;tests\u0026quot;\r],\r\u0026quot;install\u0026quot;: {\r\u0026quot;path\u0026quot;: {\r\u0026quot;css\u0026quot;: \u0026quot;resources/assets/css/vendor\u0026quot;,\r\u0026quot;js\u0026quot;: \u0026quot;resources/assets/js/vendor\u0026quot;\r}\r},\r\u0026quot;dependencies\u0026quot;: {\r\u0026quot;angular\u0026quot;: \u0026quot;1.3.*\u0026quot;,\r\u0026quot;angular-bootstrap\u0026quot;: \u0026quot;0.11.*\u0026quot;,\r\u0026quot;angular-animate\u0026quot;: \u0026quot;1.3.*\u0026quot;,\r\u0026quot;angular-sanitize\u0026quot;: \u0026quot;1.3.*\u0026quot;,\r\u0026quot;angular-resource\u0026quot;: \u0026quot;1.3.*\u0026quot;,\r\u0026quot;restangular\u0026quot;: \u0026quot;1.4.0\u0026quot;,\r\u0026quot;ng-flow\u0026quot;: \u0026quot;~2\u0026quot;,\r\u0026quot;angular-xeditable\u0026quot;: \u0026quot;~0.1.8\u0026quot;,\r\u0026quot;jquery\u0026quot;: \u0026quot;2.1.1\u0026quot;,\r\u0026quot;bootstrap\u0026quot;: \u0026quot;~3.2.0\u0026quot;,\r\u0026quot;checklist-model\u0026quot;: \u0026quot;0.1.3\u0026quot;,\r\u0026quot;pace\u0026quot;: \u0026quot;0.5.*\u0026quot;,\r\u0026quot;moment\u0026quot;: \u0026quot;latest\u0026quot;,\r\u0026quot;jasny-bootstrap\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;angular-ui-router\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;angularjs-toaster\u0026quot;: \u0026quot;~0.4.10\u0026quot;,\r\u0026quot;angular-strap\u0026quot;: \u0026quot;~2.1.6\u0026quot;,\r\u0026quot;iCheck\u0026quot;: \u0026quot;~1.0.2\u0026quot;,\r\u0026quot;angular-spinner\u0026quot;: \u0026quot;~0.6.1\u0026quot;,\r\u0026quot;fontawesome\u0026quot;: \u0026quot;~4.3.0\u0026quot;,\r\u0026quot;ng-table\u0026quot;: \u0026quot;~0.5.4\u0026quot;,\r\u0026quot;angular-ui-select\u0026quot;: \u0026quot;~0.11.2\u0026quot;,\r\u0026quot;jquery-ui\u0026quot;: \u0026quot;~1.11.4\u0026quot;\r}\r}\rNow I have bower_components which I do not need or push around anymore (thanks to this) but I also have resources/assets/js and resources/assets/css which I can now keep in the repo saving up npm and bower speed issues when running acceptance tests on Codeship more on that here.\nThat gets my gulpfile.js for the base libraries down to\nvar elixir = require('laravel-elixir');\relixir(function(mix) {\rmix\r.styles([\u0026quot;vendor/**/*.css\u0026quot; ], \u0026quot;public/css/vendor.css\u0026quot;)\r.scripts( [\u0026quot;vendor/angular/angular.js\u0026quot;, \u0026quot;vendor/**/*.js\u0026quot;], \u0026quot;public/js/vendor.js\u0026quot;);\r});\rI still would like to controller the ordering more. For example not sure angular just happened to be in the right order due to alphabetical order, or if it was included twice etc.\nLastly adding versioning\nvar elixir = require('laravel-elixir');\relixir(function(mix) {\rmix\r.styles([\u0026quot;vendor/**/*.css\u0026quot; ], \u0026quot;public/css/vendor.css\u0026quot;)\r.scripts( [\u0026quot;vendor/angular/angular.js\u0026quot;, \u0026quot;vendor/**/*.js\u0026quot;], \u0026quot;public/js/vendor.js\u0026quot;)\r.version( [\u0026quot;css/vendor.css\u0026quot;, \u0026quot;js/vendor.js\u0026quot;]);\r});\rAs noted in the docs http://laravel.com/docs/5.1/elixir#versioning-and-cache-busting\nFrom here I still need to setup a workflow for all my app files.\nFor example a page like \u0026ldquo;/projects\u0026rdquo; in angular will need a service, controller and route file.\nSo do I put those in resources/assets/js and add a new section to the gulp file list\nelixir(function(mix) {\rmix\r.styles([\u0026quot;vendor/**/*.css\u0026quot; ], \u0026quot;public/css/vendor.css\u0026quot;)\r.scripts( [\u0026quot;vendor/angular/angular.js\u0026quot;, \u0026quot;vendor/**/*.js\u0026quot;], \u0026quot;public/js/vendor.js\u0026quot;)\r.scripts( [\u0026quot;custom/**/*.js\u0026quot;], \u0026quot;public/js/custom.js\u0026quot;)\r.version( [\u0026quot;css/vendor.css\u0026quot;, \u0026quot;js/vendor.js\u0026quot;]);\r});\rand run gulp watch. This is not my normal workflow but it sure beats putting all the files in my html file and then also doing this to concatenate them.\n","relPermalink":"/posts/153/","summary":"Trying to make this workflow more easy. Right now it seems that since bower ends up putting all assets into bower_components (css and js) and elixir wants assets by default in resources/assets/css and js that I need to have an easy way to get the files via bower and then get them to the needed folders.\nFor most project we actually leave the files in the git repo for faster ui testing builds and we rarely run updates but when we do it would be nice for bower to also be able to work and not mess any of the above settings not cause me to have to manually move files around.","tags":["laravel","elixir"],"title":"Bower and Elixir"},{"content":"I simply want to make sure to return json from my app more easily even on errors. So in Angular I set my app.js as such\n(function(){\r'use strict';\rangular.module('app', []);\rangular.module('app').run(\rfunction($http)\r{\r$http.defaults.headers.common.Accept = 'application/json';\r}\r);\r})();\rThen in my Laravel routes I can\n\tpublic function index(Request $request)\r{\r$blogs = Blog::orderBy('created_at', 'desc')-\u0026gt;paginate(5);\r$customPagination = new CustomPagination($blogs);\rif($request-\u0026gt;header('Accept') == 'application/json')\rreturn $blogs;\rreturn view('blogs.index', compact('blogs', 'customPagination'));\r}\rThen I can share the same route with Angular that I do with my Blade templates as needed.\n","relPermalink":"/posts/152/","summary":"I simply want to make sure to return json from my app more easily even on errors. So in Angular I set my app.js as such\n(function(){\r'use strict';\rangular.module('app', []);\rangular.module('app').run(\rfunction($http)\r{\r$http.defaults.headers.common.Accept = 'application/json';\r}\r);\r})();\rThen in my Laravel routes I can\n\tpublic function index(Request $request)\r{\r$blogs = Blog::orderBy('created_at', 'desc')-\u0026gt;paginate(5);\r$customPagination = new CustomPagination($blogs);\rif($request-\u0026gt;header('Accept') == 'application/json')\rreturn $blogs;\rreturn view('blogs.index', compact('blogs', 'customPagination'));\r}\rThen I can share the same route with Angular that I do with my Blade templates as needed.","tags":["laravel","angular"],"title":"Quick way to Request Json from Angular and return from Laravel"},{"content":"The new integration testing features with Laravel 5.1 make Behat almost not needed BUT we do a lot of AngularJs work and instead of using karma to test the ui we enjoy using behat since we like the Gherkin Syntax and how we can easily code custom steps in PHP.\nHere are some steps to getting behat going on Codeship so you get full CI even of Angular.\nThis is all based off of https://github.com/laracasts/Behat-Laravel-Extension\nBehat.yml behat.yml looks like this for me\ndefault:\rextensions:\rLaracasts\\Behat:\r# env_path: .env.behat\rBehat\\MinkExtension:\rbase_url: https://microservicehub.dev:44300\rdefault_session: laravel\rlaravel: ~\rselenium2:\rwd_host: \u0026quot;http://192.168.10.1:4444/wd/hub\u0026quot;\rbrowser_name: chrome\rcodeship:\rextensions:\rLaracasts\\Behat:\renv_path: .env.codeship\rBehat\\MinkExtension:\rbase_url: http://localhost:8080\rdefault_session: laravel\rlaravel: ~\rselenium2:\rwd_host: \u0026quot;http://localhost:4444/wd/hub\u0026quot;\rbrowser_name: chrome\rThis is so I can run it locally as needed. The Codeship profile will then call in the .env.codeship and update the url as needed.\n.env.codeship This file has\nAPP_ENV=testing\rAPP_DEBUG=true\rAPP_KEY=f5edkkfijPDKQXPLHyYNDhiNZZrpT0Qd\rDB_HOST=localhost\rDB_DATABASE=test\rCACHE_DRIVER=file\rSESSION_DRIVER=file\rQUEUE_DRIVER=sync\rMAIL_DRIVER=smtp\rMAIL_HOST=mailtrap.io\rMAIL_PORT=2525\rMAIL_USERNAME=null\rMAIL_PASSWORD=null\rMAIL_ENCRYPTION=null\rBuild Script for Codeship Using the code they offer on their site I add that to my projects folder under tests/selenium_server.sh it is this file here\nMaybe some do not need to be there?\nCodeship Test Settings Now in the settings I end up with inside the CodeShip UI are as follows\nHere for example is the URL for my project to find these settings.\nhttps://codeship.com/projects/8844/configure_tests\nUnder Setup Commands\n# Set php version through phpenv. 5.3, 5.4 and 5.5 available\rphpenv local 5.5\r# Install dependencies through Composer\rcomposer config -g github-oauth.github.com foobar\rtouch .env\recho \u0026quot;APP_ENV='testing'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;DB_DATABASE='test'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MYSQL_TESTING_URL='localhost'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;APP_KEY=DHMbPIbNLd1jI0ZEZZSxRFOHj03SU4P5\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;CACHE_DRIVER=file\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;SESSION_DRIVER=file\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;QUEUE_DRIVER=sync\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_DRIVER=smtp\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_HOST=smtp.mailgun.org\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_PORT=2525\u0026quot; \u0026gt;\u0026gt; .env\rcomposer install --dev\rphp artisan migrate\rphp artisan db:seed\rnohup bash -c \u0026quot;sh tests/selenium_server.sh \u0026amp;\u0026quot; \u0026amp;\u0026amp; sleep 9\rcd public \u0026amp;\u0026amp; nohup bash -c \u0026quot;php -S localhost:8080 \u0026amp;\u0026quot; \u0026amp;\u0026amp; sleep 9\rcd ../\rUnder Configure Test\nDB_DATABASE=test phpunit\rphp artisan migrate\rphp artisan db:seed\rvendor/bin/behat --profile=codeship --stop-on-failure\rI run the migration one more time to get it ready for behat\n","relPermalink":"/posts/151/","summary":"The new integration testing features with Laravel 5.1 make Behat almost not needed BUT we do a lot of AngularJs work and instead of using karma to test the ui we enjoy using behat since we like the Gherkin Syntax and how we can easily code custom steps in PHP.\nHere are some steps to getting behat going on Codeship so you get full CI even of Angular.\nThis is all based off of https://github.","tags":["laravel","php","bdd"],"title":"Laravel 5.1 Behat and Codeship"},{"content":"UPDATE\n I think we can also do AWS_BUCKET=foo_$APP_ENV directly in the env file, see https://mattstauffer.co/blog/laravel-5.0-environment-detection-and-environment-variables\n  Andrew Cavanagh  The .env file can be a real pain and get pretty big. And even though there is a tool, I made :), to move it around easily here is a thought on reducing it a bit so it is the same on all environments.\nTypically we have dev, stage, production, testing and local. And when you consider all are services we might use it can be pretty large for example\n Amazon or Iron.io and different queues Database Settings AWS Buckets  So a normal config could look like this on dev for example\nAPP_ENV=dev\rAPP_DEBUG=false\rAPP_KEY=yo\rDB_HOST=localhost\rDB_DATABASE=db_name_dev\rDB_USERNAME=username_dev\rDB_PASSWORD=secret\rAWS_BUCKET=some-bucket-dev\rAWS_ACCESS_KEY=foo\rAWS_SECRET_KEY=bar\rAWS_REGION=us-east-1\rIRON_TOKEN=sometoken\rIRON_PROJECT_ID=someid\rIRON_QUEUE=QueueNameFooDev\rIRON_DIFF_QUEUE=QueueNameBarDev\rDYNAMO_RT_TABLE=table_dev\rDYNAMO_DIFF_TABLE=table_dev\rIRON_WORKER_PROJECT_ID_THUMBNAILS=somekey\rIRON_WORKER_TOKEN_ID_THUMBNAILS=sometoken\rDYNAMO_OCR_RT_TABLE='some_table_dev'\rOCR_IRON_TOKEN='sometoken'\rOCR_IRON_PROJECT_ID='somekey'\rOCR_IRON_QUEUE='foo_dev'\rThat is about 24 settings but if we alter our code to do this when getting settings\n'some_key' =\u0026gt; env('OCR_IRON_QUEUE') . '_' . env('APP_ENV');\rInstead of\n'some_key' =\u0026gt; env('OCR_IRON_QUEUE');\rAnd we name our services and resources as needed _dev or _stage or _production then we can simplify the list above so it is the same for most of the environments.\nFor example OCR_IRON_QUEUE='foo_dev' is now OCR_IRON_QUEUE='foo' and can be the same on all servers!\nAPP_ENV=dev\rAPP_DEBUG=false\rAPP_KEY=yo\rDB_HOST=localhost\rDB_DATABASE=db_name\rDB_USERNAME=username\rDB_PASSWORD=secret\rAWS_BUCKET=some_bucket\rAWS_ACCESS_KEY=foo\rAWS_SECRET_KEY=bar\rAWS_REGION=us-east-1\rIRON_TOKEN=sometoken\rIRON_PROJECT_ID=someid\rIRON_QUEUE=QueueNameFoo\rIRON_DIFF_QUEUE=QueueNameBar\rDYNAMO_RT_TABLE=table\rDYNAMO_DIFF_TABLE=table\rIRON_WORKER_PROJECT_ID_THUMBNAILS=somekey\rIRON_WORKER_TOKEN_ID_THUMBNAILS=sometoken\rDYNAMO_OCR_RT_TABLE='some_table'\rOCR_IRON_TOKEN='sometoken'\rOCR_IRON_PROJECT_ID='somekey'\rOCR_IRON_QUEUE='foo'\rConvention over configuration so simple yet so easy for me to forget :)\n","relPermalink":"/posts/150/","summary":"UPDATE\n I think we can also do AWS_BUCKET=foo_$APP_ENV directly in the env file, see https://mattstauffer.co/blog/laravel-5.0-environment-detection-and-environment-variables\n  Andrew Cavanagh  The .env file can be a real pain and get pretty big. And even though there is a tool, I made :), to move it around easily here is a thought on reducing it a bit so it is the same on all environments.\nTypically we have dev, stage, production, testing and local.","tags":["laravel","php"],"title":"Conventions to Help Minimize your ENV File"},{"content":"Getting going on Codeship and Laravel is pretty easy.\nOnce you setup codeship to work with your github account just pull in your repo and set your Testing scripts as follows. (they have a ui for ENV variables as well)\nCodeship Testing Settings [easier copy paste bottom of article] You can do this in their UI as well. But at this point I am\n Setting up the composer token for any private repos that application might have Setting up .env for their specific needs as well eg MYSQL_*  For the Database to use their settings I have to edit config/database.php\n\u0026lt;?php\rreturn [\r'fetch' =\u0026gt; PDO::FETCH_CLASS,\r'default' =\u0026gt; env('DB_CONNECTION', 'mysql'),\r'connections' =\u0026gt; [\r'mysql' =\u0026gt; [\r'driver' =\u0026gt; 'mysql',\r'host' =\u0026gt; env('DB_HOST', 'localhost'),\r'database' =\u0026gt; env('DB_DATABASE', env('TEST_ENV_NUMBER')),\r'username' =\u0026gt; env('DB_USERNAME', env('MYSQL_USER')),\r'password' =\u0026gt; env('DB_PASSWORD', env('MYSQL_PASSWORD')),\r'charset' =\u0026gt; 'utf8',\r'collation' =\u0026gt; 'utf8_unicode_ci',\r'prefix' =\u0026gt; '',\r'strict' =\u0026gt; false,\r],\r],\r.......\r];\rAdding\nenv('DB_PASSWORD', env('MYSQL_PASSWORD')),\renv('DB_USERNAME', env('MYSQL_USER')),\renv('DB_DATABASE', env('TEST_ENV_NUMBER')),\rSo we default to theirs if ours is not there. Finally when we run the test I set the db to the name they want\nDB_DATABASE=test phpunit\rEnvoy Deploy After it passes I can use Envoy to deploy it.\nThe Envoy scripts are not on Forge but use to be so a lot of the naming matches.\nUnder the Codeship Deployment page I set\ncomposer global require \u0026quot;laravel/envoy=~1.0\u0026quot; \u0026amp;\u0026amp; /home/rof/.composer/vendor/bin/envoy run deploy_dev\rIn that script do what ever you need to make this thing deploy for example.\n@servers(['dev' =\u0026gt; 'forge@foo.com'])\r@task('deploy_dev', ['on' =\u0026gt; 'dev'])\rcd /home/forge/app\rgit reset --hard HEAD\rgit pull origin dev\rcomposer config -g github-oauth.github.com foo\rrm -rf vendor\rcomposer install\rcomposer dump-autoload\rphp artisan migrate:refresh --seed\rbower install\r@endtask\rWe do not do this on Prod. Someone with proper permissions will run Envoy locally once the tests are passing.\nUPDATE\nEasier copy paste\n# Set php version through phpenv. 5.3, 5.4 and 5.5 available\rphpenv local 5.5\r# Install dependencies through Composer\rcomposer config -g github-oauth.github.com foo\rtouch .env\recho \u0026quot;APP_ENV='testing'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MYSQL_TESTING_URL='localhost'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MYSQL_TESTING_URL='localhost'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;APP_KEY=foo\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;CACHE_DRIVER=file\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;SESSION_DRIVER=file\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;QUEUE_DRIVER=sync\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_DRIVER=smtp\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_HOST=smtp.mailgun.org\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_PORT=2525\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_USERNAME=postmaster@email.foo.io\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_PASSWORD=foo\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;MAIL_ENCRYPTION=true\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;STRIPE_API_SECRET='foo'\u0026quot; \u0026gt;\u0026gt; .env\recho \u0026quot;STRIPE_PUBLIC='foo'\u0026quot; \u0026gt;\u0026gt; .env\rcomposer install --dev\r","relPermalink":"/posts/148/","summary":"Getting going on Codeship and Laravel is pretty easy.\nOnce you setup codeship to work with your github account just pull in your repo and set your Testing scripts as follows. (they have a ui for ENV variables as well)\nCodeship Testing Settings [easier copy paste bottom of article] You can do this in their UI as well. But at this point I am\n Setting up the composer token for any private repos that application might have Setting up .","tags":["laravel","testing","phpunit","php","ci","codeship"],"title":"Codeship and Laravel for Continuous Integration"},{"content":"Start to end Billing and Laravel As usual the Laravel docs rock but sometimes it is nice to see this from start to end.\nWith that said read those docs first and then come back here. Also the public repo can be seen here\nSetup your Stripe Yup this is easy. Note the test/live dash board. Super nice to see the different processes.\nTurn it to test and make your plans. Keep in mind you will have to make the same plans for Live after the fact.\nGo to Accounts -\u0026gt; Settings and get your API keys.\nPlug them into the .env file (try this super cool .env deployer tool to make life easier)\nSo now your .env has the right settings, your config/app.php has the right env calls\n 'stripe' =\u0026gt; [\r'model' =\u0026gt; 'App\\User',\r'key' =\u0026gt; env('STRIPE_PUBLIC'),\r'secret' =\u0026gt; env('STRIPE_API_SECRET'),\r],\rYou are ready to code.\nAdd this to your composer.json if you are using linux\n \u0026quot;scripts\u0026quot;: {\r\u0026quot;post-install-cmd\u0026quot;: [\r\u0026quot;php artisan clear-compiled\u0026quot;,\r\u0026quot;php artisan optimize\u0026quot;,\r\u0026quot;php -r \\\u0026quot;exec('chmod -R +x vendor/laravel/cashier/src/Laravel/Cashier/bin');\\\u0026quot;\u0026quot;,\r],\rOr just remember you need to do this to print\nLike that docs say go ahead and install it and setup your app.php for the Provider\nRoutes My main route file looked like this when I was done\n\u0026lt;?php\rRoute::get('/', function() {\rreturn Redirect::to('/sponsor');\r});\rrequire __DIR__ . '/routes.sponsor.php';\rrequire __DIR__ . '/routes.profile.php';\rrequire __DIR__ . '/routes.auth.php';\rWhich is not much help :)\nThe profile one is this\n\u0026lt;?php\rRoute::group(['prefix' =\u0026gt; 'profile', 'middleware' =\u0026gt; 'auth'], function () {\rRoute::get('/', 'ProfileController@getUser');\rRoute::post('edit', 'ProfileController@postEdit');\rRoute::get('invoice/{invoice}', 'ProfileController@getPrintInvoice');\rRoute::get('cancel', 'ProfileController@getCancel');\r});\rAnd the sponsor one is\n\u0026lt;?php\rRoute::group(['prefix' =\u0026gt; 'sponsor'], function() {\rRoute::get('/', 'SubscribeController@getSponsorPage');\rRoute::post('1show', 'SubscribeController@post1Show');\rRoute::post('2show', 'SubscribeController@post2Show');\rRoute::post('fan', 'SubscribeController@postFan');\r});\rStripe Controller Pretty simple, which is my goal. Basically take the requests, check the plans and setup the user.\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse Illuminate\\Routing\\Controller;\ruse App\\Plans;\ruse App\\User;\ruse Illuminate\\Support\\Facades\\Auth;\ruse Illuminate\\Support\\Facades\\Hash;\ruse Illuminate\\Support\\Facades\\Input;\ruse Illuminate\\Support\\Facades\\Redirect;\ruse Illuminate\\Support\\Str;\rclass SubscribeController extends Controller\r{\rpublic function registerUser($input, $level)\r{\rif($user = User::where(\u0026quot;email\u0026quot;, $input['stripeEmail'])-\u0026gt;first())\r{\rif($user-\u0026gt;subscribed())\r{\r$user-\u0026gt;subscription($level)-\u0026gt;swap();\r}\relse\r{\r$user-\u0026gt;subscription($level)-\u0026gt;create($input['stripeToken']);\r}\r}\relse\r{\r$user = User::create(\r[\r'email' =\u0026gt; $input['stripeEmail'],\r'password' =\u0026gt; Hash::make(Str::random())\r]\r);\r$user-\u0026gt;subscription($level)-\u0026gt;create($input['stripeToken']);\r}\rreturn $user;\r}\rpublic function getSponsorPage()\r{\r$public_key = env('STRIPE_PUBLIC');\rreturn view('stripe.subscribe', compact('public_key'));\r}\rpublic function post1Show()\r{\r$input = Input::all();\rif(empty($input['stripeToken']))\rreturn Redirect::back();\r$user = $this-\u0026gt;registerUser($input, Plans::$ONE_SHOW_A_MONTH);\rAuth::login($user);\rreturn Redirect::to('profile')-\u0026gt;with(\u0026quot;message\u0026quot;, \u0026quot;Thanks!\u0026quot;);\r}\rpublic function post2Show()\r{\r$input = Input::all();\rif(empty($input['stripeToken']))\rreturn Redirect::back();\r$user = $this-\u0026gt;registerUser($input, Plans::$TWO_SHOWS_A_MONTH);\rAuth::login($user);\rreturn Redirect::to('profile')-\u0026gt;with(\u0026quot;message\u0026quot;, \u0026quot;Thanks!\u0026quot;);\r}\rpublic function postFan()\r{\r$input = Input::all();\rif(empty($input['stripeToken']))\rreturn Redirect::back();\r$user = $this-\u0026gt;registerUser($input, Plans::$FAN);\rAuth::login($user);\rreturn Redirect::to('profile')-\u0026gt;with(\u0026quot;message\u0026quot;, \u0026quot;Thanks!\u0026quot;);\r}\r}\rWe will hit the UI now\nStripe Ui I ended up with these view files and a theme file from WrapBootstrap which I can not include of course but just use default bootstrap and it will all work.\nYou can see them all here\nSo at this point you could have something like this\nNow how do they manage all this?\nProfile Controller This controller takes on the profile route to manage their subscriptions and print. You can see those files for the view about in the image and the gist link provided above.\nWhen all that is in place they can see this\n","relPermalink":"/posts/149/","summary":"Start to end Billing and Laravel As usual the Laravel docs rock but sometimes it is nice to see this from start to end.\nWith that said read those docs first and then come back here. Also the public repo can be seen here\nSetup your Stripe Yup this is easy. Note the test/live dash board. Super nice to see the different processes.\nTurn it to test and make your plans.","tags":["stripe","laravel"],"title":"Start to end Billing using Stripe, Cashier and Laravel 5.1"},{"content":"Previously I wrote about how to use Lumen and Iron.io this adds to that by modifying the logging technique.\nAs noted the worker is basically a class that sets things up, hands off the payload to the handler and returns the results.\n\u0026lt;?php\ruse App\\CompareFuseHandler;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\File;\ruse Illuminate\\Support\\Facades\\Log;\rrequire_once __DIR__ . '/libs/bootstrap.php';\r$payload = getPayload(true);\rfire($payload);\rfunction fire($payload)\r{\r$logs = storage_path('logs/lumen.log');\rLog::info(sprintf(\u0026quot;Starting Worker at %s\u0026quot;, \\Carbon\\Carbon::now()));\rtry\r{\r//Empty Logs\r$handler = App::make('App\\CompareFuseHandler');\r$handler-\u0026gt;handle($payload);\recho \u0026quot;Success See Logs Below: \\n\u0026quot;;\rLog::info(sprintf(\u0026quot;Ending Worker at %s\u0026quot;, \\Carbon\\Carbon::now()));\recho File::get($logs);\r}\rcatch(\\Exception $e)\r{\recho \u0026quot;Error See Logs Below: \\n\u0026quot;;\rLog::info(sprintf(\u0026quot;Ending Worker at %s\u0026quot;, \\Carbon\\Carbon::now())); echo File::get($logs);\r}\r}\rThe nice thing about above is that all throughout my handler class I can start the do Log::info('foo') to store up a report for the end of the process on either Success or Error.\nOther options of course are BugSnag and PaperTrail\n","relPermalink":"/posts/147/","summary":"Previously I wrote about how to use Lumen and Iron.io this adds to that by modifying the logging technique.\nAs noted the worker is basically a class that sets things up, hands off the payload to the handler and returns the results.\n\u0026lt;?php\ruse App\\CompareFuseHandler;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\File;\ruse Illuminate\\Support\\Facades\\Log;\rrequire_once __DIR__ . '/libs/bootstrap.php';\r$payload = getPayload(true);\rfire($payload);\rfunction fire($payload)\r{\r$logs = storage_path('logs/lumen.log');\rLog::info(sprintf(\u0026quot;Starting Worker at %s\u0026quot;, \\Carbon\\Carbon::now()));\rtry\r{\r//Empty Logs\r$handler = App::make('App\\CompareFuseHandler');\r$handler-\u0026gt;handle($payload);\recho \u0026quot;Success See Logs Below: \\n\u0026quot;;\rLog::info(sprintf(\u0026quot;Ending Worker at %s\u0026quot;, \\Carbon\\Carbon::now()));\recho File::get($logs);\r}\rcatch(\\Exception $e)\r{\recho \u0026quot;Error See Logs Below: \\n\u0026quot;;\rLog::info(sprintf(\u0026quot;Ending Worker at %s\u0026quot;, \\Carbon\\Carbon::now())); echo File::get($logs);\r}\r}\rThe nice thing about above is that all throughout my handler class I can start the do Log::info('foo') to store up a report for the end of the process on either Success or Error.","tags":["iron","microservices","laravel"],"title":"Logging in Iron.io Workers"},{"content":"Wow, writing Artisan Commands just become even easier. And plugging it into Scheduler makes for a great combination.\nFor example we need to clean out a folder every so many minutes. The example below I also for fun play around with progress and table output.\nNote too protected $signature = 'approve:cleanuploads {--minutes=10}'; simplifies theargument and options features.\n\u0026lt;?php namespace App\\Console\\Commands;\ruse Carbon\\Carbon;\ruse Illuminate\\Console\\Command;\ruse Illuminate\\Support\\Facades\\File;\rclass CleanUploadsCommands extends Command\r{\rprotected $rootPath = 'public/storage';\rprotected $maxMinutes = 10;\rprotected $deleted = [];\rprotected $signature = 'approve:cleanuploads {--minutes=10}';\rprotected $description = 'Clean all the uploads in the storage folder for security reasons';\rprotected $pdfFiles = [];\rprotected $files = [];\rpublic function __construct()\r{\rparent::__construct();\r}\rpublic function handle()\r{\r$this-\u0026gt;maxMinutes = $this-\u0026gt;option('minutes');\r$this-\u0026gt;anyPdfFilesHere();\r$this-\u0026gt;deletePdfFiles();\r$this-\u0026gt;outputResults();\r}\rprotected function anyPdfFilesHere()\r{\r$this-\u0026gt;files = File::allFiles(base_path($this-\u0026gt;rootPath));\rforeach($this-\u0026gt;files as $file)\r{\rif (File::mimeType($file) == 'application/pdf')\r{\r$this-\u0026gt;pdfFiles[] = $file;\r}\r}\r}\rprivate function deletePdfFiles()\r{\rif(count($this-\u0026gt;pdfFiles) \u0026gt; 0)\r{\r$this-\u0026gt;output-\u0026gt;progressStart(count($this-\u0026gt;pdfFiles));\rforeach($this-\u0026gt;pdfFiles as $file)\r{\r$modified = File::lastModified($file);\r$minutes = Carbon::createFromTimestamp($modified)-\u0026gt;diffInMinutes();\rif($minutes \u0026gt; $this-\u0026gt;maxMinutes)\r{\r$this-\u0026gt;setDeleted(['filename' =\u0026gt; $file]);\rFile::delete($file);\r$this-\u0026gt;output-\u0026gt;progressAdvance();\r}\r}\r}\r}\rprivate function outputResults()\r{\rif(count($this-\u0026gt;deleted) \u0026gt; 0)\r{\r$this-\u0026gt;output-\u0026gt;progressFinish();\r$headers = ['File Name and Path'];\r$this-\u0026gt;table($headers, $this-\u0026gt;getDeleted());\r}\relse\r{\r$this-\u0026gt;comment(sprintf(\u0026quot;No files older than %d minutes\u0026quot;, $this-\u0026gt;maxMinutes));\r}\r}\rpublic function getDeleted()\r{\rreturn $this-\u0026gt;deleted;\r}\rpublic function setDeleted($deleted)\r{\r$this-\u0026gt;deleted[] = $deleted;\r}\r}\rThen in the Kernel.php I enter\n\u0026lt;?php namespace Approve\\Console;\ruse Illuminate\\Console\\Scheduling\\Schedule;\ruse Illuminate\\Foundation\\Console\\Kernel as ConsoleKernel;\rclass Kernel extends ConsoleKernel\r{\r/**\r* The Artisan commands provided by your application.\r*\r* @var array\r*/\rprotected $commands = [\r'App\\Console\\Commands\\CleanUploadsCommands'\r];\r/**\r* Define the application's command schedule.\r*\r* @param \\Illuminate\\Console\\Scheduling\\Schedule $schedule\r* @return void\r*/\rprotected function schedule(Schedule $schedule)\r{\r$schedule-\u0026gt;command('approve:cleanuploads --minutes=10')\r-\u0026gt;everyMinute();\r}\r}\rAnd that is it.\nOne big thing about Commands is the power of Asynchronous processing that libraries like Symfony Process gives us the ability to run numerous commands at once!\n","relPermalink":"/posts/146/","summary":"Wow, writing Artisan Commands just become even easier. And plugging it into Scheduler makes for a great combination.\nFor example we need to clean out a folder every so many minutes. The example below I also for fun play around with progress and table output.\nNote too protected $signature = 'approve:cleanuploads {--minutes=10}'; simplifies theargument and options features.\n\u0026lt;?php namespace App\\Console\\Commands;\ruse Carbon\\Carbon;\ruse Illuminate\\Console\\Command;\ruse Illuminate\\Support\\Facades\\File;\rclass CleanUploadsCommands extends Command\r{\rprotected $rootPath = 'public/storage';\rprotected $maxMinutes = 10;\rprotected $deleted = [];\rprotected $signature = 'approve:cleanuploads {--minutes=10}';\rprotected $description = 'Clean all the uploads in the storage folder for security reasons';\rprotected $pdfFiles = [];\rprotected $files = [];\rpublic function __construct()\r{\rparent::__construct();\r}\rpublic function handle()\r{\r$this-\u0026gt;maxMinutes = $this-\u0026gt;option('minutes');\r$this-\u0026gt;anyPdfFilesHere();\r$this-\u0026gt;deletePdfFiles();\r$this-\u0026gt;outputResults();\r}\rprotected function anyPdfFilesHere()\r{\r$this-\u0026gt;files = File::allFiles(base_path($this-\u0026gt;rootPath));\rforeach($this-\u0026gt;files as $file)\r{\rif (File::mimeType($file) == 'application/pdf')\r{\r$this-\u0026gt;pdfFiles[] = $file;\r}\r}\r}\rprivate function deletePdfFiles()\r{\rif(count($this-\u0026gt;pdfFiles) \u0026gt; 0)\r{\r$this-\u0026gt;output-\u0026gt;progressStart(count($this-\u0026gt;pdfFiles));\rforeach($this-\u0026gt;pdfFiles as $file)\r{\r$modified = File::lastModified($file);\r$minutes = Carbon::createFromTimestamp($modified)-\u0026gt;diffInMinutes();\rif($minutes \u0026gt; $this-\u0026gt;maxMinutes)\r{\r$this-\u0026gt;setDeleted(['filename' =\u0026gt; $file]);\rFile::delete($file);\r$this-\u0026gt;output-\u0026gt;progressAdvance();\r}\r}\r}\r}\rprivate function outputResults()\r{\rif(count($this-\u0026gt;deleted) \u0026gt; 0)\r{\r$this-\u0026gt;output-\u0026gt;progressFinish();\r$headers = ['File Name and Path'];\r$this-\u0026gt;table($headers, $this-\u0026gt;getDeleted());\r}\relse\r{\r$this-\u0026gt;comment(sprintf(\u0026quot;No files older than %d minutes\u0026quot;, $this-\u0026gt;maxMinutes));\r}\r}\rpublic function getDeleted()\r{\rreturn $this-\u0026gt;deleted;\r}\rpublic function setDeleted($deleted)\r{\r$this-\u0026gt;deleted[] = $deleted;\r}\r}\rThen in the Kernel.","tags":["laravel","php","commands"],"title":"Writing Commands and Scheduling in Laravel 5.1"},{"content":"Oops Codeship and Laravel is here\nEasily Create Fixture Data from Remote Services and Refresh Mock Data We have integration tests that hit remote apis like Github, S3, DynomoDB, our own APIs etc and we do not want to hit those during out tests but we also want to make sure we have the real data. So when one of those APIs change then our mock data can be refreshed to see if our systems really work with it.\nUsing Laravel\u0026rsquo;s new integration tests, though this works with any framework, we will swap out these Service classes with a Wrapper class ONLY if we have a matching file. This allows us to delete those files and get another one on the fly.\nLets start with the Controller This simple Controller will talk to a Repo. Imagine the repo talking to Dynamodb or GithubApi, database etc.\n\u0026lt;?php\rnamespace App\\Http\\Controllers;\ruse App\\ExampleRepo;\ruse Illuminate\\Support\\Facades\\Response;\rclass ExampleController extends Controller\r{\rpublic function mocking(ExampleRepo $exampleRepo)\r{\rreturn Response::json(\u0026quot;You are here \u0026quot; . $exampleRepo-\u0026gt;get());\r}\r}\rSo thanks to the dependency injection system; and the use of the Reflection Class, ExampleRepo get constructed as well.\nThe Tests First lets look at a normal test no mock\n\u0026lt;?php\ruse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\ruse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\File;\ruse Mockery as m;\rclass ExampleTest extends TestCase\r{\rpublic function testDefault()\r{\r$this-\u0026gt;get('/mocking')-\u0026gt;see(\u0026quot;You are here foo\u0026quot;);\r}\r}\rPretty simple. But not lets\u0026hellip;\nSwap Things Out Here we add an example of replacing the default instance App would make with our own Wrapper\n\u0026lt;?php\ruse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\ruse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\File;\ruse Mockery as m;\rclass ExampleTest extends TestCase\r{\rpublic function testDefault()\r{\r$this-\u0026gt;get('/mocking')-\u0026gt;see(\u0026quot;You are here foo\u0026quot;);\r}\rpublic function testMocking()\r{\r$mock = m::mock('App\\ExampleRepo');\r$mock-\u0026gt;shouldReceive('get')-\u0026gt;once()-\u0026gt;andReturn('bar');\rApp::instance('App\\ExampleRepo', $mock);\r$this-\u0026gt;get('/mocking')-\u0026gt;see(\u0026quot;You are here bar\u0026quot;);\r}\r}\rtestMocking will now return bar!\nMaking Fixtures on the Fly Same results BUT we hit my wrapper not the real services. But here is where I think it gets even better. I can return fixture data BUT at the same time I can not worry about returning stale fixture data eg the apis have changed but my fixtures have not. All of this without having my test code wrapped into the app code.\nThis will look for the output of a route. That Controller and Repo we will show in a moment\n public function testMakeFixture()\r{\r$wrapper = App::make('App\\ExampleRepoWrapper');\rApp::instance('App\\ExampleRepo', $wrapper);\r$this-\u0026gt;get('/mocking')-\u0026gt;see(\u0026quot;You are here foo\u0026quot;);\r}\rThis test has a wrapper which extends the repo\n\u0026lt;?php\rnamespace App;\ruse Illuminate\\Support\\Facades\\File;\rclass ExampleRepoWrapper extends ExampleRepo\r{\rpublic function get()\r{\rif(File::exists(base_path('tests/fixtures/foo.json')))\r{\r$content = File::get(base_path('tests/fixtures/foo.json'));\rreturn json_decode($content, true);\r}\r$results = parent::get();\rif(!File::exists(base_path('tests/fixtures/foo.json')))\r{\r$content = json_encode($results, JSON_PRETTY_PRINT);\rFile::put(base_path('tests/fixtures/foo.json'), $content);\r}\rreturn $results;\r}\r}\rSo now the Controller will talk to the Wrapper instead which will look for a file (NOTE: You can easily pass in $id or $name to make the fixtures unique)\nSo now when the Controller hits our Wrapper it goes right to the real ExampleRepo (seen below) if there is no fixture file and then the Wrapper kicks in to make the file (as seen in the above class).\n\u0026lt;?php namespace App;\rclass ExampleRepo\r{\rprotected $results;\rpublic function get()\r{\r$this-\u0026gt;results = 'foo';\rreturn $this-\u0026gt;results;\r}\r/**\r* @return mixed\r*/\rpublic function getResults()\r{\rreturn $this-\u0026gt;results;\r}\r}\rThat is it you can do integration testing on your APIs and not hit external services or even databases.\nForce Full Integration Sometimes you want to hit the external resources. This can be part of a weekly or daily test to make sure you app is working with all the external APIs. You can do this by deleting all the fixtures before running that test.\nSo you can setup a provider like this\n\rclass ExampleProvider extends ServiceProvider {\rpublic function register()\r{\rif(App::environment() == 'testing' and env('FULL_INTEGRATION') != 'true')\r{\r$this-\u0026gt;app-\u0026gt;bind('App\\ExampleRepo', 'App\\ExampleRepoWrapper'); } else { $this-\u0026gt;app-\u0026gt;bind('App\\ExampleRepo', 'App\\ExampleRepo');\r}\r}\t}\r** UPDATE **\rAnother good idea, by [Nathan Kirschbaum](https://twitter.com/n_kirschbaum), is to set the `FULL_INTEGRATION` setting by the user that is logged in. Cons One is UI testing. Prior to this I would make wrappers as needed to then take over if say APP_MOCK=true. Then I could mock even on Behat testing or the UI. But that meant a lot of Providers and alot of mixing of testing and code. But it worked and ran well on services like CodeShip and locally. If you Behat/Acceptance tests are hitting the API or UI it would be nice to fake all the external responses. Though now with the above the API testing is easy. The UI (when there is javascript) not so easy :(\nSince we are using App::instance we did not need to register a Provider Class. But to make the UI con a non issue you can go that far to register a ServiceProvider\n\rclass ExampleProvider extends ServiceProvider {\rpublic function register()\r{\rif(App::environment() == 'testing'\r{\r$this-\u0026gt;app-\u0026gt;bind('App\\ExampleRepo', 'App\\ExampleRepoWrapper'); } else { $this-\u0026gt;app-\u0026gt;bind('App\\ExampleRepo', 'App\\ExampleRepo');\r}\r}\t}\rThen register as normal in your config/app.php . This can be kinda tedious but would produce the same results.\nGreat book on the topic Laravel Testing Decoded\n","relPermalink":"/posts/145/","summary":"Oops Codeship and Laravel is here\nEasily Create Fixture Data from Remote Services and Refresh Mock Data We have integration tests that hit remote apis like Github, S3, DynomoDB, our own APIs etc and we do not want to hit those during out tests but we also want to make sure we have the real data. So when one of those APIs change then our mock data can be refreshed to see if our systems really work with it.","tags":["testing","laravel","php","phpunit","integration"],"title":"Easily Create Fixture Data from Remote Services and Refresh Mock Data"},{"content":"Using Laravel\u0026rsquo;s built in Cache facade is super easy. I will quickly cover how to use it for showing your Posts and showing a Post.\nExample 1 Show a Post This example will first check the Cache to see if there is a match for post_ID of the post if not it will make one. Also I happen to do the same for the sidebar.\npublic function show($id)\r{\r$post = Cache::rememberForever('post_' . $id, function() use ($id)\r{\rreturn Post::findOrFail($id);\r});\r$posts = Cache::rememberForever('posts_sidebar', function()\r{\rreturn Post::all()-\u0026gt;sortBy(\u0026quot;created_at\u0026quot;, null, TRUE);\r});\r$active = $post-\u0026gt;id;\rreturn View::make('posts.show', compact('post', 'posts', 'active'));\r}\rOf course this could be moved into a Service and out of the Controller.\nIt really is that simple\nAll Posts Same thing.\nIf you are not authenticated, eg all users but me, and there is no posts cache make one else show it.\nif(Auth::user()) {\r$posts = Post::OrderByCreatedAt()-\u0026gt;get();\r} else {\r$posts = Cache::rememberForever('posts', function()\r{\rreturn Post::Published()-\u0026gt;OrderByCreatedAt()-\u0026gt;get();\r});\r}\rClearing Cache For this I made a PostsObeserver Class\nThis will reset Cache for the related caches whenever a post is made or updated.\n\u0026lt;?php\ruse Illuminate\\Support\\Facades\\Cache;\rclass PostObserver {\rpublic function saved($model)\r{\rforeach(['posts_sidebar', 'posts'] as $value)\r{\rCache::forget($value);\r}\rCache::forget('post_' . $model-\u0026gt;id);\r}\r}\rThen I register it in the model\n\rpublic static function boot()\r{\rparent::boot();\rPost::observe(new PostObserver());\r}\r","relPermalink":"/posts/144/","summary":"Using Laravel\u0026rsquo;s built in Cache facade is super easy. I will quickly cover how to use it for showing your Posts and showing a Post.\nExample 1 Show a Post This example will first check the Cache to see if there is a match for post_ID of the post if not it will make one. Also I happen to do the same for the sidebar.\npublic function show($id)\r{\r$post = Cache::rememberForever('post_' .","tags":["laravel","cache"],"title":"Adding Cache to your Laravel Site"},{"content":"Lumen Iron Worker What and why A worker is a great way to run tasks as needed taking the load off your applications server and greatly speeding up the process of a task as you can run numerous workers at once.\nA lot of this comes from http://dev.iron.io/worker/beta/getting_started/ and http://dev.iron.io/worker/beta/cli/ and their examples\nTopics covered  Creating a Lumen Worker Creating a statically linked binary in the worker Testing the worker locally with Docker Entering your docker environment Design patterns  Install Lumen composer create-project laravel/lumen --prefer-dist\rAdd to composer.json\n  \u0026quot;iron-io/iron_mq\u0026quot;: \u0026quot;~1.5\u0026quot;,\r   \u0026quot;iron-io/iron_worker\u0026quot;: \u0026quot;~1.4\u0026quot;\r So now it looks like\n \u0026quot;require\u0026quot;: {\r\u0026quot;laravel/lumen-framework\u0026quot;: \u0026quot;5.0.*\u0026quot;,\r\u0026quot;vlucas/phpdotenv\u0026quot;: \u0026quot;~1.0\u0026quot;,\r\u0026quot;iron-io/iron_mq\u0026quot;: \u0026quot;~1.5\u0026quot;,\r\u0026quot;iron-io/iron_worker\u0026quot;: \u0026quot;~1.4\u0026quot;\r},\rInstall iron client See their notes here http://dev.iron.io/worker/beta/cli/\nInstall docker On a mac they have great steps here for that https://docs.docker.com/installation/mac/\nEnvironment settings For Lumen we can simply use our typical .env file. For Iron you put your info in the iron.json file in the root of the app (make sure to add this to .gitignore)\nThe format is\n{ \u0026quot;token\u0026quot;: \u0026quot;foo\u0026quot;, \u0026quot;project_id\u0026quot;: \u0026quot;bar\u0026quot; }\rThe worker Make a folder called workers at the root of your app\nIn there place your worker file. In this case ExampleOneWorker. This is what gets called, as you will see soon, when the worker starts. This is what will receive the payload.\nworkers/ExampleOneWorker.php\rInside of this to start will be\n\u0026lt;?php\rrequire_once __DIR__ . '/libs/bootstrap.php';\r$payload = getPayload(true);\rfire($payload);\rfunction fire($payload)\r{\rtry\r{\r$handler = new \\App\\ExampleOneHandler();\r$handler-\u0026gt;handle($payload);\r}\rcatch(\\Exception $e)\r{\r$message = sprintf(\u0026quot;Error with worker %s\u0026quot;, $e-\u0026gt;getMessage());\recho $message;\r}\r}\rFor testing reasons and code clarity I do not like to put much code in here. I instantiate a handler class and pass in the payload.\nThe getPayload in the helper.php file, provided by an Iron.io example, will get the payload for us.\nThere is another folder to make in there called libs and for now it has this file bootstrap.php and helper.php [1] The helper is here\nWith the contents as seen below for bootstrap or visit to get the files.\n\u0026lt;?php\rrequire __DIR__ . '/../../vendor/autoload.php';\r$app = require_once __DIR__ . '/../../bootstrap/app.php';\rif(!function_exists('getPayload'))\rrequire_once __DIR__ . '/helper.php';\ruse Illuminate\\Encryption\\Encrypter;\r$app-\u0026gt;boot();\rfunction decryptPayload($payload)\r{\r$crypt = new Encrypter(getenv('IRON_ENCRYPTION_KEY'));\r$payload = $crypt-\u0026gt;decrypt($payload);\rreturn json_decode(json_encode($payload), FALSE);\r}\rhelper.php I placed a gist here https://gist.github.com/alnutile/41ee747bb8e1810d19e8\nAlso for this example we will need a payload.json file in the root of our app. More on that shortly, for now put this into the file.\n{\r\u0026quot;foo\u0026quot;: \u0026quot;bar\u0026quot;\r}\rFinally our app folder has the ExampleOneHandler.php file to handle the job.\n\u0026lt;?php\rnamespace App;\rclass ExampleOneHandler {\rpublic function handle($payload)\r{\recho \u0026quot;This is the Payload\u0026quot;;\recho print_r($payload, 1);\r}\r}\rWe will do more shortly.\nHere is the folder/file layout\nRound 1 ExampleOneHandler Lets now run this and see what happens.\nUsing docker we can run this locally\ndocker run --rm -v \u0026quot;$(pwd)\u0026quot;:/worker -w /worker iron/images:php-5.6 sh -c \u0026quot;php /worker/workers/ExampleOneWorker.php -payload payload.json\u0026quot;\rYou just ran, what ideally will be, the exact worker you will run when you upload the code. It will take a moment on the first run. After that it will be super fast.\nHere is my output\nUploading to Iron Bundle This is really easy to make a script for by just adding them to an upload_worker.sh file in the root of your app and running that as needed.\ntouch ExampleOneWorker.zip\rrm ExampleOneWorker.zip\rzip -r ExampleOneWorker.zip . -x *.git*\riron worker upload --stack php-5.6 ExampleOneWorker.zip php workers/ExampleOneWorker.php\rSo we are touching the file so there are no errors if it is not there. Then we rm it And zip it ignoring .git to keep it slim and then we upload it with the worker and point to the directory to use.\nDon\u0026rsquo;t run it just yet\nI add my iron.json file to the root of my app as noted above.\nand I make the Project on the Iron HUD\nAnd then I can run the make_worker.sh I made above\nYou should end up with this output\nLooking at the HUD (Iron WebUI) Under Worker and tasks we see\nSo lets run it from the command line to see it work\niron worker queue --wait -payload-file payload.json ExampleOneWorker\rThe wait is pretty cool since we can get this output. This is key when doing master slave workers as well.\nYou get the same output as before. But it was run on the worker\nHere is the HUD\nRound 2 Lets do something real So far the payload has not done much but lets use it in this next example.\nAs above we make and ExampleTwoWorker.php\nMake payload2.json file\n{\r\u0026quot;search_word\u0026quot;: \u0026quot;batman\u0026quot;\r}\rThen we use it to call our ExampleTwoWorkerHandler\nwarning this is not an example on good php code\n\u0026lt;?php namespace App;\rclass ExampleTwoHandler {\rprotected $search_word;\rprotected $result;\rpublic function handle($payload)\r{\r$this-\u0026gt;search_word = $payload['search_word'];\r$this-\u0026gt;getImage();\rreturn $this-\u0026gt;popFirstResult();\r}\rprotected function getImage()\r{\r$url = 'http://ajax.googleapis.com/ajax/services/search/images?v=1.0\u0026amp;q=';\r$url .= urlencode(\u0026quot;site:www.thebrickfan.com \u0026quot; . $this-\u0026gt;search_word . \u0026quot; lego\u0026quot;);\r$curl = curl_init();\rcurl_setopt($curl, CURLOPT_URL, $url);\rcurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r$data = curl_exec($curl);\rcurl_close($curl);\r$result = json_decode($data, true);\r$this-\u0026gt;result = $result;\r}\rprotected function popFirstResult()\r{\r$max = count($this-\u0026gt;result['responseData']['results']);\rif($max == 0)\r{\rthrow new \\Exception(sprintf(\u0026quot;No image found :( for %s\u0026quot;, $this-\u0026gt;search_word));\r}\relse\r{\r$image = $this-\u0026gt;result['responseData']['results'][rand(0, $max - 1)]['url'];\rreturn file_get_contents($image);\r}\r}\r}\rI test locally\ndocker run --rm -v \u0026quot;$(pwd)\u0026quot;:/worker -w /worker iron/images:php-5.6 sh -c \u0026quot;php /worker/workers/ExampleTwoWorker.php -payload payload2.json\u0026quot; \u0026gt; output.png\rBut this time put the output into a file and we get\nMaking a custom binary Before I get this to iron lets make it more useful since I will lose that output.png file on the worker. Some workers we have would convert that into a base64 blob and send that back in a callback.\nOne enter into docker like I noted above\nTwo run apt-get update\nThen run apt-get install jp2a\nThen make a folder called /worker/builds/\nAnd in there follow these instructions http://jurjenbokma.com/ApprenticesNotes/getting_statlinked_binaries_on_debian.html replacing jp2a as needed.\nThen make a folder called /worker/bin and copy jp2a from /worker/builds/jp2a-1.0.6/src/jp2a to this bin folder.\nYou should be able to see that run now by ding /worker/bin/jp2a even run apt-get remove jp2a to show it works as a standalone library [3]\nLet\u0026rsquo;s adjust our code\n\u0026lt;?php\r/**\r* Created by PhpStorm.\r* User: alfrednutile\r* Date: 4/27/15\r* Time: 9:02 PM\r*/\rnamespace App;\ruse Illuminate\\Support\\Facades\\File;\rclass ExampleTwoHandler {\rprotected $search_word;\rprotected $result;\rpublic function handle($payload)\r{\r$this-\u0026gt;search_word = $payload['search_word'];\r$this-\u0026gt;getImage();\rreturn $this-\u0026gt;popFirstResult();\r}\rprotected function getImage()\r{\r$url = 'http://ajax.googleapis.com/ajax/services/search/images?v=1.0\u0026amp;q=';\r$url .= urlencode(\u0026quot;site:www.thebrickfan.com \u0026quot; . $this-\u0026gt;search_word . \u0026quot; lego\u0026quot;);\r$curl = curl_init();\rcurl_setopt($curl, CURLOPT_URL, $url);\rcurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r$data = curl_exec($curl);\rcurl_close($curl);\r$result = json_decode($data, true);\r$this-\u0026gt;result = $result;\r}\rprotected function popFirstResult()\r{\r$max = count($this-\u0026gt;result['responseData']['results']);\rif($max == 0)\r{\rthrow new \\Exception(sprintf(\u0026quot;No image found :( for %s\u0026quot;, $this-\u0026gt;search_word));\r}\relse\r{\r$image = $this-\u0026gt;result['responseData']['results'][rand(0, $max - 1)]['url'];\r$path_to_worker = base_path('bin/');\rexec(\u0026quot;chmod +x {$path_to_worker}/jp2a\u0026quot;);\rexec(\u0026quot;TERM=xterm {$path_to_worker}/bin/jp2a $image\u0026quot;, $output);\rreturn implode(\u0026quot;\\n\u0026quot;, $output);\r}\r}\r}\rrun locally and you might get some decent output or not :(\nMake and upload the worker Then I run sh ./make_worker_two.php\ntouch ExampleTwoWorker.zip\rrm ExampleTwoWorker.zip\rzip -r ExampleTwoWorker.zip . -x *.git*\riron worker upload --stack php-5.6 ExampleTwoWorker.zip php workers/ExampleTwoWorker.php\rAnd run and wait\niron worker queue --wait -payload-file payload2.json ExampleTwoWorker\rAnd if all goes well your console and the logs should show something like\nEntering your docker environment Easy\ndocker run -it -v \u0026quot;$(pwd)\u0026quot;:/worker -w /worker iron/images:php-5.6 /bin/bash\rNow you can test things in there, download packages etc.\nMVC Not sure if this really is correct but I tend to see the Worker file as my route file. The handler as the controller and other classes as needed, Service, Repository etc. This makes things more testable etc and better organize imo.\nConnecting the Queue to the Worker Coming soon\u0026hellip;\nNumerous Environments Waiting on bug report https://github.com/iron-io/docs/issues/467\nBut part of the process is to setup other projects at iron. For example if my worker is ExampleWorker then I would make ExampleWorker-dev. I would then switch to my git branch dev and do my changes. Once that is done I would make sure the token and key in my iron.json file matches that new project I made for dev and that is it.\nThe other way is slicker cause you do not need to change your iron.json each time but in the mean time this works fine.\nDeploy from Codeship Codeship will allow you to set custom deploy scripts or bash shells scrips basically.\nIn here I placed for the branch I wanted\ncurl -sSL -O https://github.com/iron-io/ironcli/releases/download/v0.0.6/ironcli_linux\rchmod +x ironcli_linux\rtouch iron.json\recho \u0026quot;{\u0026quot; \u0026gt;\u0026gt; iron.json\recho '\u0026quot;token\u0026quot;: \u0026quot;bar\u0026quot;,' \u0026gt;\u0026gt; iron.json\recho '\u0026quot;project_id\u0026quot;: \u0026quot;foo\u0026quot;' \u0026gt;\u0026gt; iron.json\recho \u0026quot;}\u0026quot; \u0026gt;\u0026gt; iron.json\rzip -r PDF2PagesWorker.zip .\r./ironcli_linux worker upload --stack php-5.6 PDF2PagesWorker.zip php workers/PDF2PagesWorker.php\rYou can easily then swap out the related project id and token for the environment you are uploading to eg development, staging etc.\nRepo https://github.com/alnutile/lumen_worker\nanother example Thumbnail Maker\n[1] These seems to be a part of the iron worker for version 1 but not sure why not for 2 maybe there is a better pattern for this.\n[2] I renamed it to ExampleOneLumen\n[3] So far this is a 50/50 solution it did not work for pdf2svg but it did work for pdftk\n","relPermalink":"/posts/143/","summary":"Lumen Iron Worker What and why A worker is a great way to run tasks as needed taking the load off your applications server and greatly speeding up the process of a task as you can run numerous workers at once.\nA lot of this comes from http://dev.iron.io/worker/beta/getting_started/ and http://dev.iron.io/worker/beta/cli/ and their examples\nTopics covered  Creating a Lumen Worker Creating a statically linked binary in the worker Testing the worker locally with Docker Entering your docker environment Design patterns  Install Lumen composer create-project laravel/lumen --prefer-dist\rAdd to composer.","tags":["laravel","php","iron","lumen"],"title":"Iron.io and Lumen"},{"content":"Below allows me to use this type of step in my tests\nScenario: Given I update a Domain get 200 Given I mock \u0026quot;App\\Sites\\Domain\u0026quot; with properties: \u0026quot;\u0026quot;\u0026quot;\rid: \u0026quot;mock-update-1\u0026quot;\rsite_id: \u0026quot;mock-site-1\u0026quot;\rdomain: \u0026quot;foo2.com\r\u0026quot;\u0026quot;\u0026quot;\rGiven I have the payload: \u0026quot;\u0026quot;\u0026quot;\r{\r\u0026quot;data\u0026quot;:\r{\r\u0026quot;id\u0026quot;: \u0026quot;mock-update-1\u0026quot;,\r\u0026quot;site_id\u0026quot;: \u0026quot;mock-site-1\u0026quot;,\r\u0026quot;domain\u0026quot;: \u0026quot;foo2.com\u0026quot;\r}\r}\r\u0026quot;\u0026quot;\u0026quot;\rThen I request \u0026quot;PUT /api/v1/sites/mock-site-1/domains/mock-update-1\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response Here is the code in my FeatureContext.php\n /**\r* @Given I mock :arg1 with properties:\r*/\rpublic function iMockWithProperties($model, PyStringNode $properties)\r{\rtry\r{\r$this-\u0026gt;setModel($model);\r$this-\u0026gt;makeFields($properties);\r$this-\u0026gt;removeMockIfExists();\r$this-\u0026gt;checkModelForTimeStamps();\r$this-\u0026gt;createMock();\r}\rcatch(\\Exception $e)\r{\r$this-\u0026gt;printDebug(sprintf(\u0026quot;Error making mock\u0026quot;, $e-\u0026gt;getMessage()));\r}\r} private function checkModelForTimeStamps()\r{\rif($this-\u0026gt;getModel()-\u0026gt;timestamps)\r{\r$dateTime = new DateTime('-3 day');\r$created_at = $dateTime-\u0026gt;format('Y-m-d H:i:s');\r$this-\u0026gt;fields['created_at'] = $created_at;\r$this-\u0026gt;fields['updated_at'] = $created_at;\r}\r}\rprotected function removeMockIfExists()\r{\rif(isset($this-\u0026gt;fields['id']) \u0026amp;\u0026amp; $results = $this-\u0026gt;getModel()-\u0026gt;find($this-\u0026gt;fields['id']))\r$results-\u0026gt;delete();\r}\rprotected function makeFields($properties)\r{\rforeach($properties-\u0026gt;getStrings() as $value)\r{\r$field = explode(\u0026quot;:\u0026quot;, $value);\r$this-\u0026gt;fields[trim($field[0])] = str_replace('\u0026quot;', '', trim($field[1]));\r} }\rpublic function createMock()\r{\r$this-\u0026gt;getModel()-\u0026gt;create($this-\u0026gt;fields);\r}\r/**\r* @return mixed\r*/\rpublic function getFields()\r{\rreturn $this-\u0026gt;fields;\r}\r/**\r* @param mixed $fields\r*/\rpublic function setFields($fields)\r{\r$this-\u0026gt;fields = $fields;\r}\r/**\r* @return mixed\r*/\rpublic function getModel()\r{\rreturn $this-\u0026gt;model;\r}\r/**\r* @param mixed $model\r*/\rpublic function setModel($model)\r{\r$this-\u0026gt;model = new $model;\r}\r","relPermalink":"/posts/142/","summary":"Below allows me to use this type of step in my tests\nScenario: Given I update a Domain get 200 Given I mock \u0026quot;App\\Sites\\Domain\u0026quot; with properties: \u0026quot;\u0026quot;\u0026quot;\rid: \u0026quot;mock-update-1\u0026quot;\rsite_id: \u0026quot;mock-site-1\u0026quot;\rdomain: \u0026quot;foo2.com\r\u0026quot;\u0026quot;\u0026quot;\rGiven I have the payload: \u0026quot;\u0026quot;\u0026quot;\r{\r\u0026quot;data\u0026quot;:\r{\r\u0026quot;id\u0026quot;: \u0026quot;mock-update-1\u0026quot;,\r\u0026quot;site_id\u0026quot;: \u0026quot;mock-site-1\u0026quot;,\r\u0026quot;domain\u0026quot;: \u0026quot;foo2.com\u0026quot;\r}\r}\r\u0026quot;\u0026quot;\u0026quot;\rThen I request \u0026quot;PUT /api/v1/sites/mock-site-1/domains/mock-update-1\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response Here is the code in my FeatureContext.php","tags":["laravel","php","behat"],"title":"Quick way to mock data for Behat in Laravel"},{"content":"This allows the user to easily make shortcuts to urls they are on and give them names.\nvideo\nThe Migration \u0026lt;?php\ruse Illuminate\\Database\\Migrations\\Migration;\ruse Illuminate\\Database\\Schema\\Blueprint;\rclass CreateShortcutsTable extends Migration {\r/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::create('shortcuts', function(Blueprint $table)\r{\r$table-\u0026gt;string('id', 36)-\u0026gt;primary();\r$table-\u0026gt;string('url');\r$table-\u0026gt;string('name');\r$table-\u0026gt;string('user_id', 36);\r$table-\u0026gt;timestamps();\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::drop('shortcuts');\r}\r}\rThe Model You will see me using scopes as I wanted to make a really simple POC\n\u0026lt;?php\r/**\r* Created by PhpStorm.\r* User: alfrednutile\r* Date: 3/28/15\r* Time: 8:28 PM\r*/\rnamespace BehatEditor\\Models;\ruse Illuminate\\Support\\Facades\\Auth;\ruse Illuminate\\Support\\Facades\\Log;\rclass Shortcut extends BaseModel {\rpublic $incrementing = false;\rpublic static $rulesCreate = [\r'name' =\u0026gt; 'required|min:3',\r'url' =\u0026gt; 'required'\r];\rprotected $fillable = [\r\u0026quot;id\u0026quot;,\r\u0026quot;url\u0026quot;,\r\u0026quot;name\u0026quot;,\r\u0026quot;user_id\u0026quot;\r];\rpublic function user()\r{\rreturn $this-\u0026gt;belongsTo('BehatEditor\\User');\r}\rpublic function scopeGetAllForCurrentUser($query)\r{\rreturn $query-\u0026gt;where('user_id', Auth::user()-\u0026gt;id)-\u0026gt;get();\r}\rpublic function scopeDeleteForUser($query, $shortcut_id)\r{\rtry\r{\rreturn ($results = $query-\u0026gt;where('id', $shortcut_id)-\u0026gt;where('user_id', Auth::user()-\u0026gt;id)-\u0026gt;first()) ? $results-\u0026gt;delete() : false;\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(sprintf(\u0026quot;Could not delete the shortcut %s\u0026quot;, $shortcut_id));\r}\r}\rpublic function scopeCreateForUser($query, $input)\r{\rtry\r{\r$uuid = $this-\u0026gt;generateNewId()-\u0026gt;toString();\r$this-\u0026gt;create(\r[\r'id' =\u0026gt; (isset($input['id'])) ? $input['id'] : $uuid,\r'url' =\u0026gt; $input['url'],\r'name' =\u0026gt; $input['name'],\r'user_id' =\u0026gt; Auth::user()-\u0026gt;id\r]\r);\rreturn $uuid;\r}\rcatch(\\Exception $e)\r{\r$this-\u0026gt;throw_and_log_error(sprintf(\u0026quot;Error making shortcut %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\r}\rThe Controller Typically this is a no no too much logic in the controller.\n\u0026lt;?php\r/**\r* Created by PhpStorm.\r* User: alfrednutile\r* Date: 3/28/15\r* Time: 8:45 PM\r*/\rnamespace BehatEditor\\Http\\Controllers;\ruse AlfredNutileInc\\CoreApp\\BaseController;\ruse BehatEditor\\Models\\Shortcut;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Facades\\Response;\ruse Illuminate\\Support\\Facades\\Validator;\rclass ShortcutsController extends BaseController {\rpublic function getUserShortCuts()\r{\rtry\r{\r$results['shortcuts'] = Shortcut::getAllForCurrentUser();\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Loaded Shortcuts\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Getting Shortcuts Failed %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\rpublic function deleteUserShortCut($shortcut_id)\r{\rtry\r{\r$results = Shortcut::deleteForUser($shortcut_id);\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Deleted Shortcut\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Getting Shortcuts Failed %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\rpublic function postShortcut()\r{\rtry\r{\r$input = $this-\u0026gt;getInput();\r$validator = Validator::make($input, Shortcut::$rulesCreate);\rif(!$validator-\u0026gt;passes()) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($validator-\u0026gt;messages(), \u0026quot;Validation failed\u0026quot;), 422);\r}\r}\rcatch(\\Exception $e)\r{\rLog::debug(sprintf(\u0026quot;Error making shortcut during validaiton %s\u0026quot;, $e-\u0026gt;getMessage()));\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond([], \u0026quot;Creation Error\u0026quot;), 500);\r}\rtry\r{\r$results = Shortcut::createForUser($input);\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Created Shortcut\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Getting Shortcuts Failed %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\r}\rThen for the nav area\n\u0026lt;li class=\u0026quot;shortcut-form\u0026quot;\u0026gt;\r\u0026lt;form class=\u0026quot;navbar-form navbar-left\u0026quot; role=\u0026quot;shortcuts\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;input-group\u0026quot;\u0026gt;\r\u0026lt;input\rplaceholder=\u0026quot;shortcut name\u0026quot;\rtype=\u0026quot;text\u0026quot;\rclass=\u0026quot;form-control input-sm\u0026quot;\rng-model=\u0026quot;main.shortcut_new.name\u0026quot;\u0026gt;\r\u0026lt;span class=\u0026quot;input-group-btn\u0026quot;\u0026gt;\r\u0026lt;button\rng-disabled=\u0026quot;!main.shortcut_new.name\u0026quot;\rtype=\u0026quot;button\u0026quot;\rclass=\u0026quot;btn btn-default\u0026quot;\rng-click=\u0026quot;main.addShortCut()\u0026quot;\u0026gt;\r\u0026lt;i class=\u0026quot;fa fa-plus-circle\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\r\u0026lt;/button\u0026gt;\r\u0026lt;/span\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026quot;dropdown\u0026quot;\u0026gt;\r\u0026lt;a class=\u0026quot;dropdown-toggle\u0026quot; href=\u0026quot;#\u0026quot;\u0026gt;\r\u0026lt;i class=\u0026quot;fa fa-thumb-tack\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;¬†Your Shortcuts\u0026lt;span class=\u0026quot;caret\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\r\u0026lt;/a\u0026gt;\r\u0026lt;ul class=\u0026quot;dropdown-menu dropdown-messages\u0026quot;\u0026gt;\r\u0026lt;li\u0026gt;\r\u0026lt;input\rclass=\u0026quot;form-control\u0026quot;\rtype=\u0026quot;text\u0026quot;\rautofocus=\u0026quot;{{ form_focus == 'nav' }}\u0026quot;\rplaceholder=\u0026quot;Click Tab to enter mouse into input and search\u0026quot;\rdata-ng-model=\u0026quot;search_shortcuts\u0026quot;\r\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026quot;divider\u0026quot;\u0026gt;\u0026lt;/li\u0026gt;\r\u0026lt;li ng-repeat=\u0026quot;shortcut in main.shortcuts | filter:search_shortcuts\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;dropdown-messages-box\u0026quot;\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;span ng-bind-html=\u0026quot;shortcut.shortcut\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\r\u0026lt;a class=\u0026quot;pull-right\u0026quot; href=\u0026quot;#\u0026quot; ng-click=\u0026quot;main.deleteShortcut(shortcut.id)\u0026quot;\u0026gt;\r\u0026lt;i class=\u0026quot;fa fa-trash\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\r\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;divider\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/li\u0026gt;\rThe Angular We have a MainController for initial app setup then after that ui-router has controllers.\nAlso you can get the shortcuts via a http request on page load. I just inject the initial load into the blade render. But either is fine really.\n# controller.js\rfunction addShortCut()\r{\rvm.shortcut_new.url = $location.url();\rvm.ShortcutsService.create(vm.shortcut_new, vm.callbackCreateShortcutSuccess, vm.callbackShortcutError);\r}\rfunction loadShortcuts()\r{\rvm.shortcuts = [];\rangular.forEach(vm.ENV.shortcuts, function(v,i){\rvar link = vm.makeLink(v);\rvm.shortcuts.push( { \u0026quot;id\u0026quot;: v.id, \u0026quot;shortcut\u0026quot;: link } );\r});\r}\rfunction deleteShortcut(id)\r{\rvm.shortcut_to_delete = id;\rvm.ShortcutsService.deleteShortcut(id, vm.callbackShortcutSuccess, vm.callbackShortcutError);\r}\rfunction callbackShortcutSuccess(response)\r{\rvm._.remove(vm.shortcuts, function(s) {\rreturn s.id == vm.shortcut_to_delete;\r});\rvm.toaster.pop(\u0026quot;success\u0026quot;, \u0026quot;Success updating shortcut\u0026quot;);\r}\rfunction callbackCreateShortcutSuccess(response)\r{\rvm.shortcut_new.id = response.data;\rvar link = vm.makeLink(vm.shortcut_new);\rvm.shortcuts.push( { \u0026quot;id\u0026quot;: vm.shortcut_new.id, \u0026quot;shortcut\u0026quot;: link } );\rvm.shortcut_new = {};\rvm.toaster.pop('info', \u0026quot;Success creating shortcut\u0026quot;);\r}\rfunction makeLink(shortcut)\r{\rreturn \u0026quot;\u0026lt;a href='/behat#\u0026quot; + shortcut.url + \u0026quot;'\u0026gt;\u0026quot; + shortcut.name + \u0026quot;\u0026lt;/a\u0026gt;\u0026quot;;\r}\rfunction callbackShortcutError(response)\r{\rvm.toaster.pop(\u0026quot;error\u0026quot;, \u0026quot;Error updating your shortcut\u0026quot;);\r}\rThe Behat API Tests @api\rFeature: Shortcuts\rShortcuts for quick access\rAs an authenticated user\rSo I can make and use shortcuts to get from place to place\rBackground: Login\rGiven I do basic auth on behat\rScenario: Get My Shortcuts\rWhen I request \u0026quot;GET /api/v1/shortcuts\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\rAnd scope into the \u0026quot;data.shortcuts.0\u0026quot; property\rAnd the properties exist:\r\u0026quot;\u0026quot;\u0026quot;\rurl\ruser_id\r\u0026quot;\u0026quot;\u0026quot;\rScenario: Delete My Shortcuts\rWhen I request \u0026quot;DELETE /api/v1/shortcuts/mock-shortcut-5\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\rScenario: Can Create a Shortcut\rGiven I reseed the database\rGiven I have the payload:\r\u0026quot;\u0026quot;\u0026quot;\r{ \u0026quot;data\u0026quot;:\r{\r\u0026quot;name\u0026quot;: \u0026quot;New ShortCut\u0026quot;,\r\u0026quot;url\u0026quot;: \u0026quot;/dashboard\u0026quot;\r}\r}\r\u0026quot;\u0026quot;\u0026quot;\rWhen I request \u0026quot;POST /api/v1/shortcuts\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\r","relPermalink":"/posts/141/","summary":"This allows the user to easily make shortcuts to urls they are on and give them names.\nvideo\nThe Migration \u0026lt;?php\ruse Illuminate\\Database\\Migrations\\Migration;\ruse Illuminate\\Database\\Schema\\Blueprint;\rclass CreateShortcutsTable extends Migration {\r/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::create('shortcuts', function(Blueprint $table)\r{\r$table-\u0026gt;string('id', 36)-\u0026gt;primary();\r$table-\u0026gt;string('url');\r$table-\u0026gt;string('name');\r$table-\u0026gt;string('user_id', 36);\r$table-\u0026gt;timestamps();\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::drop('shortcuts');\r}\r}\rThe Model You will see me using scopes as I wanted to make a really simple POC","tags":["angular","laravel"],"title":"Code for making a Shortcut tool for your App"},{"content":"UPDATED April 01 2015\nRealized I needed more \u0026ldquo;tokens\u0026rdquo; and I was already using my .env file for info for Seeding and for our different servers. So the Trait now pulls those in.\nThis is a simple trait to use in your FeatureContext file to then get the power of Faker in your Behat tests\nThe Trait \u0026lt;?php\rtrait TokenFaker {\rpublic function checkForTokens($arg)\r{\r$arg = str_replace($this-\u0026gt;replaceAbleTokens(), $this-\u0026gt;loadTokensValues(), $arg);\rreturn $arg;\r}\rprotected function replaceAbleTokens()\r{\rreturn array_merge($this-\u0026gt;getManualTokensKeys(), $this-\u0026gt;getEnvTokensKeys());\r}\rprotected function getManualTokensKeys()\r{\rreturn [\r'TOKEN_EMAIL',\r'TOKEN_UUID',\r'TOKEN_USERNAME',\r'TOKEN_URL'];\r}\rprotected function loadTokensValues()\r{\rreturn array_merge($this-\u0026gt;getManualTokenValues(), $this-\u0026gt;getEnvTokensValues());\r}\rprotected function getManualTokenValues()\r{\rreturn [\r$this-\u0026gt;faker-\u0026gt;email,\r$this-\u0026gt;faker-\u0026gt;uuid,\r$this-\u0026gt;faker-\u0026gt;word,\r$this-\u0026gt;faker-\u0026gt;url\r];\r}\rprotected function getEnvTokensValues()\r{\rreturn array_values($_ENV);\r}\rprotected function getEnvTokensKeys()\r{\rreturn array_keys($_ENV);\r}\r}\rThe Feature Context In my Feature Context I setup Faker and instantiate it and use the trait\n\u0026lt;?php\ruse Faker\\Factory as Faker;\rclass BaseContext extends MinkContext {\ruse TokenFaker;\rpublic function __construct($parameters = [])\r{\r$this-\u0026gt;faker = Faker::create();\r}\rThe Step Here is one example but you could pass all your args through this\n /**\r* @Given /^I have the payload:$/\r*/\rpublic function iHaveThePayload(PyStringNode $requestPayload)\r{\r$this-\u0026gt;requestPayload = $this-\u0026gt;checkForTokens($requestPayload);\r}\rAnd The Scenario  Scenario: Can Create a Person\rGiven I have the payload:\r\u0026quot;\u0026quot;\u0026quot;\r{ \u0026quot;data\u0026quot;:\r{\r\u0026quot;email\u0026quot;: \u0026quot;TOKEN_EMAIL\u0026quot;,\r\u0026quot;roles\u0026quot;: [\r{ \u0026quot;id\u0026quot;: \u0026quot;role-manager\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;Manager\u0026quot; }\r]\r}\r}\r\u0026quot;\u0026quot;\u0026quot;\rScenario: How do I get a token\rGiven I have the payload:\r\u0026quot;\u0026quot;\u0026quot;\r{\r\u0026quot;password\u0026quot;: \u0026quot;ADMIN_PASS\u0026quot;,\r\u0026quot;grant_type\u0026quot;: \u0026quot;password\u0026quot;,\r\u0026quot;client_id\u0026quot;: \u0026quot;CLIENT_ID\u0026quot;,\r\u0026quot;client_secret\u0026quot;: \u0026quot;CLIENT_SECRET\u0026quot;,\r\u0026quot;username\u0026quot;: \u0026quot;ADMIN_USERNAME\u0026quot;\r}\r\u0026quot;\u0026quot;\u0026quot;\rAnd I request \u0026quot;POST /oauth/access_token\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\rI would like to also save the state of the token made so I can check that the update/post really worked etc. But for now this makes it super easy to not reseed with every step and not worry about duplicate ids.\n","relPermalink":"/posts/140/","summary":"UPDATED April 01 2015\nRealized I needed more \u0026ldquo;tokens\u0026rdquo; and I was already using my .env file for info for Seeding and for our different servers. So the Trait now pulls those in.\nThis is a simple trait to use in your FeatureContext file to then get the power of Faker in your Behat tests\nThe Trait \u0026lt;?php\rtrait TokenFaker {\rpublic function checkForTokens($arg)\r{\r$arg = str_replace($this-\u0026gt;replaceAbleTokens(), $this-\u0026gt;loadTokensValues(), $arg);\rreturn $arg;\r}\rprotected function replaceAbleTokens()\r{\rreturn array_merge($this-\u0026gt;getManualTokensKeys(), $this-\u0026gt;getEnvTokensKeys());\r}\rprotected function getManualTokensKeys()\r{\rreturn [\r'TOKEN_EMAIL',\r'TOKEN_UUID',\r'TOKEN_USERNAME',\r'TOKEN_URL'];\r}\rprotected function loadTokensValues()\r{\rreturn array_merge($this-\u0026gt;getManualTokenValues(), $this-\u0026gt;getEnvTokensValues());\r}\rprotected function getManualTokenValues()\r{\rreturn [\r$this-\u0026gt;faker-\u0026gt;email,\r$this-\u0026gt;faker-\u0026gt;uuid,\r$this-\u0026gt;faker-\u0026gt;word,\r$this-\u0026gt;faker-\u0026gt;url\r];\r}\rprotected function getEnvTokensValues()\r{\rreturn array_values($_ENV);\r}\rprotected function getEnvTokensKeys()\r{\rreturn array_keys($_ENV);\r}\r}\rThe Feature Context In my Feature Context I setup Faker and instantiate it and use the trait","tags":["behat","bdd"],"title":"Using Faker and ENV vars with Behat"},{"content":"A sprint starts and you feel unsure or overly sure of being able to complete all the work in that sprint. And depending on that you crank at the start working long hours in stress of not getting done in time or not enough focus (too much twitter) thinking you have it under control only to stress at the end of the sprint! It would be as if I started out for a jog not knowing how long the route was in a full sprint. I need to pace myself to do it well.\nThis chart has helped me a ton to not only help pace myself but to simplify what I track. Joel Wenzel has a post that covers the using his spreadsheet to do a simple burndown. He points out in the post that you just need to focus on marking tasks Complete and not trying to track how complete, or how long did it really take.\nHis post makes it super clear and I added this video as well.\n\n","relPermalink":"/posts/139/","summary":"A sprint starts and you feel unsure or overly sure of being able to complete all the work in that sprint. And depending on that you crank at the start working long hours in stress of not getting done in time or not enough focus (too much twitter) thinking you have it under control only to stress at the end of the sprint! It would be as if I started out for a jog not knowing how long the route was in a full sprint.","tags":["freelance","developer"],"title":"Using a BurnDown Chart to Pace Yourself "},{"content":"Using PhantomJS both with Selenium and in replace of Selenium With Selenium Here is my example behat profile for this one\nphantom_via_selenium:\rpaths:\rfeatures: app/tests/acceptance/features/ui\rbootstrap: app/tests/acceptance/contexts\rcontext:\rparameters:\rbase_url: https://behat.dev:443\rasset_path: '/tmp/'\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte:\rguzzle_parameters:\rcurl.options:\rCURLOPT_SSL_VERIFYPEER: false\rCURLOPT_CERTINFO: false\rCURLOPT_TIMEOUT: 120\rssl.certificate_authority: false\rselenium2:\rwd_host: \u0026quot;http://selenium-server.dev:4444/wd/hub\u0026quot;\rcapabilities:\rbrowser: phantomjs\rbase_url: 'https://behat.dev:443'\rbrowser_name: 'phantomjs'\rAnd as usual you start up selenium.\nIn both cases the test is this one\n@javascript @thisone\rFeature: Testing\rScenario: Testing Wiki\rGiven I am on \u0026quot;http://en.wikipedia.org/wiki/Main_Page\u0026quot;\rThen I should see \u0026quot;Wiki\u0026quot;\rAnd I take a screenshot\rThis allows me to take screenshots as well screenshot which is super handy.\nAlso note http://selenium-server.dev:4444/wd/hub works because in my /etc/hosts file I set 127.0.0.1 to be that domain. You could easily do http://127.0.0.1:4444/wd/hub\nWithout Selenium This one will now run via phantom as the \u0026ldquo;selenium\u0026rdquo; server\nphantom_ui:\rpaths:\rfeatures: app/tests/acceptance/features/ui\rbootstrap: app/tests/acceptance/contexts\rcontext:\rparameters:\rbase_url: https://behat.dev:443\rasset_path: '/tmp/'\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte:\rguzzle_parameters:\rcurl.options:\rCURLOPT_SSL_VERIFYPEER: false\rCURLOPT_CERTINFO: false\rCURLOPT_TIMEOUT: 120\rssl.certificate_authority: false\rselenium2:\rwd_host: \u0026quot;http://localhost:8643/wd/hub\u0026quot;\rcapabilities:\rbrowser: phantomjs\rbase_url: 'https://behat.dev:443'\rbrowser_name: 'phantomjs'\rThis is really thanks to http://shashikantjagtap.net\nRunning phantom in the background as phantomjs --webdriver=8643\nComing up Self Signed SSL Render Tree dumps of the site for later parsing ","relPermalink":"/posts/138/","summary":"Using PhantomJS both with Selenium and in replace of Selenium With Selenium Here is my example behat profile for this one\nphantom_via_selenium:\rpaths:\rfeatures: app/tests/acceptance/features/ui\rbootstrap: app/tests/acceptance/contexts\rcontext:\rparameters:\rbase_url: https://behat.dev:443\rasset_path: '/tmp/'\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte:\rguzzle_parameters:\rcurl.options:\rCURLOPT_SSL_VERIFYPEER: false\rCURLOPT_CERTINFO: false\rCURLOPT_TIMEOUT: 120\rssl.certificate_authority: false\rselenium2:\rwd_host: \u0026quot;http://selenium-server.dev:4444/wd/hub\u0026quot;\rcapabilities:\rbrowser: phantomjs\rbase_url: 'https://behat.dev:443'\rbrowser_name: 'phantomjs'\rAnd as usual you start up selenium.\nIn both cases the test is this one","tags":["behat","phantom"],"title":"Behat and PhantomJs"},{"content":"This started to happen on Codeship and local for me and other developers. Though one developer had a higher setting for max nesting as noted here I wanted to not worry about this so I just locked down Symfony and Behat in our composer.json file\n\t\u0026quot;require-dev\u0026quot;: {\r\u0026quot;symfony/dependency-injection\u0026quot;: \u0026quot;2.7.x-dev#9fcd589dfb67697f1e3e34611b97eb1be2cd85be\u0026quot;,\r\u0026quot;php-vcr/php-vcr\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;phpunit/phpunit\u0026quot;: \u0026quot;~4.0\u0026quot;,\r\u0026quot;phpspec/phpspec\u0026quot;: \u0026quot;~2.1\u0026quot;,\r\u0026quot;php-vcr/phpunit-testlistener-vcr\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;mockery/mockery\u0026quot;: \u0026quot;*@dev\u0026quot;,\r\u0026quot;fzaninotto/faker\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;guzzlehttp/guzzle\u0026quot;: \u0026quot;4.*\u0026quot;,\r\u0026quot;pda/pheanstalk\u0026quot;: \u0026quot;~3.0\u0026quot;,\r\u0026quot;knplabs/github-api\u0026quot;: \u0026quot;1.2.1\u0026quot;,\r\u0026quot;way/generators\u0026quot;: \u0026quot;~3.0\u0026quot;,\r\u0026quot;symfony/Yaml\u0026quot;:\u0026quot;2.1.x-dev\u0026quot;,\r\u0026quot;behat/behat\u0026quot;: \u0026quot;dev-master#ec1e3890d3753908695483ca1f3cf7304c02251f\u0026quot;,\r\u0026quot;behat/mink\u0026quot;: \u0026quot;dev-master#30014f0a15579176b7fca879cb461aad900f4db5\u0026quot;,\r\u0026quot;behat/mink-extension\u0026quot;: \u0026quot;dev-master#ba5329be65a816adfc2d9ba9b639a92f548371da\u0026quot;,\r\u0026quot;laracasts/behat-laravel-extension\u0026quot;: \u0026quot;dev-master#205a3d217d33d4315d20d0f3497edd65a8b5443e\u0026quot;\r},\rAnd then\nrm -rf vendor composer.lock \u0026amp;\u0026amp; composer install\rAnd bin/behat -dl and other behat tests worked again\n","relPermalink":"/posts/137/","summary":"This started to happen on Codeship and local for me and other developers. Though one developer had a higher setting for max nesting as noted here I wanted to not worry about this so I just locked down Symfony and Behat in our composer.json file\n\t\u0026quot;require-dev\u0026quot;: {\r\u0026quot;symfony/dependency-injection\u0026quot;: \u0026quot;2.7.x-dev#9fcd589dfb67697f1e3e34611b97eb1be2cd85be\u0026quot;,\r\u0026quot;php-vcr/php-vcr\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;phpunit/phpunit\u0026quot;: \u0026quot;~4.0\u0026quot;,\r\u0026quot;phpspec/phpspec\u0026quot;: \u0026quot;~2.1\u0026quot;,\r\u0026quot;php-vcr/phpunit-testlistener-vcr\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;mockery/mockery\u0026quot;: \u0026quot;*@dev\u0026quot;,\r\u0026quot;fzaninotto/faker\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;guzzlehttp/guzzle\u0026quot;: \u0026quot;4.*\u0026quot;,\r\u0026quot;pda/pheanstalk\u0026quot;: \u0026quot;~3.0\u0026quot;,\r\u0026quot;knplabs/github-api\u0026quot;: \u0026quot;1.2.1\u0026quot;,\r\u0026quot;way/generators\u0026quot;: \u0026quot;~3.0\u0026quot;,\r\u0026quot;symfony/Yaml\u0026quot;:\u0026quot;2.","tags":["behat","laravel"],"title":"PHP Error: Maximum function nesting level of '100' reached, aborting Behat"},{"content":"We are starting to use Iron.io and their workers for a lot of the tasks that our apps need to do. For example one app needs to scan websites for images and text and report on them. In our case that is 2 workers, one with the code needed to get the text we want and the other images. Another worker runs behat tests to take screenshots and reports back to the called with the results.\nUsing Iron.io has made this whole process easy and scalable. One request can be for say 100 urls and with Iron.io we can run one worker per url or using the Symfony Process library we can even use a worker to run a multi-threaded processes.\nSome of the resources out there like iron`s example are great. And using this library has made it super easy. Below I cover how exactly to set this up. (hopefully this week we will have a Laravel 5 version of it out)\nStep 1 Install Install 4.2 work. (5 might be ready soon)\ncomposer create-project laravel/laravel=4.2 example_worker --prefer-dist\rSet your minimum stability in your composer.json\n\t},\r\u0026quot;config\u0026quot;: {\r\u0026quot;preferred-install\u0026quot;: \u0026quot;dist\u0026quot;\r},\r\u0026quot;minimum-stability\u0026quot;: \u0026quot;dev\u0026quot;\r}\rThen pull in the library\ncomposer require iron-io/laraworker\rAnd add this one patch for PHP 5.6 TODO add code snippet\nhttps://github.com/iron-io/laraworker/issues/5\nand\nhttps://github.com/iron-io/iron_core_php/blob/master/src/IronCore.php#L269\nAnd of course as the readme.md notes for Laraworker\nphp vendor/iron-io/laraworker/LaraWorker.php -i true\rAs the developer notes this makes a new folder and file\n/worker/libs/worker_boot.php and /worker/ExampleLaraWorker.php\nStep 2 Configure We will use the .env to do configuration not the way noted in the laraworker docs so lets install that. Just use this post to set that up.\nSo after you are done your, as in the Laraworker docs, we need to set the queue config.\n Set Iron.io credentials in app/config/queue.php and set default to iron \u0026ndash;\u0026gt; \u0026lsquo;default\u0026rsquo; =\u0026gt; \u0026lsquo;iron\u0026rsquo;,\n So yours will look like\n# https://github.com/alnutile/laravel_guide/blob/master/projects/example_worker/app/config/queue.php\r'default' =\u0026gt; getenv('QUEUE_DRIVER'),\r'connections' =\u0026gt; array(\r'iron' =\u0026gt; array(\r'driver' =\u0026gt; 'iron',\r'host' =\u0026gt; 'mq-aws-us-east-1.iron.io',\r'token' =\u0026gt; getenv('IRON_TOKEN'),\r'project' =\u0026gt; getenv('IRON_PROJECT_ID'),\r'queue' =\u0026gt; 'your-queue-name',\r'encrypt' =\u0026gt; true,\r),\r),\rThen make your project on Iron and get the Token and Project ID\nStep 3 See if Example Worker works Lets see if the Example works before we move forward.\nphp artisan ironworker:upload --worker_name=ExampleLaraWorker --exec_worker_file_name=ExampleLaraWorker.php\rIf it worked you will see\nThis will upload a worker related queue\nStep 4 Make our own worker! The goal of this worker\n It will get a JSON object of the info needed to do a job It will do the job by getting the json file from the S3 file system where it lives (it could live in a db or other location) Using the JSON object\u0026rsquo;s callback it will send back the results to the caller  That is it.\nThis example will be used in real life to later on parse say 100 urls for already created json render tree objects of the urls data including images and text. This job only cares about the text. Cause the job is fairly easy I will be sending to each worker 5 urls to process.\nCopy the worker in /workers folder to the new Worker name Due to bad naming abilities I am calling this RenderTreeTextGrepper.php\nSo now my worker folder has\nRenderTreeTextGrepper.php\rBut I do not want that class to have all my code so I will start to build out a namespace for all of this and the 2 classes I want to manage ALL of this work.\nClass 1 @fire So the worker will fire the class I have to handle all of this.\n\t\u0026quot;autoload\u0026quot;: {\r\u0026quot;classmap\u0026quot;: [\r\u0026quot;app/commands\u0026quot;,\r\u0026quot;app/controllers\u0026quot;,\r\u0026quot;app/models\u0026quot;,\r\u0026quot;app/database/migrations\u0026quot;,\r\u0026quot;app/database/seeds\u0026quot;,\r\u0026quot;app/tests/TestCase.php\u0026quot;\r],\r\u0026quot;psr-4\u0026quot;: {\r\u0026quot;AlfredNutileInc\\\\RenderTreeTextGrepperWorker\\\\\u0026quot;: \u0026quot;app/\u0026quot;\r}\r},\rthen\ncomposer dump\rThen in app/RenderTreeTextGrepperWorker folder I have\n/projects/example_worker/app/RenderTreeTextGrepperWorker/RenderTreeGrepperHandler.php is the class to handle the incoming request and process it.\nClass 2 Event Listener Then I register the event listener with the app/config/app.php to make it easier to handle the results of the output. You can do all of this in class 1 as well.\n#app/config/app.php\r'AlfredNutileInc\\RenderTreeTextGrepperWorker\\GrepCallbackListener'\rAnd that is it.\nWhat is it?\nSo we are going to upload and run this and here is what will happen. NO WAIT!\nFirst lets make a test so we can see locally if all the logic is there.\nLocal Test Just a quick test to see if the handler will handle things and pass results\n\u0026lt;?php\rclass RenderTreeTextTest extends \\TestCase {\r/**\r* @test\r*/\rpublic function should_populate_results()\r{\r$handle = new \\AlfredNutileInc\\RenderTreeTextGrepperWorker\\RenderTreeGrepperHandler();\r$payload = new \\AlfredNutileInc\\RenderTreeTextGrepperWorker\\RenderTreeTextDTO(\r'foo-bar',\r['foo', 'bar', 'baz'],\r['text1', 'text2'],\r[\r'caller' =\u0026gt; 'http://someposturl.dev/rendertree_results',\r'params' =\u0026gt; ['foo', 'bar']\r],\rfalse,\rfalse\r);\r$results = $handle-\u0026gt;handle($payload);\rvar_dump($results);\r$this-\u0026gt;assertNotNull($results);\r}\r}\rRunning this\nphpunit --filter=should_populate_results\rProduces this\n class AlfredNutileInc\\RenderTreeTextGrepperWorker\\RenderTreeTextDTO#334 (6) {\rpublic $uuid =\u0026gt;\rstring(7) \u0026quot;foo-bar\u0026quot;\rpublic $urls =\u0026gt;\rarray(3) {\r[0] =\u0026gt;\rstring(3) \u0026quot;foo\u0026quot;\r[1] =\u0026gt;\rstring(3) \u0026quot;bar\u0026quot;\r[2] =\u0026gt;\rstring(3) \u0026quot;baz\u0026quot;\r}\rpublic $text =\u0026gt;\rarray(2) {\r[0] =\u0026gt;\rstring(5) \u0026quot;text1\u0026quot;\r[1] =\u0026gt;\rstring(5) \u0026quot;text2\u0026quot;\r}\rpublic $callback =\u0026gt;\rarray(2) {\r'caller' =\u0026gt;\rstring(41) \u0026quot;http://someposturl.dev/rendertree_results\u0026quot;\r'params' =\u0026gt;\rarray(2) {\r...\r}\r}\rpublic $results =\u0026gt;\rarray(1) {\r[0] =\u0026gt;\rstring(21) \u0026quot;Listener is listening\u0026quot;\r}\rpublic $status =\u0026gt;\rbool(false)\r}\r}\rOf course I need to go into more testing for the two classes to see how they react to different data going in but just to see that there are not obvious issues before I upload the worker.\nUpload the worker we just made php artisan ironworker:upload --worker_name=RenderTreeTextGrepper --exec_worker_file_name=RenderTreeTextGrepper.php\rAnd then we see on Iron.io\nThen we run it\nphp artisan ironworker:run --queue_name=RenderTreeTextGrepper\rBefore that though I updated app/commands/RunWorker.php:26 to make a better payload\n public function fire()\r{\r$queue_name = $this-\u0026gt;option('queue_name');\r$payload = \u0026quot;This is Hello World payload :)\u0026quot;;\rif($queue_name == 'RenderTreeTextGrepper')\r{\r$payload = new \\AlfredNutileInc\\RenderTreeTextGrepperWorker\\RenderTreeTextDTO(\r'foo-bar',\r['foo', 'bar', 'baz'],\r['text1', 'text2'],\r[\r'caller' =\u0026gt; 'http://someposturl.dev/rendertree_results',\r'params' =\u0026gt; ['foo', 'bar']\r],\rfalse,\rfalse\r);\r}\rWe then see the Task\nAnd the example log output\nGuzzle and the Callback How to format the callback?\nLet\u0026rsquo;s require guzzle\ncomposer require guzzlehttp/guzzle\rAt this point we have a working example. The queue takes the json and the worker processes it!\n/projects/example_worker/app/RenderTreeTextGrepperWorker/GrepCallbackListener.php\nThanks to the library and Iron.io it really is that simple.\n","relPermalink":"/posts/136/","summary":"We are starting to use Iron.io and their workers for a lot of the tasks that our apps need to do. For example one app needs to scan websites for images and text and report on them. In our case that is 2 workers, one with the code needed to get the text we want and the other images. Another worker runs behat tests to take screenshots and reports back to the called with the results.","tags":["microservices","laravel","iron.io"],"title":"Iron.io Laravel and Workers, Microservices"},{"content":"http://wordpress.stackexchange.com/questions/106445/multisite-redirect-loop-for-a-single-www-domain\nBasically the site went from foo-prod.stagingarea.us to wearelive.com but since it was an internal app I wanted to make sure the old url still worked and redirected as needed to the new url\nserver {\rlisten 80;\rserver_name foo-prod.stagingarea.us;\rreturn 301 https://$host$request_uri;\r}\rserver {\rlisten 443;\rserver_name foo-prod.stagingarea.us;\rif ($host ~* ^foo-prod.stagingarea.us) {\rrewrite ^(.*)$ https://wearelive.com$1 permanent;\r}\rInteresting note is server_name does not contain the primary name wearlive.com\n","relPermalink":"/posts/135/","summary":"http://wordpress.stackexchange.com/questions/106445/multisite-redirect-loop-for-a-single-www-domain\nBasically the site went from foo-prod.stagingarea.us to wearelive.com but since it was an internal app I wanted to make sure the old url still worked and redirected as needed to the new url\nserver {\rlisten 80;\rserver_name foo-prod.stagingarea.us;\rreturn 301 https://$host$request_uri;\r}\rserver {\rlisten 443;\rserver_name foo-prod.stagingarea.us;\rif ($host ~* ^foo-prod.stagingarea.us) {\rrewrite ^(.*)$ https://wearelive.com$1 permanent;\r}\rInteresting note is server_name does not contain the primary name wearlive.","tags":["note2self"],"title":"Multi Domain Nginx Redirect"},{"content":"This might not be ideal but so far it allows me to more easily sort dates and filter dates in Angular.\nFrom the Laravel model I add these two methods\n\r/**\r* See docs http://laravel.com/docs/5.0/eloquent#date-mutators\r*/\rpublic function getDates()\r{\rreturn array('created_at');\r}\rpublic function getCreatedAtAttribute($attr) {\rreturn Carbon::parse($attr)-\u0026gt;timestamp; //Change the format to whichever you desire\r}\rThen in Angular I can use the filters\n{{ vm.created_at | date:'medium'}}\r","relPermalink":"/posts/134/","summary":"This might not be ideal but so far it allows me to more easily sort dates and filter dates in Angular.\nFrom the Laravel model I add these two methods\n\r/**\r* See docs http://laravel.com/docs/5.0/eloquent#date-mutators\r*/\rpublic function getDates()\r{\rreturn array('created_at');\r}\rpublic function getCreatedAtAttribute($attr) {\rreturn Carbon::parse($attr)-\u0026gt;timestamp; //Change the format to whichever you desire\r}\rThen in Angular I can use the filters\n{{ vm.created_at | date:'medium'}}\r","tags":["laravel","angular"],"title":"Sending Dates to Angular from Laravel"},{"content":"This is all based around this library https://github.com/lucadegasperi/oauth2-server-laravel\nI am building and API to be used by an iOs and Android client I will be making soon. But I also needed the filter system to deal with my local Laravel view that was using the api via an Angular driven widget so the user can go to the website as well.\nSo the website is where the user can go to do change settings, subscription updates etc, but in that case they are logged in via the Laravel login form. From there they land on the profile page where the Angular widget will do n xhr request to the api to fill in the table/settings.\nThe routes ends up looking like this\n\rRoute::filter('setUser', function()\r{\rif(Auth::guest())\r{\r$user_id = Authorizer::getResourceOwnerId();\rAuth::loginUsingId($user_id);\r}\r});\r//The view they see using Laravel Blade and an embedded angular widget\rRoute::get('profile', ['middleware' =\u0026gt; 'auth', 'uses' =\u0026gt; 'ProfileController@getProfile']);\r//The API\rRoute::group(['prefix' =\u0026gt; 'api/v1', 'before' =\u0026gt; 'oauth|setUser|auth'], function() {\rRoute::get('profile', 'ProfileController@getApiProfile');\r});\rThe thing is the Oauth2 filter was causing some issues\n1 Looks for a access_token query string or header 2 Does not load the user like I need\nThe first issue I just made a class to extend the core filter for the Oauth2 library.\nMy provider \u0026lt;?php namespace App\\Providers;\ruse App\\Filters\\OauthTotalRecalls;\ruse Illuminate\\Support\\ServiceProvider;\rclass OauthFilterProvider extends ServiceProvider {\rpublic function boot()\r{\r$this-\u0026gt;app-\u0026gt;bindShared('LucaDegasperi\\OAuth2Server\\Filters\\OAuthFilter', function ($app) {\r$httpHeadersOnly = $app['config']-\u0026gt;get('oauth2.http_headers_only');\rreturn new OauthTotalRecalls($app['oauth2-server.authorizer'], $httpHeadersOnly);\r});\r}\r/**\r* Register the service provider.\r*\r* @return void\r*/\rpublic function register()\r{\r// TODO: Implement register() method.\r}\r}\rThen I register that in my app.conf after I register his.\nMy Filter It overrides the filter to do one thing and that is to check if the user is a guest. Which they would not be if they are logging in via the Laravel login form.\n\u0026lt;?php namespace App\\Filters;\ruse Illuminate\\Support\\Facades\\Auth;\ruse LucaDegasperi\\OAuth2Server\\Filters\\OAuthFilter;\rclass OauthTotalRecalls extends OAuthFilter {\r/**\r* Run the oauth filter\r*\r* @internal param mixed $route, mixed $request, mixed $scope,...\r* @return void a bad response in case the request is invalid\r*/\rpublic function filter()\r{\rif(Auth::guest())\r{\rif (func_num_args() \u0026gt; 2) {\r$args = func_get_args();\r$this-\u0026gt;scopes = array_slice($args, 2);\r}\r$this-\u0026gt;authorizer-\u0026gt;validateAccessToken($this-\u0026gt;httpHeadersOnly);\r$this-\u0026gt;validateScopes();\r}\r}\r}\rLoading user So at this point the user is logged in via Laravel so the Auth::user() is fully set. But lastly if this was the token based log in the \u0026ldquo;setUser\u0026rdquo; filter will kick in and load the user from the token. If the token is wrong then this all will fail.\nRoute::filter('setUser', function()\r{\rif(Auth::guest())\r{\r$user_id = Authorizer::getResourceOwnerId();\rAuth::loginUsingId($user_id);\r}\r});\r","relPermalink":"/posts/133/","summary":"This is all based around this library https://github.com/lucadegasperi/oauth2-server-laravel\nI am building and API to be used by an iOs and Android client I will be making soon. But I also needed the filter system to deal with my local Laravel view that was using the api via an Angular driven widget so the user can go to the website as well.\nSo the website is where the user can go to do change settings, subscription updates etc, but in that case they are logged in via the Laravel login form.","tags":["oauth","laravel","apis"],"title":"Dealing with Oauth2 Server and Laravel for both a local app login and for remote apps using Lucadegasperi/oauth2-server-laravel"},{"content":"Events Getting Started This is part of a larger Laravel Guide I am working on in this case the example is in the Events folder\nStart the example\nphp artisan serve --port=8081\rThen visit\nhttp://localhost:8081/example1\rSo if you look in\napp/routes.php\rYou see route example1 will fire and event and there are two listeners\nDo they run async or sync If you hit that route you see the sleep taking effect so it is syncronous\nSee in the image below an example. I reload the page and the results are staggered by the sleep amount in the route.\nOn the left I have\nphp artisan tail\rHere is the route\nEvent::listen('example1', function()\r{\rsleep(5);\rLog::info(\u0026quot;Event one is Triggered\u0026quot;);\r});\rEvent::listen('example1', function()\r{\rsleep(5);\rLog::info(\u0026quot;Event two is Triggered\u0026quot;);\r});\rRoute::get('/example1', function()\r{\rEvent::fire('example1');\rreturn \u0026quot;Event Example 1\u0026quot;;\r});\rSo if you did not want to hold up the process you would place these into a queue.\nPassing data to events How can Event 1 alter Event 2 and Event 3\nSee route would be /example2\nAlso there is a registered event listener seen in the route file that\n$subscriber = new \\Acme\\ExampleEventHandler;\rEvent::subscribe($subscriber);\rWhich shows how that made it hard to pass a state\n$subscriber = new \\Acme\\ExampleEventHandler;\rEvent::subscribe($subscriber);\rEvent::listen('example2', function($state)\r{\r$state-\u0026gt;total = $state-\u0026gt;total + 5;\rvar_dump(sprintf(\u0026quot;From The listener one state %s \u0026lt;br\u0026gt;\u0026quot;, $state-\u0026gt;total));\rLog::info(sprintf(\u0026quot;Event two listener 1 is Triggered total %s\u0026quot;, $state-\u0026gt;total));\r});\rEvent::listen('example2', function($state)\r{\r$state-\u0026gt;total = $state-\u0026gt;total + 5;\rvar_dump(sprintf(\u0026quot;From The listener two state %s \u0026lt;br\u0026gt;\u0026quot;, $state-\u0026gt;total));\rLog::info(sprintf(\u0026quot;Event two listener 2 is Triggered total %s\u0026quot;, $state-\u0026gt;total));\r});\rRoute::get('/example2', function()\r{\r$state = new stdClass();\r$state-\u0026gt;total = 0;\rEvent::fire('example2', array($state));\rreturn sprintf(\u0026quot;Event Example 2 data total state %s\u0026quot;, $state-\u0026gt;total);\r});\rThis one you just see in the browser\n","relPermalink":"/posts/132/","summary":"Events Getting Started This is part of a larger Laravel Guide I am working on in this case the example is in the Events folder\nStart the example\nphp artisan serve --port=8081\rThen visit\nhttp://localhost:8081/example1\rSo if you look in\napp/routes.php\rYou see route example1 will fire and event and there are two listeners\nDo they run async or sync If you hit that route you see the sleep taking effect so it is syncronous","tags":["laravel","events","php"],"title":"Simple Look at Laravel Events"},{"content":"We needed to offer timed links to the urls and we are using Laravel-Flysystem\nAaron Smith found this how to but I wanted it to work with existing use of FlySystem.\nI ended up moving the code into a trait so we could use this one feature\n\u0026lt;?php namespace AlfredNutileInc\\CoreApp\\Helpers;\ruse GrahamCampbell\\Flysystem\\Facades\\Flysystem;\ruse Illuminate\\Support\\Facades\\Log;\rtrait S3Helper {\rprotected $path_for_assets;\rprotected $expire_time;\rpublic $driver = 'awss3';\r/**\r* @return string\r*/\rpublic function getDriver()\r{\rreturn $this-\u0026gt;driver;\r}\r/**\r* @param string $driver\r*/\rpublic function setDriver($driver)\r{\r$this-\u0026gt;driver = $driver;\r}\rpublic function iterateOverFiles($files)\r{\rforeach($files as $key =\u0026gt; $file)\r{\rif(isset($file['path'])) {\r$files[$key]['url'] = $this-\u0026gt;getSignedUrl($file['path']);\r}\r}\rreturn $files;\r}\rprotected function getFiles()\r{\r$this-\u0026gt;path_for_assets = $this-\u0026gt;project_id . '/' . $this-\u0026gt;id;\r$files = Flysystem::listContents($this-\u0026gt;path_for_assets);\rif(!$files)\rreturn [];\rreturn $this-\u0026gt;iterateOverFiles($files);\r}\r/**\r* https://coderwall.com/p/pr-gwg/create-aws-s3-signed-requests-with-php\r*/\rprotected function getSignedUrl($filename)\r{\r$awsKeyId = Flysystem::getConnectionConfig($this-\u0026gt;getDriver())['key'];\r$awsSecret = Flysystem::getConnectionConfig($this-\u0026gt;getDriver())['secret'];\r$expires = $this-\u0026gt;getExpireTime();\r$httpVerb = \u0026quot;GET\u0026quot;;\r$contentMD5 = \u0026quot;\u0026quot;;\r$contentType = \u0026quot;\u0026quot;;\r$amzHeaders = \u0026quot;\u0026quot;;\r$amzResource = \u0026quot;/\u0026quot; . Flysystem::getConnectionConfig($this-\u0026gt;getDriver())['bucket'] . \u0026quot;/\u0026quot; . $filename;\r$request = sprintf(\u0026quot;%s\\n%s\\n%s\\n%s\\n%s%s\u0026quot; , $httpVerb , $contentMD5 , $contentType , $expires , $amzHeaders , $amzResource );\r$base64signed = urlencode(base64_encode( hash_hmac( 'sha1' , $request, $awsSecret , true ) ));\r$url = \u0026quot;http://s3.amazonaws.com%s?AWSAccessKeyId=%s\u0026amp;Expires=%s\u0026amp;Signature=%s\u0026quot;;\r$url = sprintf( $url , $amzResource , $awsKeyId , $expires , $base64signed );\rreturn $url;\r}\rpublic function setExpireTime($time = false)\r{\rif($time == false)\r{\r$time = time() + (10*60);\r}\r$this-\u0026gt;expire_time = $time;\r}\rpublic function getExpireTime()\r{\rif($this-\u0026gt;expire_time == false)\r{\r$this-\u0026gt;setExpireTime();\r}\rreturn $this-\u0026gt;expire_time;\r}\r}\rIdeally seconds could be passed in too.\nThen in any model/repo I can use it like this\n public function assets()\r{\rtry\r{\r$files = $this-\u0026gt;getFiles();\rreturn ['images' =\u0026gt; $files, 'videos' =\u0026gt; []];\r} catch(\\Exception $e)\r{\rthrow new \\Exception(sprintf(\u0026quot;Error getting files %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\r","relPermalink":"/posts/131/","summary":"We needed to offer timed links to the urls and we are using Laravel-Flysystem\nAaron Smith found this how to but I wanted it to work with existing use of FlySystem.\nI ended up moving the code into a trait so we could use this one feature\n\u0026lt;?php namespace AlfredNutileInc\\CoreApp\\Helpers;\ruse GrahamCampbell\\Flysystem\\Facades\\Flysystem;\ruse Illuminate\\Support\\Facades\\Log;\rtrait S3Helper {\rprotected $path_for_assets;\rprotected $expire_time;\rpublic $driver = 'awss3';\r/**\r* @return string\r*/\rpublic function getDriver()\r{\rreturn $this-\u0026gt;driver;\r}\r/**\r* @param string $driver\r*/\rpublic function setDriver($driver)\r{\r$this-\u0026gt;driver = $driver;\r}\rpublic function iterateOverFiles($files)\r{\rforeach($files as $key =\u0026gt; $file)\r{\rif(isset($file['path'])) {\r$files[$key]['url'] = $this-\u0026gt;getSignedUrl($file['path']);\r}\r}\rreturn $files;\r}\rprotected function getFiles()\r{\r$this-\u0026gt;path_for_assets = $this-\u0026gt;project_id .","tags":["laravel","php"],"title":"Laravel-Flysystem and Creating Time Limited Public Urls on S3"},{"content":"Laracasts has some great videos and libraries for Laravel 5 and Behat integration.\nExamples\nhttps://github.com/laracasts/Behat-Laravel-Extension\nand\nhttps://laracasts.com/lessons/laravel-5-and-behat-bffs\nTwo things that I still need and get from this though that I do not think I can get from those are\n Laravel 4.2 support which obviously is not going to work with the above L5 libraries :) Mocking APIs when running under APP_ENV=local or testing  Also I think with the libraries above only goutte drivers work for the APP_ENV setting.\nDealing with APIs We use a lot of APIs. One for example is Github so make a provider like this\nThe Provider I register an API Provider like this\n\u0026lt;?php\rnamespace BehatEditor\\Services;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\Config;\ruse Illuminate\\Support\\ServiceProvider;\rclass GitApiServiceProvider extends ServiceProvider {\r/**\r* Register the service provider.\r*\r* @return void\r*/\rpublic function register()\r{\rif(App::environment() == 'testing' || Config::get('app.mock') == true)\r{\r$this-\u0026gt;app-\u0026gt;singleton('GithubClientInstance', function($app){\r$git = new GithubApiMockService();\r$username = getenv('GIT_USERNAME');\r$token = getenv('GIT_TOKEN');\r$git-\u0026gt;setUsername($username);\r$git-\u0026gt;setToken($token);\r$git-\u0026gt;setLogger($app['log']);\r$git-\u0026gt;setLogging(true);\r$git-\u0026gt;authenticate();\rreturn $git;\r});\r} else\r{\r$this-\u0026gt;app-\u0026gt;singleton('GithubClientInstance', function($app){\r$git = new GithubApiService();\r$username = getenv('GIT_USERNAME');\r$token = getenv('GIT_TOKEN');\r$git-\u0026gt;setUsername($username);\r$git-\u0026gt;setToken($token);\r$git-\u0026gt;setLogger($app['log']);\r$git-\u0026gt;setLogging(true);\r$git-\u0026gt;authenticate();\rreturn $git;\r});\r}\r}\r}\rThe \u0026ldquo;app.mock\u0026rdquo; I set in two places\nconfig/local/app.php\rand\nconfig/testing/app.php\r\u0026lt;?php\rreturn array(\r'chat_on' =\u0026gt; false,\r'mock' =\u0026gt; true,\r'debug' =\u0026gt; true,\r'providers' =\u0026gt; append_config(array(\r'GuilhermeGuitte\\BehatLaravel\\BehatLaravelServiceProvider'\r))\r);\rTesting works well for Codeship.\nThen if we have mock as true for local and I run\nphp artisan behat:run --profile=als_local_ui --stop-on-failure ui/people_ui.feature\rI can test all my Angular ui for People\nHere is the behat.yml for that, keep in mind I run this from inside of Vagrant (Homestead) and Selenium is running on my Mac thanks to \u0026ldquo;webdriver-manager\u0026rdquo; and brew install chromedriver you can see more on that here\ndefault:\rfilters:\rtags: \u0026quot;~@wip\u0026quot;\rformatter:\rname: pretty\rparameters:\rdecorated: true\rverbose: false\rtime: true\rlanguage: en\routput_path: null\rmultiline_arguments: true\rpaths:\rfeatures: app/tests/acceptance/features\rbootstrap: app/tests/acceptance/contexts\rcontext:\rparameters:\rbase_url: http://behat.dev\rasset_path: '/tmp/'\rals_local_ui:\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte:\rguzzle_parameters:\rcurl.options:\rCURLOPT_SSL_VERIFYPEER: false\rCURLOPT_CERTINFO: false\rCURLOPT_TIMEOUT: 120\rssl.certificate_authority: false\rselenium2:\rwd_host: \u0026quot;http://192.168.33.1:4444/wd/hub\u0026quot;\rbase_url: 'https://admin:foo@behat.dev:44300'\rbrowser_name: chrome\rThe Mock Class The mock class just extends the real class but takes over\nIf mock is on it looks for a matching fixture file and uses that, else it makes one real call, saves the fixture and then uses that next time.\n\u0026lt;?php\rnamespace BehatEditor\\Services;\ruse AlfredNutileInc\\Fixturizer\\FixturizerReader;\ruse BehatEditor\\Exceptions\\ModelException;\ruse BehatEditor\\Helpers\\BuildFileObject;\ruse BehatEditor\\Helpers\\ThrowAndLogErrors;\ruse BehatEditor\\Providers\\GithubClientInterface;\ruse Github\\Client;\ruse Github\\ResultPager;\ruse BehatEditor\\Interfaces\\BehatUIInterface;\ruse BehatEditor\\Repositories\\ProjectsRepository;\ruse Illuminate\\Support\\Facades\\Log;\rclass GithubApiMockService extends GithubApiService implements GithubClientInterface {\rpublic $sha;\rprotected $application;\r/**\r* @var \\Github\\Client\r*/\rpublic $client;\rprotected $username;\rprotected $token;\rprotected $branch;\rprotected $parent_file;\rprotected $reponame;\rprotected $folder;\rprotected $logging = false;\rprotected $logger;\r/**\r* @var RepoSettingRepository\r*/\rprivate $repoSettingRepository;\rpublic function __construct(Client $client)\r{\r$this-\u0026gt;client = $client;\r$this-\u0026gt;path = base_path() . '/tests/fixtures/';\r}\rpublic function seeIfRepoHasCustomSteps()\r{\r$this-\u0026gt;logMock('repo_has_custom_steps');\r$results = FixturizerReader::getFixture('git_show_repo_custom_steps.yml', $this-\u0026gt;path);\rreturn $results;\r}\rI am using this library to quickly make fixtures https://packagist.org/packages/alfred-nutile-inc/fixturizer\nThat makes our tests super fast since we are never hitting out APIs like Github, Pusher, etc.\nI cover it Mocking Queue Service for faster Behat Testing as well.\nAPI Testing We use Behat to test our API endpoints as seen in the book Build APIs You Won\u0026rsquo;t Hate\nFor hitting the API we use basic.once\n#filter.php\rRoute::filter('basic.once', function()\r{\rif(Auth::guest())\r{\r/**\r* First authenticate as normal\r*/\rif ($results = Auth::onceBasic() )\r{\rreturn $results;\r}\r}\r});\rAnd the route would be\nRoute::group(['prefix' =\u0026gt; 'api/v1', 'before' =\u0026gt; 'basic.once|auth'], function() {\r///routes\r}\rThis allows our Angular app which happens to live inside the same codebase of the API to login using a standar Laravel Form but also allows other apps to access the API (Oauth coming soon)\nReseeding the DB This step helps with that\n /**\r* @Given /^I reseed the database$/\r*/\rpublic function iReseedTheDatabase()\r{\r$env = getenv('APP_ENV');\rif(getenv('APP_ENV') != 'production')\r{\rtry\r{\rif(getenv('APP_ENV') == 'testing')\r{\rcopy(__DIR__ . '/../../../../app/database/stubdb.sqlite', __DIR__ . '/../../../../app/database/testing.sqlite');\r}\relse\r{\rexec(\u0026quot;php artisan migrate:refresh --seed -n --env=$env\u0026quot;);\r}\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(sprintf(\u0026quot;Error seeding the database %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r} else {\rthrow new \\Exception(sprintf(\u0026quot;You can not seed production\u0026quot;));\r}\r}\rI cover more on that PHP quick fixture data for phpunit testing\nLoading APP FeatureContext has a BaseContext that has these methods\n public function setApp()\r{\r$app = new Illuminate\\Foundation\\Application;\r$env = $app-\u0026gt;detectEnvironment(\rfunction()\r{\rif(!getenv('APP_ENV'))\r{\rDotenv::load(__DIR__ .'/../../../../');\r}\rreturn getenv('APP_ENV');\r}\r);\r$app-\u0026gt;bindInstallPaths(require __DIR__ . '/../../../../bootstrap/paths.php');\r$framework = $app['path.base'].\r'/vendor/laravel/framework/src';\rrequire $framework.'/Illuminate/Foundation/start.php';\r$this-\u0026gt;app = $app;\r$this-\u0026gt;app-\u0026gt;boot();\r$this-\u0026gt;env = $env;\r}\rpublic function getApp()\r{\rreturn $this-\u0026gt;app;\r}\rOn the __construct it does\n public function __construct(array $parameters) {\r$config = isset($parameters['guzzle']) \u0026amp;\u0026amp; is_array($parameters['guzzle']) ? $parameters['guzzle'] : [];\r$config['base_url'] = (isset($parameters['base_url'])) ? $parameters['base_url'] : false;\r$this-\u0026gt;parameters = $parameters;\r$this-\u0026gt;client = new Client($config);\r$this-\u0026gt;iSetCredentials();\rFactory::$factoriesPath = 'app/tests/factories';\r$this-\u0026gt;setApp();\r}\rLaracast TestDummy / Factories One example of using factories is a step like this\n /**\r* @Given /^I create person fixture with \u0026quot;([^\u0026quot;]*)\u0026quot; id$/\r*/\rpublic function iCreatePersonFixtureWithId($arg1)\r{\rFactory::create('TheHub\\Profile\\User', [ 'id' =\u0026gt; $arg1 ]);\r}\rUsing the Laracast TestDummy library I can quickly stub out data for the test.\n","relPermalink":"/posts/130/","summary":"Laracasts has some great videos and libraries for Laravel 5 and Behat integration.\nExamples\nhttps://github.com/laracasts/Behat-Laravel-Extension\nand\nhttps://laracasts.com/lessons/laravel-5-and-behat-bffs\nTwo things that I still need and get from this though that I do not think I can get from those are\n Laravel 4.2 support which obviously is not going to work with the above L5 libraries :) Mocking APIs when running under APP_ENV=local or testing  Also I think with the libraries above only goutte drivers work for the APP_ENV setting.","tags":["laravel","php","behat","angular"],"title":"Laravel Behat and Selenium"},{"content":"Setting up Chrome driver with Behat and Selenium2\nSide note for Mac brew install chromedriver\rChromeDriver Once you find the path Chrome was installed you place the driver in there. For Ubuntu 14.04 it was\n/opt/google/chrome/chromedriver\rI got the driver from https://code.google.com/p/selenium/wiki/ChromeDriver#Overriding_the_Chrome_binary_location\nStarting Selenium I still need to look up and try setting this in the behat.yml for now I just ran it this way\njava -jar selenium-server-standalone-2.0rc2.jar -Dwebdriver.chrome.driver=/opt/google/chrome/chromedriver\rThat is it. Now it should work with Chrome when you behat.yml is set like this\ndefault:\rformatter:\rname: pretty\rparameters:\rdecorated: true\rverbose: false\rtime: true\rlanguage: en\routput_path: null\rmultiline_arguments: true\rpaths:\rfeatures: app/tests/acceptance/features\rbootstrap: app/tests/acceptance/contexts\rcontext:\rparameters:\rbase_url: http://thehub.dev\rextensions:\rBehat\\MinkExtension\\Extension:\rgoutte: null\rselenium2:\rwd_host: \u0026quot;http://192.168.10.1:4444/wd/hub\u0026quot;\rbase_url: 'http://thehub.dev:8000/'\rbrowser_name: chrome\r","relPermalink":"/posts/129/","summary":"Setting up Chrome driver with Behat and Selenium2\nSide note for Mac brew install chromedriver\rChromeDriver Once you find the path Chrome was installed you place the driver in there. For Ubuntu 14.04 it was\n/opt/google/chrome/chromedriver\rI got the driver from https://code.google.com/p/selenium/wiki/ChromeDriver#Overriding_the_Chrome_binary_location\nStarting Selenium I still need to look up and try setting this in the behat.yml for now I just ran it this way\njava -jar selenium-server-standalone-2.0rc2.jar -Dwebdriver.chrome.driver=/opt/google/chrome/chromedriver\rThat is it.","tags":["note2self"],"title":"Linux, Behat and installing ChromeDriver"},{"content":"It is really really nice to use this for testing and local since any reseed work is quick.\nOverall the swap out is easy and I do not think, so far, there has been any issues going to mysql on production.\nThe only two things to set over all is\nSeeding In my DatabaseSeeder.php file I set this\n\u0026lt;?php\ruse Illuminate\\Database\\Seeder;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\DB;\rclass DatabaseSeeder extends Seeder {\r/**\r* Run the database seeds.\r*\r* @return void\r*/\rpublic function run()\r{\rEloquent::unguard();\rif(DB::getDriverName() != 'sqlite') {\rDB::statement('SET FOREIGN_KEY_CHECKS=0;');\r}\r$this-\u0026gt;call('AppTableSeeder');\rif(DB::getDriverName() != 'sqlite') {\rDB::statement('SET FOREIGN_KEY_CHECKS=1;');\r}\r}\r}\rThis allows me to reseed without issues.\nNull fields On fields that are allowed to be null just add this\n\u0026lt;?php\ruse Illuminate\\Database\\Migrations\\Migration;\ruse Illuminate\\Database\\Schema\\Blueprint;\rclass AddGithubTokenToUsersTable extends Migration {\r/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::table('users', function(Blueprint $table)\r{\r$table-\u0026gt;string('name')-\u0026gt;nullable();\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::table('users', function(Blueprint $table)\r{\r$table-\u0026gt;dropColumn('name');\r});\r}\r}\rCheck out Speeding up PHPunit tests and Behat in Laravel for Database refreshes to see more info of how you can use this.\nAlso see php artisan migrate:reset not working for some extra setup.\nUpdate 2-11-2015 Andrew Cavanagh noted that since renameColumn does not work with Sqlite you can do this to drop and make the column. Also without the two steps in up() seeding failed.\n\t/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::table('diff_requests', function(Blueprint $table)\r{\r$table-\u0026gt;dropColumn('bundle_id');\r});\rSchema::table('diff_requests', function(Blueprint $table)\r{\r$table-\u0026gt;string('project_id', 36)-\u0026gt;nullable();\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::table('diff_requests', function(Blueprint $table)\r{\r$table-\u0026gt;dropColumn('project_id');\r$table-\u0026gt;string('bundle_id', 36)-\u0026gt;nullable();\r});\r}\r","relPermalink":"/posts/128/","summary":"It is really really nice to use this for testing and local since any reseed work is quick.\nOverall the swap out is easy and I do not think, so far, there has been any issues going to mysql on production.\nThe only two things to set over all is\nSeeding In my DatabaseSeeder.php file I set this\n\u0026lt;?php\ruse Illuminate\\Database\\Seeder;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\DB;\rclass DatabaseSeeder extends Seeder {\r/**\r* Run the database seeds.","tags":["laravel","php","sqlite"],"title":"Sqlite and Laravel"},{"content":"Maybe there is a better way to do this? But using this article https://fatalfailure.wordpress.com/2011/08/22/detecting-slow-tests-with-phpunit/ I was able to find a hanging test.\nSetup I already have an xml file at the root of my project so I added to that that listener.\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\r\u0026lt;phpunit backupGlobals=\u0026quot;false\u0026quot;\rbackupStaticAttributes=\u0026quot;false\u0026quot;\rbootstrap=\u0026quot;tests/bootstrap.php\u0026quot;\rcolors=\u0026quot;true\u0026quot;\rconvertErrorsToExceptions=\u0026quot;true\u0026quot;\rconvertNoticesToExceptions=\u0026quot;true\u0026quot;\rconvertWarningsToExceptions=\u0026quot;true\u0026quot;\rprocessIsolation=\u0026quot;false\u0026quot;\rstopOnFailure=\u0026quot;true\u0026quot;\rsyntaxCheck=\u0026quot;false\u0026quot;\r\u0026gt;\r\u0026lt;listeners\u0026gt;\r\u0026lt;listener file=\u0026quot;./app/tests/listeners/TestTimesListener.php\u0026quot; /\u0026gt;\r\u0026lt;/listeners\u0026gt;\r\u0026lt;testsuites\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Application Test Suite\u0026quot;\u0026gt;\r\u0026lt;directory\u0026gt;./app/tests/BehatEditor/Tests\u0026lt;/directory\u0026gt;\r\u0026lt;directory\u0026gt;./app/tests/TheHub/Tests\u0026lt;/directory\u0026gt;\r\u0026lt;exclude\u0026gt;./app/tests/BehatEditor/Tests/Migrations\u0026lt;/exclude\u0026gt;\r\u0026lt;exclude\u0026gt;./app/tests/DMPIntegration\u0026lt;/exclude\u0026gt;\r\u0026lt;/testsuite\u0026gt;\r\u0026lt;/testsuites\u0026gt;\r\u0026lt;/phpunit\u0026gt;\rthe lines are\n \u0026lt;listeners\u0026gt;\r\u0026lt;listener file=\u0026quot;./app/tests/listeners/TestTimesListener.php\u0026quot; /\u0026gt;\r\u0026lt;/listeners\u0026gt;\rThat I added.\nThen that file I ended up with this\n\u0026lt;?php\rclass PHPUnitTestListener implements PHPUnit_Framework_TestListener {\rprivate $time;\rprivate $timeLimit = 0;\rpublic function startTest(PHPUnit_Framework_Test $test) {\r$this-\u0026gt;time = time();\r}\rpublic function endTest(PHPUnit_Framework_Test $test, $time) {\r$current = time();\r$took = $current - $this-\u0026gt;time;\rif($took \u0026gt; $this-\u0026gt;timeLimit ) {\recho \u0026quot;\\nName: \u0026quot;.$test-\u0026gt;getName().\u0026quot; took \u0026quot;.$took . \u0026quot; second(s) (from: $this-\u0026gt;time, to: $current)\\n\u0026quot;;\r}\r}\rpublic function addError(PHPUnit_Framework_Test $test, Exception $e, $time) {\r}\rpublic function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time) {\r}\rpublic function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time){\r}\rpublic function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time) {\r}\rpublic function startTestSuite(PHPUnit_Framework_TestSuite $suite) {\r}\rpublic function endTestSuite(PHPUnit_Framework_TestSuite $suite) {\r}\r/**\r* Risky test.\r*\r* @param PHPUnit_Framework_Test $test\r* @param Exception $e\r* @param float $time\r* @since Method available since Release 4.0.0\r*/\rpublic function addRiskyTest(PHPUnit_Framework_Test $test, Exception $e, $time)\r{\r// TODO: Implement addRiskyTest() method.\r}\r}\rRight now I am only using startTest and endTest.\nFinally all my tests have a TestCase class they share so in there I ended up with\n\u0026lt;?php\ruse Faker\\Factory as Faker;\ruse Illuminate\\Support\\Facades\\Artisan;\ruse Illuminate\\Support\\Facades\\DB;\ruse Illuminate\\Support\\Facades\\Log;\ruse Mockery as m;\rclass TestCase extends Illuminate\\Foundation\\Testing\\TestCase {\rpublic function setUp()\r{\rparent::setUp();\r$this-\u0026gt;listener = new PHPUnitTestListener();\r$this-\u0026gt;faker = Faker::create();\r$this-\u0026gt;prepareForTests();\r$this-\u0026gt;listener-\u0026gt;startTest($this);\r}\rpublic function tearDown()\r{\r$this-\u0026gt;listener-\u0026gt;endTest($this, time());\rparent::tearDown();\r}\rOverall it is pretty simple once the other post pointed it out. Now to use all the other listeners.\n","relPermalink":"/posts/127/","summary":"Maybe there is a better way to do this? But using this article https://fatalfailure.wordpress.com/2011/08/22/detecting-slow-tests-with-phpunit/ I was able to find a hanging test.\nSetup I already have an xml file at the root of my project so I added to that that listener.\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\r\u0026lt;phpunit backupGlobals=\u0026quot;false\u0026quot;\rbackupStaticAttributes=\u0026quot;false\u0026quot;\rbootstrap=\u0026quot;tests/bootstrap.php\u0026quot;\rcolors=\u0026quot;true\u0026quot;\rconvertErrorsToExceptions=\u0026quot;true\u0026quot;\rconvertNoticesToExceptions=\u0026quot;true\u0026quot;\rconvertWarningsToExceptions=\u0026quot;true\u0026quot;\rprocessIsolation=\u0026quot;false\u0026quot;\rstopOnFailure=\u0026quot;true\u0026quot;\rsyntaxCheck=\u0026quot;false\u0026quot;\r\u0026gt;\r\u0026lt;listeners\u0026gt;\r\u0026lt;listener file=\u0026quot;./app/tests/listeners/TestTimesListener.php\u0026quot; /\u0026gt;\r\u0026lt;/listeners\u0026gt;\r\u0026lt;testsuites\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Application Test Suite\u0026quot;\u0026gt;\r\u0026lt;directory\u0026gt;./app/tests/BehatEditor/Tests\u0026lt;/directory\u0026gt;\r\u0026lt;directory\u0026gt;./app/tests/TheHub/Tests\u0026lt;/directory\u0026gt;\r\u0026lt;exclude\u0026gt;./app/tests/BehatEditor/Tests/Migrations\u0026lt;/exclude\u0026gt;\r\u0026lt;exclude\u0026gt;.","tags":["php","phpunit","testing"],"title":"Timing PHPUnit Tests"},{"content":"related repo\nWorking on a recent project it finally hit me how repetitive then need was to make a Resource at the API level and to make the UI to Create, Retrieve, Update, Delete, Index. And how easy it would be to make a foundation for this to use for each Resource keeping the UI goals consistent and simple between these Resources. With this came also a set of API tests in Behat that could also be used with the project.\nWhat I will cover below is building out the foundation for this code and using it in a \u0026lsquo;real life\u0026rsquo; example.\nYou will end up with a UI like this\nIndex Simple search, create and edit\nModal Create Simple Create leaving complexities for Edit\nModal Edit Now for the code API The API follows this pattern\nRoute Build all the info into one namespace. For example using the a resource like the one in the images above call People and a name space of CoreApp.\nCoreApp\\PeopleApi\rWhat is in here is (we will cover each in detail)\nThe route file then has\n\u0026lt;?php\rRoute::get('people', 'CoreApp\\People\\PeopleController@getAll');\rRoute::get('people/{uuid}', 'CoreApp\\People\\PeopleController@getOne');\rRoute::post('people', 'CoreApp\\People\\PeopleController@postResource');\rRoute::put('people/{uuid}', 'CoreApp\\People\\PeopleController@putResource');\rBy using put and post Resource we all of this easier to reuse.\nThen include this in your main route file for Laravel or register it with a provider.\n#app/routes.php\rrequire_once(__DIR__ . '/App/PeopleApi/routes.php');\rSo now the routes are in place lets go to the Controller\nController \u0026lt;?php\rnamespace App\\People;\ruse App\\Teams\\Team; //some other model\ruse App\\Users\\User; //some other model we rely on use App\\BaseController;\ruse App\\People\\PeopleService;//keep logic out of controller\ruse App\\Services\\ResponseServices; //just an example of a consistent response patter\ruse Illuminate\\Support\\Facades\\Auth;\ruse Illuminate\\Support\\Facades\\Response;\ruse Illuminate\\Support\\Facades\\Validator;\rclass PeopleController extends BaseController {\r/**\r* @var PeopleService\r*/\rprivate $peopleService;\rpublic function __construct(PeopleService $service, ResponseServices $responseServices)\r{\r$this-\u0026gt;service = $peopleService; //@NOTE name it service not people service to ease the reuse.\r$this-\u0026gt;responseServices = $responseServices;\r}\r/**\r* @Get('api/v1/people\r*/\rpublic function getAll()\r{\rtry\r{\r$results['people'] = $this-\u0026gt;service-\u0026gt;getAll();\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Loaded People\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Getting People Failed %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\r/**\r* @Get('api/v1/people/{uuid}\r*/\rpublic function getOne($uuid)\r{\rtry\r{\r$results['person'] = $this-\u0026gt;service-\u0026gt;getOne($uuid);\rif(!empty($results['person']))\r{\r$results['roles'] = Role::all();\r$results['teams'] = Team::all();\r}\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Loaded People\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Getting People Failed %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\r/**\r* @Post('api/v1/people')\r*/\rpublic function postResource()\r{\rtry\r{\r$store = $this-\u0026gt;getInput();\r} catch(\\Exception $e)\r{\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), \u0026quot;PUT Failed\u0026quot;), 422);\r}\r$validator = Validator::make($store, $this-\u0026gt;service-\u0026gt;rulesCreate);\rif(!$validator-\u0026gt;passes()) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($validator-\u0026gt;messages(), \u0026quot;Validation failed\u0026quot;), 422);\r}\rtry\r{\r$results['person'] = $this-\u0026gt;service-\u0026gt;postPerson($store);\r/**\r* @TODO move Response to a class to not have it tightly coupled here\r*/\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Updated Team\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Updating Person %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\r/**\r* @Put('api/v1/people/{uuid}\r*/\rpublic function putResource($uuid)\r{\rtry\r{\r$store = $this-\u0026gt;getInput();\r} catch(\\Exception $e)\r{\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), \u0026quot;PUT Failed\u0026quot;), 422);\r}\r$validator = Validator::make($store, $this-\u0026gt;service-\u0026gt;rulesCreate);\rif(!$validator-\u0026gt;passes()) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($validator-\u0026gt;messages(), \u0026quot;Validation failed\u0026quot;), 422);\r}\rtry\r{\r$results = $this-\u0026gt;service-\u0026gt;updatePerson($store);\r/**\r* @TODO move Response to a class to not have it tightly coupled here\r*/\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Updated Person\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), sprintf(\u0026quot;Error Updating Person %s\u0026quot;, $e-\u0026gt;getMessage())), 422);\r}\r}\r} The Controller talks to the service to get the respond to the request and the consistently responds back using the responseService. (more on that shortly)\nThe Service \u0026lt;?php\rnamespace CoreApp\\People;\ruse CoreApp\\Models\\User;\ruse CoreApp\\Services\\UserService;\ruse CoreApp\\Helpers\\RoleHelper;\ruse CoreApp\\Helpers\\ThrowAndLogErrors;\ruse CoreApp\\Services\\BaseServices;\ruse CoreApp\\Helpers\\UuidHelper;\ruse Illuminate\\Support\\Facades\\Auth;\ruse Illuminate\\Support\\Facades\\Hash;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\Str;\rclass PeopleService extends BaseServices {\ruse RoleHelper;\ruse ThrowAndLogErrors;\ruse UuidHelper;\r/**\r* @var User\r*/\rprivate $user;\rpublic $rulesCreate = [\r'email' =\u0026gt; 'required|email'\r];\rpublic function __construct(UserService $user)\r{\r$this-\u0026gt;user = $user;\r}\rpublic function getAll()\r{\rtry\r{\r$user_id = Auth::user()-\u0026gt;id;\rif($this-\u0026gt;isInRole($user_id, ['role-admin']))\r{\r$results = $this-\u0026gt;user-\u0026gt;all();\r} else {\r$results = [];\r}\r}\rcatch(NotInRoleException $e)\r{\r$results = [];\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(\u0026quot;Error getting people message \u0026quot; . $e-\u0026gt;getMessage());\r}\rreturn $results;\r}\rpublic function getOne($uuid)\r{\rtry\r{\rif($this-\u0026gt;isAdminRoleOrOwner($uuid))\r{\r$results = $this-\u0026gt;user-\u0026gt;getPerson($uuid);\r} else {\r$results = [];\r}\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(\u0026quot;Error getting people message \u0026quot; . $e-\u0026gt;getMessage());\r}\rreturn $results;\r}\rpublic function updatePerson($store)\r{\r$this-\u0026gt;isCurrentUserInRoleAdmin();\rtry\r{\r$user = User::findOrFail($store['id']);\r$store = (array) $store;\r$user-\u0026gt;email = $store['email'];\r(isset($store['image'])) ? $user-\u0026gt;image = $store['image'] : false;\r$user-\u0026gt;save();\rif(isset($store['roles']))\r{\r$user = $this-\u0026gt;syncRoles($user, $store);\r}\r}\rcatch(\\Exception $e)\r{\r$message = sprintf(\u0026quot;Error updating team %s\u0026quot;, $e-\u0026gt;getMessage());\r$this-\u0026gt;throw_and_log_error($message);\r}\rreturn $user;\r}\rpublic function postPerson($store)\r{\r$this-\u0026gt;isCurrentUserInRoleAdmin();\r$user = new User();\rtry\r{\r/**\r* @TODO move this into a CoreApp service\r* I am moving away from the BehatEditor Service\r*/\r$uuid = (!isset($store['id'])) ? $this-\u0026gt;generateNewId()-\u0026gt;toString() : $store['id'];\r$user-\u0026gt;id = $uuid;\r$user-\u0026gt;email = $store['email'];\r$user-\u0026gt;password = Hash::make(Str::random(32));\r$user-\u0026gt;image = $user-\u0026gt;default_image;\r$user-\u0026gt;save();\r$user = User::with('roles')-\u0026gt;find($uuid); //due to uuid work\rif(isset($store['roles']))\r{\r$user = $this-\u0026gt;syncRoles($user, $store);\r}\r}\rcatch(\\Exception $e)\r{\r$message = sprintf(\u0026quot;Error creating user %s\u0026quot;, $e-\u0026gt;getMessage());\r$this-\u0026gt;throw_and_log_error($message);\r}\rreturn $user;\r}\rprotected function syncRoles($user, $store)\r{\rif(isset($store['roles']))\r{\rforeach($store['roles'] as $role)\r{\r$roles[] = $role['id'];\r}\r$user-\u0026gt;roles()-\u0026gt;sync($roles);\r}\rreturn $user;\r}\r} ","relPermalink":"/posts/126/","summary":"related repo\nWorking on a recent project it finally hit me how repetitive then need was to make a Resource at the API level and to make the UI to Create, Retrieve, Update, Delete, Index. And how easy it would be to make a foundation for this to use for each Resource keeping the UI goals consistent and simple between these Resources. With this came also a set of API tests in Behat that could also be used with the project.","tags":["laravel","php","angular"],"title":"Reusable UI/API CRUD Laravel and Angular"},{"content":"I use one AngularController.php to render main.blade.php file that then renders angular. The only other blade file is the login page. I could have done this in the routes.php file but since the routes file has the login page I decided to place it in this controller.\n\u0026lt;?php namespace App\\Http\\Controllers;\ruse Illuminate\\Support\\Facades\\Blade;\ruse Illuminate\\Support\\Facades\\Config;\ruse Illuminate\\Support\\Facades\\View;\ruse Laracasts\\Utilities\\JavaScript\\Facades\\JavaScript;\r/**\r* @Middleware(\u0026quot;auth\u0026quot;)\r*/\rclass AngularController extends BaseController {\ruse UserHelper;\r/**\r* @var UserService\r*/\rprivate $userService;\rpublic function __construct(UserService $userService)\r{\r$this-\u0026gt;userService = $userService;\r}\r/**\r* @Get(\u0026quot;behat\u0026quot;, as=\u0026quot;behat.dash\u0026quot;)\r*/\rpublic function index()\r{\rBlade::setContentTags('\u0026lt;%', '%\u0026gt;'); // for variables and all things Blade\rBlade::setEscapedContentTags('\u0026lt;%%', '%%\u0026gt;'); // for escaped data\r$user_id = $this-\u0026gt;getUserId();\r$profile = $this-\u0026gt;userService-\u0026gt;getPerson($user_id);\r$token = csrf_token();\r$chat_on = Config::get('app.chat_on', true);\rJavaScript::put(\r[\r'pusher_public_key' =\u0026gt; $_ENV['PUSHER_PUBLIC'],\r'sauce_key' =\u0026gt; $_ENV['SAUCE_TOKEN'],\r'sauce_user' =\u0026gt; $_ENV['SAUCE_USER'],\r'profile' =\u0026gt; $profile,\r'token' =\u0026gt; $token,\r'debug' =\u0026gt; Config::get('app.debug'),\r]\r);\rreturn View::make('layouts.main', compact('chat_on'));\r}\r}\rThanks to http://scotch.io/bar-talk/quick-tip-using-laravel-blade-with-angularjs for the tip\n","relPermalink":"/posts/124/","summary":"I use one AngularController.php to render main.blade.php file that then renders angular. The only other blade file is the login page. I could have done this in the routes.php file but since the routes file has the login page I decided to place it in this controller.\n\u0026lt;?php namespace App\\Http\\Controllers;\ruse Illuminate\\Support\\Facades\\Blade;\ruse Illuminate\\Support\\Facades\\Config;\ruse Illuminate\\Support\\Facades\\View;\ruse Laracasts\\Utilities\\JavaScript\\Facades\\JavaScript;\r/**\r* @Middleware(\u0026quot;auth\u0026quot;)\r*/\rclass AngularController extends BaseController {\ruse UserHelper;\r/**\r* @var UserService\r*/\rprivate $userService;\rpublic function __construct(UserService $userService)\r{\r$this-\u0026gt;userService = $userService;\r}\r/**\r* @Get(\u0026quot;behat\u0026quot;, as=\u0026quot;behat.","tags":["note2self","angularjs","laravel"],"title":"Laravel Blade and Angular brackets"},{"content":"Originally I was going to go with one of the more well known packages but then I realized I wanted to show the history of the users states not the children of the state they are on. For example when the user lands on the website at say the path projects and then goes to projects/foo their breadcrumbs will look like this\nProjects / Project Foo\rAnd if they then go to project/foo/reports then it would be\nProjects / Project Foo / Reports\rSo no matter where they go it just keeps saving the from state to the history object and loads that.\nIdeally like many of the other modules this would be a good mix of a directive and a service. Right now it is setup like this but I will move it later into a package. (unless there already is one out there that I just could not google well enough?)\nConfig This is where I look at the \u0026ldquo;from state\u0026rdquo; to see if it has what I want and then save it to history. I also take a moment to keep history down to 5 items.\n angular\r.module('app')\r.config(config)\r.constant('ENV', constants())\r.run(function ($rootScope, $state, editableOptions, $location, $stateParams) {\reditableOptions.theme = 'bs3';\r$rootScope.$state = $state;\r$rootScope.history = [];\r$rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\rif($state.href(fromState, fromParams) \u0026amp;\u0026amp; fromState.data \u0026amp;\u0026amp; fromState.data.pageTitle)\r{\rif($rootScope.history.length \u0026gt; 5)\r{\r$rootScope.history = $rootScope.history.slice(1, $rootScope.history.length);\r}\r$rootScope.history.push({ label: fromState.data.pageTitle, url: $state.href(fromState, fromParams)});\r}\r});\r});\rPageTitle This happen to be a data object I had set on all my routes to begin with\n $stateProvider\r.state('profile', {\rurl: \u0026quot;/profile\u0026quot;,\rtemplateUrl: \u0026quot;/assets/js/profiles/templates/profile.html\u0026quot;,\rcontroller: 'ProfileEditCtrl',\rcontrollerAs: 'vm',\rresolve: {\rprofile: ['ProfilesService', function (ProfilesService) {\rreturn ProfilesService.getFull();\r}]\r},\rdata: {pageTitle: 'Profile'}\r});\r}\rThe Directive The directive is doing two things. I need to make it into two directives but for style reasons and timing I can not do that right now.\nJust taking the history and pageTitle and putting it into html\n(function(){\r'use strict';\rfunction appHeader() {\rvar directive = {\rrestrict: 'E',\rreplace: true,\rtransclude: true,\rscope: {\rpageTitle: '=',\rhistory: '='\r},\rtemplateUrl: \u0026quot;/assets/js/directives/templates/_header.directive.html\u0026quot;\r};\rreturn directive;\r}\rangular.module('app')\r.directive('appHeader', appHeader)\r})();\rThe directives template file you see above\nThe HTML / Page showing the breadcrumbs After all the above is in place you just need to add this to the pages you want this to be seen, or on some main page (ideally)\n\u0026lt;app-header page-title=\u0026quot;vm.pageTitle\u0026quot; history=\u0026quot;history\u0026quot;\u0026gt;\u0026lt;/app-header\u0026gt;\rYou end up with something like this Next step is to inject the title into the pageTitle so it would be the Project name. But right now I rather have the above so as a user I can easily go back to say \u0026ldquo;Batches\u0026rdquo; from where I am in the state.\n","relPermalink":"/posts/123/","summary":"Originally I was going to go with one of the more well known packages but then I realized I wanted to show the history of the users states not the children of the state they are on. For example when the user lands on the website at say the path projects and then goes to projects/foo their breadcrumbs will look like this\nProjects / Project Foo\rAnd if they then go to project/foo/reports then it would be","tags":["angularjs"],"title":"Angular History Based BreadCrumbs"},{"content":"Sometimes, when your frontend shares the same view rendering of the backend, you can store data in the window object. This can save you queries to the backend when, for example, Profile Data that shows on every pages request.\nEmbed output into window or $window In the Controller I am using to output the Angular template (app/views/main.blade.php for example) I inject the window data that I want all pages to have.\n\tpublic function index()\r{\r$user_id = $this-\u0026gt;getUserId();\r$profile = $this-\u0026gt;userService-\u0026gt;getJustProfile($user_id);\r$token = csrf_token();\rJavaScript::put(\r[\r'profile' =\u0026gt; $profile,\r'token' =\u0026gt; $token\r]\r);\rreturn View::make('layouts.main');\r}\rSo every time the template is rendered it will add this data to the output. Later on I make use of that inside my Angular app using a MainCtrl.\nMainCtrl Wrapping it All \u0026lt;body ng-controller=\u0026quot;MainCtrl as main\u0026quot;\u0026gt;\rThis controller gets called at every page load to setup this base info for the site.\n(function(){\r'use strict';\rfunction MainCtrl($rootScope, $window) {\rvar vm = this;\rvm.profile = {};\rvm.activate = activate;\rvm.activate();\r///////\rfunction activate()\r{\rvm.profile = $window.profile;\r}\r}\r/**\r*\r* Pass all functions into module\r*/\rangular\r.module('app')\r.controller('MainCtrl ', MainCtrl)\r})();\rTemplate calling to Main Now on those page that renders the profile image, name and email on the top left of the site I call to that scope.\n\u0026lt;nav class=\u0026quot;navbar-default navbar-static-side\u0026quot; role=\u0026quot;navigation\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;sidebar-collapse\u0026quot;\u0026gt;\r\u0026lt;ul side-navigation class=\u0026quot;nav\u0026quot; id=\u0026quot;side-menu\u0026quot;\u0026gt;\r\u0026lt;li class=\u0026quot;nav-header\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;dropdown profile-element\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;row\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;col-lg-6 col-md-6 col-sm-6 col-xs-6\u0026quot;\u0026gt;\r\u0026lt;a ui-sref=\u0026quot;profile\u0026quot;\u0026gt;\r\u0026lt;img alt=\u0026quot;image\u0026quot; class=\u0026quot;img-responsive img-circle\u0026quot; src=\u0026quot;img/profiles/{{main.profile.image}}\u0026quot;/\u0026gt;\r\u0026lt;/a\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;a class=\u0026quot;dropdown-toggle\u0026quot; href\u0026gt;\r\u0026lt;span class=\u0026quot;clear\u0026quot;\u0026gt;\r\u0026lt;span class=\u0026quot;block m-t-xs\u0026quot;\u0026gt;\r\u0026lt;strong class=\u0026quot;font-bold\u0026quot;\u0026gt;\r{{ main.profile.email }}\r\u0026lt;/strong\u0026gt;\r\u0026lt;/span\u0026gt;\r\u0026lt;span class=\u0026quot;text-muted text-xs block\u0026quot;\u0026gt;Profile\u0026lt;b class=\u0026quot;caret\u0026quot;\u0026gt;\u0026lt;/b\u0026gt;\u0026lt;/span\u0026gt;\r\u0026lt;/span\u0026gt;\r\u0026lt;/a\u0026gt;\r\u0026lt;ul class=\u0026quot;dropdown-menu animated fadeInRight m-t-xs\u0026quot;\u0026gt;\r\u0026lt;li\u0026gt;\u0026lt;a ui-sref=\u0026quot;profile\u0026quot;\u0026gt;Profile\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r\u0026lt;li class=\u0026quot;divider\u0026quot;\u0026gt;\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;/auth/logout\u0026quot;\u0026gt;Logout\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;logo-element\u0026quot;\u0026gt;\rBE\r\u0026lt;/div\u0026gt;\r\u0026lt;/li\u0026gt;\r","relPermalink":"/posts/122/","summary":"Sometimes, when your frontend shares the same view rendering of the backend, you can store data in the window object. This can save you queries to the backend when, for example, Profile Data that shows on every pages request.\nEmbed output into window or $window In the Controller I am using to output the Angular template (app/views/main.blade.php for example) I inject the window data that I want all pages to have.","tags":["php","laravel","angularjs"],"title":"Embed Template Data in View (Angular, Laravel)"},{"content":"We are using a number of external APIs on a project (Pusher, Iron.io, Github, Saucelabs etc). Github is key as we are using it to store and retrieve files from for editing on the site. When running phpunit it is easy to mock these Classes but when running behat tests or protractor we had to do to things to make it possible to mock the tests and not hit the external APIs.\nSwapping out Providers Using Laravel\u0026rsquo;s config/app.php settings we can easily swap out providers for different environments. For example config/testing/app.php could register my GithubMock class.\nThe GithubMock class just extends the real Github Service but overrides the methods that I do not want to really call out to Github eg create file, update file etc.\nThat is super easy but now how to return good data.\nQuick Fixtures I made a Facade package called Fixturizer https://github.com/alfred-nutile-inc/fixturizer\nYou can see in the readme.md how to use it to quickly write and read fixture data that you can get from any of these requests. Then when it is the turn of the mocked provider to return the results it just loads up this fixture and you are set. (PHP VCR is another option as well)\nOne example\n public function tokens($path)\r{\r$this-\u0026gt;logMock('tokens');\r$files = FixturizerReader::getFixture('github_token_show.yml', $this-\u0026gt;path);\rreturn $files;\r}\rThe method overrides the parent class (the real provider) \u0026ldquo;tokens\u0026rdquo; and returns the needed fixture info. I log it as well so I can double check the status of it.\nNow the tests not only run faster but are less fragile since sometimes the services would timeout.\n","relPermalink":"/posts/121/","summary":"We are using a number of external APIs on a project (Pusher, Iron.io, Github, Saucelabs etc). Github is key as we are using it to store and retrieve files from for editing on the site. When running phpunit it is easy to mock these Classes but when running behat tests or protractor we had to do to things to make it possible to mock the tests and not hit the external APIs.","tags":["laravel","php"],"title":"Quick fixture data and mocking external APIs"},{"content":"As I wrote about here I am using behat to tests our APIs. I could have used Laravel\u0026rsquo;s guzzle and phpunit integration to test the controllers but I decided to go with Behat. But this means when hitting those endpoints I need to find another way to mock services.\nSince Laravel has you register Providers you can easily replace or override a provider. In this case the \u0026ldquo;\u0026lsquo;Illuminate\\Queue\\QueueServiceProvider\u0026rsquo;\u0026rdquo; provider with my own.\nThis allows me to test in my endpoints leaving the queue related classes to be tested during phpunit testing. Using the queue \u0026ldquo;sync\u0026rdquo; driver would help too but it would then cause this to not be an isolated tests since the queue would trigger another classes method. (@fire).\nSetup a class to use as the new provider \u0026lt;?php\rnamespace App\\Providers;\ruse Illuminate\\Queue\\QueueServiceProvider;\ruse Illuminate\\Support\\Facades\\Log;\ruse Illuminate\\Support\\ServiceProvider;\ruse Mockery as m;\rclass MockedQueue {\rpublic function push($args)\r{\rreturn true;\r}\r}\rclass QueueMockProvider extends QueueServiceProvider {\r/**\r* Register the service provider.\r*\r* @return void\r*/\rpublic function register()\r{\rif(getenv('APP_ENV') == 'local' || getenv('APP_ENV') == 'testing')\r{\r$this-\u0026gt;app-\u0026gt;bind('queue', function(){\r$queue = new MockedQueue();\rLog::info(\u0026quot;Mock queue in use\u0026quot;);\rreturn $queue;\r});\r} else {\rparent::register();\r}\r}\r}\rRegister Mocked Queue over Real Queue Instead of setting it for config/local/queue.php and config/testing/queue.php I set it in the main config/app.php. I would like to come back to using the config/app.php but had some issues.\n'Illuminate\\Queue\\QueueServiceProvider',\rbecomes\n'App\\Providers\\QueueMockProvider',\rThat was it. From there on my queue related API tests did not trigger a queued job which in this case was supper helpful those where calling external APIs.\n","relPermalink":"/posts/120/","summary":"As I wrote about here I am using behat to tests our APIs. I could have used Laravel\u0026rsquo;s guzzle and phpunit integration to test the controllers but I decided to go with Behat. But this means when hitting those endpoints I need to find another way to mock services.\nSince Laravel has you register Providers you can easily replace or override a provider. In this case the \u0026ldquo;\u0026lsquo;Illuminate\\Queue\\QueueServiceProvider\u0026rsquo;\u0026rdquo; provider with my own.","tags":["behat","laravel","php"],"title":"Mocking Queue Service for faster Behat Testing"},{"content":"I wrote an article on Mailcatcher and Homestead here but as I move into docker I wanted the same setup for my docker website container which was super easy.\nFirst I downloaded this docker images and ran the command as he noted. Once done I had the website up and running.\nFrom there I just started my website container and made a link.\ndocker run -d -p 80:80 --name website --link mailcatcher:mailcatcher -v $PWD:/share alnutile/nginxlaravel:0.3.4 /sbin/my_init\rFrom there I was able to use the server set environments to connect to it as needed. Or more simply I just updated my local/mail.php as follows\n\u0026lt;?php\rreturn array(\r'driver' =\u0026gt; 'smtp',\r'host' =\u0026gt; getenv('MAILCATCHER_PORT_1080_TCP_ADDR'),\r'port' =\u0026gt; 1025,\r'from' =\u0026gt; array('address' =\u0026gt; 'foobar@gmail.com', 'name' =\u0026gt; 'Behat Editor Admin'),\r'encryption' =\u0026gt; '',\r'username' =\u0026gt; null,\r'password' =\u0026gt; null,\r'pretend' =\u0026gt; false,\r);\rNow I get to see the email as a user would see it and click around as needed!\n","relPermalink":"/posts/118/","summary":"I wrote an article on Mailcatcher and Homestead here but as I move into docker I wanted the same setup for my docker website container which was super easy.\nFirst I downloaded this docker images and ran the command as he noted. Once done I had the website up and running.\nFrom there I just started my website container and made a link.\ndocker run -d -p 80:80 --name website --link mailcatcher:mailcatcher -v $PWD:/share alnutile/nginxlaravel:0.","tags":["laravel","php"],"title":"Docker, MailCatcher and Laravel"},{"content":"UPDATE\nYou can see in the comments some updated info.\nWhen a user visits an Angular url (not html5) like http://foo.com/app#some/long/path\nThen gets redirected to http://foo.com/auth/login because they are not logged in. It would be nice to send them right back after that.\nThese steps will make that possible.\nInclude this file in your authentication page.\n#intended.js\r(function(){\r'use strict';\rvar intended = window.location.hash;\r(intended.length \u0026gt; 0) ? jQuery.cookie('intended', '/app' + intended) : jQuery.cookie('intended', '/app');\r})();\rThen add this library to your app jquery.cookies.js and load that, this script and of course jquery.\nFinally after an successful auth add this\nreturn Redirect::to($_COOKIE['intended']);\rLaravel 4.2 = app/controllers/AuthController.php:61\nLaravel 5 = app/Http/Controllers/AuthController.php:52\n","relPermalink":"/posts/119/","summary":"UPDATE\nYou can see in the comments some updated info.\nWhen a user visits an Angular url (not html5) like http://foo.com/app#some/long/path\nThen gets redirected to http://foo.com/auth/login because they are not logged in. It would be nice to send them right back after that.\nThese steps will make that possible.\nInclude this file in your authentication page.\n#intended.js\r(function(){\r'use strict';\rvar intended = window.location.hash;\r(intended.length \u0026gt; 0) ? jQuery.cookie('intended', '/app' + intended) : jQuery.","tags":["laravel","php","angular"],"title":"Redirecting back to original Angular.js destination from Laravel Auth"},{"content":"You can use VCR or other libraries to make fixture data. But sometimes you can just make the request and save the results using this technique. From then on you mock and return the data.\nGet the data. In this example I had a Client that would get data and return it for import. I was testing out the class that would take this data and import it and do other things. So I make my phpunit test methods of that class (not the Client it is fully tested)\n\r/**\r* @test\r*/\rpublic function should_get_data_to_import()\r{\r//Load up the client I will later mock, but to get some data to mock\r$client = new Client();\r//Get the results (api return json)\r$results = $client-\u0026gt;getData();\r//Get the yaml library I am using to covert it to Yaml\r$yaml = new Yaml();\r//Convert it to Yaml from Array\r$results_yml = $yaml-\u0026gt;dump($results);\r//Save it for now\rfile_put_contents('/tmp/data.yml', $results_yml);\r}\rOnce that is done I copy that data.yml file to fixtures/data.yml which is in the tests folder. Here is a quick look at the folders.\ntests\rtests/fixtures\r// @NOTE this is the file we are using for the test example above\rtests/NameSpace/Tests/ClassTest.php Finally I rewrite that same test method as\n/**\r* @test\r*/\rpublic function should_get_data_to_import()\r{\r$yaml = new Yaml();\r$fixture = $yaml-\u0026gt;parse(__DIR__ . '/../fixtures/data.yml');\r$client = m::mock();\r$client-\u0026gt;shouldReceive('getData')-\u0026gt;andReturn($fixture);\r$classTesting new ClassTest($client); //we inject the mock into it\r$classTesting-\u0026gt;importData();\r$this-\u0026gt;assertCount(100, $classTesting-\u0026gt;getDataImported()); }\rThe client in this case if a fully tested standalone client so I am not testing it. Just my use of it to migrate data.\n","relPermalink":"/posts/117/","summary":"You can use VCR or other libraries to make fixture data. But sometimes you can just make the request and save the results using this technique. From then on you mock and return the data.\nGet the data. In this example I had a Client that would get data and return it for import. I was testing out the class that would take this data and import it and do other things.","tags":["php","phpunit","testing"],"title":"PHP quick fixture data for phpunit testing"},{"content":"Need to quickly setup ssl and default to that for our sites.\nThis article made it simple stupid for getting the certs setup.\nThen I wrapped up the redirect as seen below\nserver {\rlisten 80;\rlisten 443 ssl;\rserver_name somesite-dev.stagingarea.info;\rroot /home/someuser/somesite-dev.stagingarea.info/public;\rssl on;\rssl_certificate /etc/nginx/ssl/nginx.crt;\rssl_certificate_key /etc/nginx/ssl/nginx.key;\r# Prevent a look\rif ($ssl_protocol = \u0026quot;\u0026quot;) {\rrewrite ^ https://$server_name$request_uri? permanent;\r}\rindex index.html index.htm index.php;\rcharset utf-8;\r}\rThanks to this post as well http://serverfault.com/a/298803\nStill a mystery but\nservice nginx restart was not working had to do\n/etc/init.d/nginx restart\rto get the server to reload.\n","relPermalink":"/posts/116/","summary":"Need to quickly setup ssl and default to that for our sites.\nThis article made it simple stupid for getting the certs setup.\nThen I wrapped up the redirect as seen below\nserver {\rlisten 80;\rlisten 443 ssl;\rserver_name somesite-dev.stagingarea.info;\rroot /home/someuser/somesite-dev.stagingarea.info/public;\rssl on;\rssl_certificate /etc/nginx/ssl/nginx.crt;\rssl_certificate_key /etc/nginx/ssl/nginx.key;\r# Prevent a look\rif ($ssl_protocol = \u0026quot;\u0026quot;) {\rrewrite ^ https://$server_name$request_uri? permanent;\r}\rindex index.html index.htm index.php;\rcharset utf-8;\r}\rThanks to this post as well http://serverfault.","tags":["nginx"],"title":"Nginx force SSL"},{"content":"Angular seems to, by default, easily deal with milliseconds, https://docs.angularjs.org/api/ng/filter/date.\nLaravel outputs created_at as a YYYY-MM-DD HH:MM:SS format that just does not work well with the Angular date filter.\nIt is really simple to change the output of the date in Laravel just add this to your Model or BaseModel or even better Trait\n /**\r* Leave as Timestamps for Angular\r* @return array\r*/\rpublic function getDates()\r{\rreturn [];\r}\rpublic function getCreatedAtAttribute($value)\r{\r$value = date('U', strtotime($value));\rreturn $value * 1000;\r}\rpublic function getUpdatedAtAttribute($value)\r{\r$value = date('U', strtotime($value));\rreturn $value * 1000;\r}\rThis is noted in the docs as well http://laravel.com/docs/4.2/eloquent#date-mutators and http://laravel.com/docs/4.2/eloquent#accessors-and-mutators\nThen in Angular I can easily format the date\n\u0026lt;small\u0026gt;Created: {{ project.created_at | date:'yyyy-MM-dd' }}\u0026lt;/small\u0026gt;\r","relPermalink":"/posts/114/","summary":"Angular seems to, by default, easily deal with milliseconds, https://docs.angularjs.org/api/ng/filter/date.\nLaravel outputs created_at as a YYYY-MM-DD HH:MM:SS format that just does not work well with the Angular date filter.\nIt is really simple to change the output of the date in Laravel just add this to your Model or BaseModel or even better Trait\n /**\r* Leave as Timestamps for Angular\r* @return array\r*/\rpublic function getDates()\r{\rreturn [];\r}\rpublic function getCreatedAtAttribute($value)\r{\r$value = date('U', strtotime($value));\rreturn $value * 1000;\r}\rpublic function getUpdatedAtAttribute($value)\r{\r$value = date('U', strtotime($value));\rreturn $value * 1000;\r}\rThis is noted in the docs as well http://laravel.","tags":["laravel","php"],"title":"Laravel and Angular Time/Date Display"},{"content":"As we start to move off of Forge I still want the automation to take place after all tests pass.\nIn Codeship or Locally I just follow some instructions from here http://laravel.com/docs/4.2/ssh\nLocally Setup Envoy globally as noted.\nRun envoy init\nAnd then I pasted this into my Envoy.blade.php\n@servers(['dev' =\u0026gt; 'behat_dev'])\r@task('deploy_dev', ['on' =\u0026gt; 'dev'])\rdate\rcd /home/forge/foo-dev\rgit pull origin dev\rcomposer config -g github-oauth.github.com sometoken\rcomposer install\rcomposer dump-autoload\rphp artisan dump-autoload\rphp artisan migrate\rphp artisan migrate:refresh --seed\r~/node_modules/bower/bin/bower install\rnpm install\rphp artisan queue:restart\r@endtask\rSetup you .ssh config The behat_dev is a shortcut to the server I made in my ~/.ssh/config\nHost foo_dev\rHostname 104.111.111.111\rUser forge\rSo now locally I can run\nenvoy run deploy_dev\rCodeship Setup the server\nsudo composer global require \u0026quot;laravel/envoy=~1.0\u0026quot;\rEdit your ~/.ssh/config\nHost behat_dev\rHostname localhost\rUser forge\rMake sure to put your key into authorized keys\ncd .ssh\rcat id_rsa.pub \u0026gt;\u0026gt; authorized_keys\rTry logging in\nssh behat_dev\rThen setup codeship\nUnder the Deployment settings use script\nssh forge@104.111.111.111 'cd ~/foo-dev \u0026amp;\u0026amp; envoy run deploy_dev'\rMake sure you codeship public key is also on the destination server\n","relPermalink":"/posts/115/","summary":"As we start to move off of Forge I still want the automation to take place after all tests pass.\nIn Codeship or Locally I just follow some instructions from here http://laravel.com/docs/4.2/ssh\nLocally Setup Envoy globally as noted.\nRun envoy init\nAnd then I pasted this into my Envoy.blade.php\n@servers(['dev' =\u0026gt; 'behat_dev'])\r@task('deploy_dev', ['on' =\u0026gt; 'dev'])\rdate\rcd /home/forge/foo-dev\rgit pull origin dev\rcomposer config -g github-oauth.github.com sometoken\rcomposer install\rcomposer dump-autoload\rphp artisan dump-autoload\rphp artisan migrate\rphp artisan migrate:refresh --seed\r~/node_modules/bower/bin/bower install\rnpm install\rphp artisan queue:restart\r@endtask\rSetup you .","tags":["laravel","php"],"title":"Moving Forge Deploy Script to Envoy"},{"content":"To start using Dotenv now it is very simple.\nOne include the library #composer.js\r\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;4.2.*\u0026quot;,\r\u0026quot;vlucas/phpdotenv\u0026quot;: \u0026quot;1.0.*@dev\u0026quot;\r},\rTwo update your start.php #bootstrap/start.php line 27\rDotenv::load(__DIR__ .'/../');\r$env = $app-\u0026gt;detectEnvironment(\rfunction()\r{\rreturn getenv('APP_ENV');\r}\r);\rMake sure to set your .env file #.env\rAPP_ENV='local'\rThat is it you are set to use it for all your environments.\nUpdate\nFor Heroku I used this instead\n$env = $app-\u0026gt;detectEnvironment(\rfunction()\r{\rif(!isset(getenv('APP_ENV')))\r{\rDotenv::load(__DIR__ .'/../');\r}\rreturn getenv('APP_ENV');\r}\r);\rSetting the initial APP_ENV using heroku config:set APP_ENV=stage\n","relPermalink":"/posts/113/","summary":"To start using Dotenv now it is very simple.\nOne include the library #composer.js\r\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;4.2.*\u0026quot;,\r\u0026quot;vlucas/phpdotenv\u0026quot;: \u0026quot;1.0.*@dev\u0026quot;\r},\rTwo update your start.php #bootstrap/start.php line 27\rDotenv::load(__DIR__ .'/../');\r$env = $app-\u0026gt;detectEnvironment(\rfunction()\r{\rreturn getenv('APP_ENV');\r}\r);\rMake sure to set your .env file #.env\rAPP_ENV='local'\rThat is it you are set to use it for all your environments.\nUpdate\nFor Heroku I used this instead\n$env = $app-\u0026gt;detectEnvironment(\rfunction()\r{\rif(!","tags":["laravel","php"],"title":"Laravel 4.2 and Dotenv to set environment"},{"content":"This article covers some good tips on this. Ideally you do not hit the database in unit tests but sometimes you do. Also in behat it hits the db all the time since it is at the Acceptance level.\nSqlite It is a great database and works. We easily can use it on running tests. When seeding the db I have my main seeding class doing this\n\u0026lt;?php\ruse Illuminate\\Database\\Seeder;\ruse Illuminate\\Database\\Eloquent\\Model;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\Config;\ruse Illuminate\\Support\\Facades\\DB;\rclass DatabaseSeeder extends Seeder {\r/**\r* Run the database seeds.\r*\r* @return void\r*/\rpublic function run()\r{\rModel::unguard();\rif(App::environment() != 'testing') {\rDB::statement('SET FOREIGN_KEY_CHECKS=0;');\r}\r$this-\u0026gt;call('AppTableSeeder');\r$this-\u0026gt;call('ParentRequestExample');\r$this-\u0026gt;call('ProductionSeeder');\rif(App::environment() != 'testing') {\rDB::statement('SET FOREIGN_KEY_CHECKS=1;');\r}\r}\r}\rSince sqlite does not like this we skip it for it but not for production etc.\nSecond my config/testing/database.php looks like this (as noted in the article)\n\u0026lt;?php\rreturn [\r'default' =\u0026gt; 'sqlite',\r'connections' =\u0026gt; [\r'mysql' =\u0026gt; [\r'driver' =\u0026gt; 'mysql',\r'host' =\u0026gt; $_ENV['DB_URL'],\r'database' =\u0026gt; $_ENV['DB_NAME'],\r'username' =\u0026gt; $_ENV['MYSQL_USER'],\r'password' =\u0026gt; $_ENV['MYSQL_PASSWORD'],\r'charset' =\u0026gt; 'utf8',\r'collation' =\u0026gt; 'utf8_unicode_ci',\r'prefix' =\u0026gt; '',\r],\r'pgsql' =\u0026gt; [\r'driver' =\u0026gt; 'pgsql',\r'host' =\u0026gt; 'localhost',\r'database' =\u0026gt; 'homestead',\r'username' =\u0026gt; 'homestead',\r'password' =\u0026gt; 'secret',\r'charset' =\u0026gt; 'utf8',\r'prefix' =\u0026gt; '',\r'schema' =\u0026gt; 'public',\r],\r'setup' =\u0026gt; array(\r'driver' =\u0026gt; 'sqlite',\r'database' =\u0026gt; __DIR__.'/../../database/stubdb.sqlite',\r'prefix' =\u0026gt; '',\r),\r'sqlite' =\u0026gt; array(\r'driver' =\u0026gt; 'sqlite',\r'database' =\u0026gt; __DIR__ . '/../../database/testing.sqlite',\r'prefix' =\u0026gt; '',\r),\r],\r];\rWhich makes the below seeding command to setup the stub db work\nphp artisan migrate:refresh --seed --database=\u0026quot;setup\u0026quot; --env=\u0026quot;testing\u0026quot;\rPHPUnit What I ended up with is a base TestCase like this\n\rpublic function setUp()\r{\rparent::setUp();\r$this-\u0026gt;faker = Faker::create();\r$this-\u0026gt;prepareForTests();\r}\rprivate function prepareForTests()\r{\rif(!file_exists(base_path() . '/app/database/testing.sqlite'))\r{\r$this-\u0026gt;refreshDb();\r}\r}\rpublic function refreshDb()\r{\rcopy(base_path() . '/app/database/stubdb.sqlite', base_path() . '/app/database/testing.sqlite');\r}\rAnd with any new migrations I run this command\nphp artisan migrate:refresh --seed --database=\u0026quot;setup\u0026quot; --env=\u0026quot;testing\u0026quot;\rThat file is kept in git since it is just seed data. If there are any conflicts just rm and start over. Testing.sqlite is not kept in git.\n#Behat\nBehat is the same idea. In the main FeatureContext file I have\n\r/**\r* @Given /^I reseed the database$/\r*/\rpublic function iReseedTheDatabase()\r{\rtry\r{\rdd(getenv('APP_ENV'));\r//exec(\u0026quot;php artisan migrate:refresh --seed\u0026quot;);\rcopy(__DIR__ . '/../../../../database/stubdb.sqlite', __DIR__ . '/../../../../database/testing.sqlite');\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(sprintf(\u0026quot;Error seeding the database %s\u0026quot;, $e-\u0026gt;getMessage()));\r}\r}\rSo as we test the ui or api we can reload the data.\n#Behat / Laravel\nThis package https://github.com/GuilhermeGuitte/behat-laravel\nThis integrates behat into artisan command line helping with environment settings for behat.\n","relPermalink":"/posts/112/","summary":"This article covers some good tips on this. Ideally you do not hit the database in unit tests but sometimes you do. Also in behat it hits the db all the time since it is at the Acceptance level.\nSqlite It is a great database and works. We easily can use it on running tests. When seeding the db I have my main seeding class doing this\n\u0026lt;?php\ruse Illuminate\\Database\\Seeder;\ruse Illuminate\\Database\\Eloquent\\Model;\ruse Illuminate\\Support\\Facades\\App;\ruse Illuminate\\Support\\Facades\\Config;\ruse Illuminate\\Support\\Facades\\DB;\rclass DatabaseSeeder extends Seeder {\r/**\r* Run the database seeds.","tags":["laravel","php","behat","phpunit"],"title":"Speeding up PHPunit tests and Behat in Laravel for Database refreshes"},{"content":"This will cover\n Making an Angular factory to centralize Pusher setup in Angular Passing settings form Laravel to Angular (though could be just Angular and a .env file as well) Passing Constants into the Angular App to pass these settings around, in this case to the Pusher Factory.  Setup your constants This is where I call in the info I need to use later on.\n(function(){\rfunction config($stateProvider, $urlRouterProvider) {\r$urlRouterProvider.otherwise(\u0026quot;/dashboard\u0026quot;);\r$stateProvider\r.state('dashboard', {\rurl: \u0026quot;/dashboard\u0026quot;,\rviews: {\r'': {\rcontroller: 'DashCtrl',\rcontrollerAs: 'vm',\rresolve: {\rreports: ['ReportsService', function(ReportsService)\r{\rreturn ReportsService.get();\r}]\r},\rtemplateUrl: \u0026quot;/assets/js/dashboard/templates/dashboard.html\u0026quot;\r};\r}\rfunction constants() {\rreturn { 'pusher_public_key': window.pusher_public_key }\r}\rangular\r.module('app')\r.config(config)\r.constant('ENV', constants())\r.run(function($rootScope, $state) {\r$rootScope.$state = $state;\r});\r})();\rSo now we have the constants in place that are used by our factory below\nThe Pusher Factory (function(){\r'use strict';\rfunction PusherService(ENV)\r{\rvar vm = this;\rvm.pusher = {};\rvm.ENV = ENV; //We set this up above on the constants area.\rvm.channelSet = {};\rvm.activate = activate;\rvm._subscribeToChannel = _subscribeToChannel;\rvm._channelBind = _channelBind;\rvm.PusherService = {\rsetPusher: setPusher\r};\rvm.activate();\r////\rfunction activate()\r{\rconsole.log(vm.ENV);\rvm.pusher = new Pusher(vm.ENV.pusher_public_key);\r}\rfunction setPusher(channel, event, callback)\r{\rvm._subscribeToChannel(channel);\rvm._channelBind(event, callback);\r}\rfunction _subscribeToChannel(channel)\r{\rvm.channelSet = vm.pusher.subscribe(channel);\r}\rfunction _channelBind(event_name, callback)\r{\rvm.channelSet.bind(event_name, callback);\r}\rreturn vm.PusherService;\r}\rangular.module('app')\r.factory('PusherService', PusherService);\r})();\rLaravel now need to load the settings in the .env file so Angular can access them later. Of course this could purely be Angular.js loading them from a config file that is not in git but relative to a server, local dev area etc.\nI set this all up user https://github.com/laracasts/PHP-Vars-To-Js-Transformer\nI run the config command note the change\nphp artisan publish:config laracasts/utilities\rThen I edit that file\nconfig/packages/laracasts/utilities/config.php\rTo be\n\u0026lt;?php\rreturn [\r/*\r|--------------------------------------------------------------------------\r| View to Bind JavaScript Vars To\r|--------------------------------------------------------------------------\r|\r| Set this value to the name of the view (or partial) that\r| you want to prepend the JavaScript variables to.\r|\r*/\r'bind_js_vars_to_this_view' =\u0026gt; 'layouts/main',\r/*\r|--------------------------------------------------------------------------\r| JavaScript Namespace\r|--------------------------------------------------------------------------\r|\r| By default, we'll add variables to the global window object.\r| It's recommended that you change this to some namespace - anything.\r| That way, from your JS, you may do something like `Laracasts.myVar`.\r|\r*/\r'js_namespace' =\u0026gt; 'window'\r];\rThe resources/views/layouts/main.blade.php the only trick here is any Angular related {{ brackets need to be @{{ to tell blade to ignore them.\nFinally my AngularController which renders the ONE page Laravel is in charge of besides login.\n\u0026lt;?php namespace App\\Http\\Controllers;\ruse Laracasts\\Utilities\\JavaScript\\Facades\\JavaScript;\r/**\r* @Middleware(\u0026quot;auth\u0026quot;)\r*/\rclass AngularController extends BaseController {\r/**\r* @Get(\u0026quot;dash\u0026quot;, as=\u0026quot;dash\u0026quot;)\r*/\rpublic function index()\r{\rJavaScript::put([\r'pusher_public_key' =\u0026gt; $_ENV['PUSHER_PUBLIC']]);\rreturn view('layouts.main');\r}\r}\rIf you have more than on View the share option might work http://laravel.com/docs/master/views\n","relPermalink":"/posts/111/","summary":"This will cover\n Making an Angular factory to centralize Pusher setup in Angular Passing settings form Laravel to Angular (though could be just Angular and a .env file as well) Passing Constants into the Angular App to pass these settings around, in this case to the Pusher Factory.  Setup your constants This is where I call in the info I need to use later on.\n(function(){\rfunction config($stateProvider, $urlRouterProvider) {\r$urlRouterProvider.","tags":["angular","laravel"],"title":"Angular Pusher Factory to Centralize Code (also using Laravel to set constants and properties)"},{"content":"This is key to preventing Cross-site request forgery. Basically you log in and do some work on one site, then go to a malicious site and now they can send POST requests to the sites you have authentication to. But by passing a token we can prevent that issue.\nThe steps\n Make a token path Make a token service to use again and again in Angular.js Add it as a resolve to the route in Angular.js Add it to your forms  Make a token path In this case it is Laravel and I just add this route (in a Controller or route.php same idea)\n /**\r* @Get(\u0026quot;auth/token\u0026quot;)\r*/\rpublic function getToken()\r{\rreturn csrf_token();\r}\rMake your Angular Service and inject it into the Controller Service in this case is\n(function(){\r'use strict';\rfunction TokenService($http)\r{\rreturn {\rget: get\r};\r////\rfunction get() {\rreturn $http.get('auth/token').then(\rsuccess,\rfail\r);\r}\rfunction success(response) {\rreturn response;\r}\rfunction fail(response) {\rreturn response;\r}\r}\rangular\r.module('app')\r.factory('TokenService', TokenService);\r})();\rThe ui router passes it in on this POST related route\n .state('projects_create', {\rurl: '/projects/create',\rviews: {\r'': {\rtemplateUrl: 'assets/js/projects/templates/projects.edit.html',\rresolve: {\rproject: ['ProjectsService', function(ProjectsService){\rreturn ProjectsService.create();\r}],\rtoken: ['TokenService', function(TokenService) {\rreturn TokenService.get();\r}]\r},\rcontroller: 'ProjectsCreateCtrl',\rcontrollerAs: 'vm'\r}\r}\r})\rSince it is a promise and in the resolve we get the benefits of not loading the page till this is done loading. A nice addition here could be getting is current_user info etc.\nAdd it to your Angular Controller\n function ProjectsCreateCtrl(project, token, ProjectHelpers, $window, Noty)\r{\rvar vm = this;\rvm.token = token.data;\rLater, using Restangular, during the post I add it to the payload. So when the user clicks Create Project they trigger this.\nfunction saveProject()\r{\rvm.rest.route = 'api/v1/projects';\rvm.rest._token = vm.token;\rvm.rest.post()\r.then(function(response) {\rvm.success(response);\r}, function(response){\rvm.fail(response);\r});\r}\rThat is it. You can see it in the form\nAnd you can remove it to show the form fail.\nYou can also see it in the payload we are posting.\n","relPermalink":"/posts/110/","summary":"This is key to preventing Cross-site request forgery. Basically you log in and do some work on one site, then go to a malicious site and now they can send POST requests to the sites you have authentication to. But by passing a token we can prevent that issue.\nThe steps\n Make a token path Make a token service to use again and again in Angular.js Add it as a resolve to the route in Angular.","tags":["angularjs","laravel","l5","csrf"],"title":"CSRF Tokens and Angular.js "},{"content":"Auth updates First make sure your composer update has the latest Laravel and check that there are not relevant fixes already via laravel/docs master laravel/framework master or laravel/laravel dev\nMoved evn files to the new format and only 1 is needed now having the\nAPP_ENV='local' setting for the environment.\nThen update the path in the AuthController to go to auth/login\n#app/Http/Controllers/Auth/AuthController\rpublic function login(LoginRequest $request)\r{\rif ($this-\u0026gt;auth-\u0026gt;attempt($request-\u0026gt;only('email', 'password')))\r{\rreturn redirect('/');\r}\rreturn redirect('/auth/login')-\u0026gt;withErrors([\r'email' =\u0026gt; 'The credentials you entered did not match our records. Try again?',\r]);\r}\rHere is a good article on using annotations which are needed now in the controller.\nhttp://mattstauffer.co/blog/laravel-5.0-route-annotations\nFor example I remove api/v1/projects from routes.php (which is key it can not be in both)\nThen in the ProjectsController.php I added this to the top of the class\n/**\r* @Middleware(\u0026quot;BehatEditor\\Http\\Middleware\\AuthMiddleware\u0026quot;)\r* @Before(\u0026quot;auth\u0026quot;)\r*/\rclass ProjectsController extends BaseController {\rand in the index function\n\r/**\r* @Get(\u0026quot;api/v1/projects\u0026quot;, as=\u0026quot;api.v1.projects\u0026quot;)\r* @return mixed\r*/\rpublic function index()\r{\rtry\r{\r$results = $this-\u0026gt;service-\u0026gt;getAllProjectsForThisUser();\r/**\r* @TODO move Response to a class to not have it tightly coupled here\r*/\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Loaded Projects\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), \u0026quot;Error Getting Project Failed\u0026quot;), 422);\r}\r}\rSo the route is now api/v1/projects using Get and the route name for ease of use is api.v1.projects\nThen I ran\nphp artisan route:scan to get this file made for me\nstorage/framework/routes.scanned.php\rInside we see\n\u0026lt;?php $router-\u0026gt;get('auth/login', ['uses' =\u0026gt; 'App\\Http\\Controllers\\Auth\\AuthController@showLoginForm', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; NULL, 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'csrf',\r1 =\u0026gt; 'guest',\r), 'where' =\u0026gt; array (\r)]);\r$router-\u0026gt;post('auth/login', ['uses' =\u0026gt; 'App\\Http\\Controllers\\Auth\\AuthController@login', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; NULL, 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'csrf',\r1 =\u0026gt; 'guest',\r), 'where' =\u0026gt; array (\r)]);\r$router-\u0026gt;get('auth/logout', ['uses' =\u0026gt; 'App\\Http\\Controllers\\Auth\\AuthController@logout', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; NULL, 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'csrf',\r1 =\u0026gt; 'guest',\r), 'where' =\u0026gt; array (\r)]);\r$router-\u0026gt;get('api/v1/sites/reports', ['uses' =\u0026gt; 'App\\Http\\Controllers\\DashController@getDash', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; 'sites.reports', 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'App\\\\Http\\\\Middleware\\\\AuthMiddleware',\r), 'where' =\u0026gt; array (\r)]);\r$router-\u0026gt;get('api/v1/projects', ['uses' =\u0026gt; 'App\\Http\\Controllers\\ProjectsController@index', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; 'api.v1.projects', 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'App\\\\Http\\\\Middleware\\\\AuthMiddleware',\r), 'where' =\u0026gt; array (\r)]);\r$router-\u0026gt;get('sites', ['uses' =\u0026gt; 'App\\Http\\Controllers\\SitesController@index', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; 'sites.index', 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'App\\\\Http\\\\Middleware\\\\AuthMiddleware',\r), 'where' =\u0026gt; array (\r)]);\rAll the App namespaces can really be your App or the default Laravel app files.\nThis file is auto generated from that command so do not edit it.\nThe one we just made is\n$router-\u0026gt;get('api/v1/projects', ['uses' =\u0026gt; 'App\\Http\\Controllers\\ProjectsController@index', 'domain' =\u0026gt; NULL, 'as' =\u0026gt; 'api.v1.projects', 'middleware' =\u0026gt; array (\r0 =\u0026gt; 'App\\\\Http\\\\Middleware\\\\AuthMiddleware',\r), 'where' =\u0026gt; array (\r)]);\r","relPermalink":"/posts/109/","summary":"Auth updates First make sure your composer update has the latest Laravel and check that there are not relevant fixes already via laravel/docs master laravel/framework master or laravel/laravel dev\nMoved evn files to the new format and only 1 is needed now having the\nAPP_ENV='local' setting for the environment.\nThen update the path in the AuthController to go to auth/login\n#app/Http/Controllers/Auth/AuthController\rpublic function login(LoginRequest $request)\r{\rif ($this-\u0026gt;auth-\u0026gt;attempt($request-\u0026gt;only('email', 'password')))\r{\rreturn redirect('/');\r}\rreturn redirect('/auth/login')-\u0026gt;withErrors([\r'email' =\u0026gt; 'The credentials you entered did not match our records.","tags":["laravel","laravel 5","auth"],"title":"Temporary Auth Updates L5"},{"content":"Getting Chrome run was \u0026ldquo;easy\u0026rdquo; thanks to this post\nMy install has behat running inside of a vagrant box so my behat.yml talks to Selenium running on my Mac and uses my Macs Chrome\ndefault:\rpaths:\rfeatures: behat/features\rbootstrap: features/bootstrap\rformatter:\rname: pretty\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte: null\rselenium2:\rwd_host: \u0026quot;http://192.168.33.1:4444/wd/hub\u0026quot;\rcapabilities: { \u0026quot;browserName\u0026quot;: \u0026quot;chrome\u0026quot;, \u0026quot;browser\u0026quot;: \u0026quot;chrome\u0026quot;, \u0026quot;version\u0026quot;: \u0026quot;25\u0026quot;, 'chrome': {'switches':['--no-sandbox']}}\rbase_url: 'http://cms.dev:8000/'\rbrowser_name: chrome\rI placed chromedriver in /opt and just ran this\njava -jar selenium-server-standalone-2.43.1.jar -Dwebdriver.chrome.driver=\u0026quot;/opt/chromedriver\u0026quot;\rThat was it. Now in my vagrant box I can run behat to open the chrome browser which happens to be faster for me than Safari and Firefox on this mac.\n","relPermalink":"/posts/108/","summary":"Getting Chrome run was \u0026ldquo;easy\u0026rdquo; thanks to this post\nMy install has behat running inside of a vagrant box so my behat.yml talks to Selenium running on my Mac and uses my Macs Chrome\ndefault:\rpaths:\rfeatures: behat/features\rbootstrap: features/bootstrap\rformatter:\rname: pretty\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte: null\rselenium2:\rwd_host: \u0026quot;http://192.168.33.1:4444/wd/hub\u0026quot;\rcapabilities: { \u0026quot;browserName\u0026quot;: \u0026quot;chrome\u0026quot;, \u0026quot;browser\u0026quot;: \u0026quot;chrome\u0026quot;, \u0026quot;version\u0026quot;: \u0026quot;25\u0026quot;, 'chrome': {'switches':['--no-sandbox']}}\rbase_url: 'http://cms.dev:8000/'\rbrowser_name: chrome\rI placed chromedriver in /opt and just ran this","tags":["behat","chrome"],"title":"Chrome and Behat"},{"content":"Design Guides  Controllers - contains application logic and passing user input data to service Services - The middleware between controller and repository. Gather data from controller, performs validation and business logic, and calling repositories for data manipulation. Repositories - layer for interaction with models and performing DB operations Models - common laravel model files with relationships defined  In and Out Burgers Between the user\u0026rsquo;s request and the response is the application. The above design guide not only gives us a consistent, flexible way to manage a requests and responses from a web user but then leads us into creating applications that can manage consul request as well.\nStarting with the book by the Author of Laravel, Tyler Otwell\nbook laravel\nThe great thing about this book is that it is not really about Laravel but about SOLID design principles\n Single responsibility principle Open/closed principle Liskov substitution principle Interface segregation principle Dependency inversion principle  [wikipedia solid](http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)\nChange to scope does not cause bad code, bad design patterns cause bad code. Scope changes and that is fine. This is key to the success of an application. It must change with the vision of the Product owner as deliverables bring to light what could not be seen on paper, mock ups, whiteboards etc.\nIf we follow the Solid Design Principles then \u0026ldquo;change is okay\u0026rdquo; and easy.\nBack to the book \u0026ldquo;Laravel: from Apprentice to Artisan So Tyler Otwell goes over each principle showing them in context of Laravel.\nHere are some key design patters to grasp\nIOC Inversion of control is fundamental to a flexible application that meets the 5 goals above. By \u0026ldquo;coding to an interface\u0026rdquo; we can not only work faster as a team but adapt to change easily.\nHow to get here?\nOther than reading the book consider this common example.\n\u0026ldquo;Build A Contract\u0026rdquo; Taylor Otwell. Laravel: From Apprentice To Artisan (Kindle Location 75 to 185). leanpub.com.\nBy hooking an Interface into the Service Provider we can attach any implementation we want to that interface.\nThis means someone can be working on one part of the app talking to another part that is not even done yet cause they can mock out the responses based on an Interface.\nUsing\nphp artisan make:provider BillingInterface\rYou will easily setup the class to start with in the app/Providers folder\nLaravel 5 is taking this to the next level with \u0026ldquo;Contracts/Interfaces\u0026rdquo; as a big part of the framework.\nlaracasts contracts\nThis also means we can easily swap out classes as needed. The book goes over Billing we have another example Queue. We are using Beanstalkd to work locally and Amazon SQS to work on production. This is all done via such design patters. Interfaces/Contracts around talking to a queue.\nControllers A request comes in and it sends it to the right service. Finally it delivers the response. Below is an example of what a method in a controller should have and no more.\napp/Http/Controllers/ProjectsController.php:31\rpublic function index()\r{\rtry\r{\r$results = $this-\u0026gt;service-\u0026gt;getAllProjectsForThisUser();\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($results, \u0026quot;Loaded Projects\u0026quot;), 200);\r}\rcatch(\\Exception $e) {\rreturn Response::json($this-\u0026gt;responseServices-\u0026gt;respond($e-\u0026gt;getMessage(), \u0026quot;Error Getting Project Failed\u0026quot;), 422);\r}\r}\rIt traps any errors and responds as needed to that error.\nIssues with above? Yes! Error codes should come from the Service as well. How does the controller know a 422?\nService then does what? As defined above\n\u0026ldquo;The middleware between controller and repository. Gather data from controller, performs validation and business logic, and calling repositories for data manipulation.\u0026rdquo;\n Validation Business Logic Calling Repositories Transform Data in and out Lastly returns the results with a know error code.  Since 422 is an HTTP Response\nvendor/symfony/http-foundation/Symfony/Component/HttpFoundation/Response.php:64\rWe should have possible a response transformer class to consider the non HTTP response. Then let the Controller pick from that to find its related HTTP response. See the Build API\u0026rsquo;s You Wont\u0026rsquo;t Hate for more on that. Covered in the other guide shortly too.\n","relPermalink":"/posts/107/","summary":"Design Guides  Controllers - contains application logic and passing user input data to service Services - The middleware between controller and repository. Gather data from controller, performs validation and business logic, and calling repositories for data manipulation. Repositories - layer for interaction with models and performing DB operations Models - common laravel model files with relationships defined  In and Out Burgers Between the user\u0026rsquo;s request and the response is the application.","tags":["ioc","style guides"],"title":"Design Guide - Controllers, Services and IOC"},{"content":"I needed a way to run a bunch of jobs in parallel and I am use to using the Symfony Process Component for that.\nSo this post will show how I did this in Laravel 4.3 via the Queue so I can remember next time.\nWhat will come out of this is a workflow as seen here\n\rWe will create two Artisan Commands. This allows us to use Symfony Process to run numerous console commands in the background.\nI will not go over how to add a job to the queue there is plenty on that. I will show the class I used for the Queue and it\u0026rsquo;s attributes.\n{\r\u0026quot;job\u0026quot;:\u0026quot;Foo\\\\\\\\Reporting\\\\\\\\RequestsCommandQueueRunner\u0026quot;,\r\u0026quot;data\u0026quot;:{\r\u0026quot;results_uuid\u0026quot;:\u0026quot;4a13aaee-4289-4f95-afe5-ea5abaaed869\u0026quot;\r}\r}\rThis gets pushed into the Queue. It is the \u0026ldquo;Parent\u0026rdquo; that will run x number of children commands. The x is defined in my .env.local.php or .env.production.php files. This way I can increase or decrease the number of threads it will run as needed.\nThe results_uuid is the data I need to get the children. In this case the children have that uuid in their table as belongsTo that parent.\nRequestsCommandQueueRunner This Artisan command is quite simple\n\u0026lt;?php\r#app/Foo/RequestsCommandQueueRunner.php\rnamespace Foo\\Reporting;\ruse Foo\\Models\\ReportingOverviewBatchRequestJob;\ruse Foo\\QueueServices\\QueueInterface;\rclass RequestsCommandQueueRunner implements QueueInterface {\rprotected $job_limit;\rprotected $results_uuid;\rpublic function __construct()\r{\r$this-\u0026gt;job_limit = $_ENV['RESULTS_QUEUE_LIMIT'];\r}\rpublic function fire($job, $params)\r{\r$this-\u0026gt;results_uuid = $params['results_uuid'];\rexec(\u0026quot;php artisan request:trigger $this-\u0026gt;results_uuid\u0026quot;, $results);\r$job-\u0026gt;delete(); //@TODO make delete if all goes well catch error though and fail it\r}\r}\rAll it does is passes the parent id to the trigger command. Below is the trigger command.\nNote too I am not using the job limit yet. Later I will make x number of Queue jobs as I divide the number of children that parent has by the limit set.\nRequestsQueueCommand \u0026lt;?php namespace Foo\\Console;\r#app/Foo/Console/RequestsQueueCommand.php\ruse Foo\\Models\\ReportingOverviewBatchRequestJob;\ruse Illuminate\\Console\\Command;\ruse Symfony\\Component\\Console\\Input\\InputOption;\ruse Symfony\\Component\\Console\\Input\\InputArgument;\ruse Symfony\\Component\\Process\\Process;\rclass RequestsQueueCommand extends Command {\rprotected $name = 'request:trigger';\rprotected $run = [];\rprotected $description = 'Trigger the running of related jobs';\rprotected $request_uuid;\rprotected $projects; /**\r* @var \\Foo\\Models\\ReportingOverviewBatchRequestJob\r*/\rprivate $reporting_overview_batch_request_jobs;\rpublic function __construct(\rReportingOverviewBatchRequestJob $reporting_overview_batch_request_jobs\r)\r{\rparent::__construct();\r$this-\u0026gt;reporting_overview_batch_request_jobs = $reporting_overview_batch_request_jobs;\r}\rpublic function fire()\r{\r$this-\u0026gt;request_uuid = $this-\u0026gt;argument('request_uuid');\r$this-\u0026gt;setRelatedProjects();\r$this-\u0026gt;setRun();\r$this-\u0026gt;runRelatedProjectsCommand();\rreturn \u0026quot;Fired\u0026quot;;\r}\rprotected function getArguments()\r{\rreturn array(\rarray('request_uuid', InputArgument::REQUIRED, 'The uuid of the Request to trigger the jobs for'),\r);\r}\rprotected function setRelatedProjects()\r{\r$projects =\r$this-\u0026gt;reporting_overview_batch_request_jobs-\u0026gt;getAllJobsForReportOverviewBatchRequestUuid($this-\u0026gt;request_uuid);\r$this-\u0026gt;projects = $projects-\u0026gt;toArray();\rreturn $this-\u0026gt;projects;\r}\rprotected function setRun()\r{\rforeach($this-\u0026gt;projects as $project)\r{\r$this-\u0026gt;addToRun($project['id']);\r}\r}\rprotected function runRelatedProjectsCommand()\r{\rforeach($this-\u0026gt;run as $process)\r{\r$process-\u0026gt;start();\r}\rwhile(count($this-\u0026gt;run) \u0026gt; 0)\r{\rforeach($this-\u0026gt;run as $key =\u0026gt; $process)\r{\rif(!$process-\u0026gt;isRunning())\r{\r\\Log::info(\u0026quot;Done running process\u0026quot;);\runset($this-\u0026gt;run[$key]);\r}\r}\r}\r}\rprotected function addToRun($project_id)\r{\r$this-\u0026gt;run[] = new Process(\u0026quot;php artisan request:run $project_id\u0026quot;);\r}\r}\rHere is where things get interesting. I begin the work of finding the children Ids then making an array of console commands to run using the children id as the argument I pass.\nThe Process Component allows me to start them in the background and then check on them while they are running.\nNow for the command it runs \u0026ldquo;php artisan request:run $project_id\u0026rdquo;\nRequestsJobRunCommand This is the process that does the long running work. In this case logs into Github, get some info and reports on it.\n\u0026lt;?php namespace Foo\\Console;\ruse Foo\\Models\\ReportingOverviewBatchRequestJob;\ruse Foo\\Services\\RequestJobRunService;\ruse Illuminate\\Console\\Command;\ruse Symfony\\Component\\Console\\Input\\InputOption;\ruse Symfony\\Component\\Console\\Input\\InputArgument;\rclass RequestsJobRunCommand extends Command {\rprotected $name = 'request:run';\rprotected $description = 'Run the related job';\rprotected $job_uuid;\r/**\r* @var RequestJobRunService\r*/\rprivate $requestJobRunService;\r/**\r* Id of the job we will run\r* @var\r*/\rprotected $related_job;\rpublic function __construct(RequestJobRunService $requestJobRunService)\r{\rparent::__construct();\r$this-\u0026gt;requestJobRunService = $requestJobRunService;\r}\rpublic function fire()\r{\r$this-\u0026gt;job_uuid = $this-\u0026gt;argument('job_uuid');\r$this-\u0026gt;loadTheJobsInfo();\r$this-\u0026gt;requestJobRunService-\u0026gt;getGithubApi()-\u0026gt;authenticate();\r$this-\u0026gt;getJobsAndCount();\rreturn \u0026quot;Fired\u0026quot;;\r}\rprotected function getJobsAndCount()\r{\rtry {\r$tests = $this-\u0026gt;getRelatedTests();\r$tests_count = count($tests);\r\\Log::info(sprintf(\u0026quot;Updating ReportingOverviewRequest with uuid %s\u0026quot;, $this-\u0026gt;job_uuid));\r$this-\u0026gt;related_job-\u0026gt;status = 1;\r$this-\u0026gt;related_job-\u0026gt;number_of_tests = $tests_count;\r$this-\u0026gt;related_job-\u0026gt;save();\r} catch(\\Exception $e) {\r$this-\u0026gt;related_job-\u0026gt;status = 1; // mark done for now though a fail noted in message box\r$this-\u0026gt;related_job-\u0026gt;message = $e-\u0026gt;getMessage();\r$this-\u0026gt;related_job-\u0026gt;save();\r\\Log::error(sprintf(\u0026quot;Error processing job %s for request job request parent uuid %s error \u0026quot;, $this-\u0026gt;related_job-\u0026gt;id, $this-\u0026gt;related_job-\u0026gt;reporting_overview_batch_request_id, $e-\u0026gt;getMessage()));\r}\r}\rprotected function getRelatedTests()\r{\rtry {\rreturn $this-\u0026gt;requestJobRunService-\u0026gt;getGithubApi()\r-\u0026gt;setReponame($this-\u0026gt;related_job-\u0026gt;repo_name)\r-\u0026gt;setAccountName($this-\u0026gt;related_job-\u0026gt;account_name)\r-\u0026gt;setBranch($this-\u0026gt;related_job-\u0026gt;branch)\r-\u0026gt;index($this-\u0026gt;related_job-\u0026gt;folder);\r}\rcatch(\\Exception $e)\r{\rthrow new \\Exception(\u0026quot;Error getting index of github \u0026quot; . $e-\u0026gt;getMessage());\r}\r}\rprotected function loadTheJobsInfo()\r{\r$this-\u0026gt;related_job = $this-\u0026gt;requestJobRunService-\u0026gt;getReportingOverviewBatchRepository()-\u0026gt;getReportingOverviewBatchRequestJobsModelInterface()\r-\u0026gt;findOrFail($this-\u0026gt;job_uuid);\r}\rprotected function getArguments()\r{\rreturn array(\rarray('job_uuid', InputArgument::REQUIRED, 'The uuid of the related request job to run'),\r);\r}\r}\rThere still is some work to do. I have to set the limit so my initial run does not timeout. I also need to clean up some code so that these classes are digging so deep into the other classes.\nBut this was just to show how to use Symfony Process Component, Laravel Queue, and Laravel Artisan to run a multi threaded task.\n","relPermalink":"/posts/106/","summary":"I needed a way to run a bunch of jobs in parallel and I am use to using the Symfony Process Component for that.\nSo this post will show how I did this in Laravel 4.3 via the Queue so I can remember next time.\nWhat will come out of this is a workflow as seen here\n\rWe will create two Artisan Commands. This allows us to use Symfony Process to run numerous console commands in the background.","tags":["laravel","php","note2self","4.3"],"title":"Multi Threaded Queue Processing"},{"content":"Been sharing this info with team members a bit lately and want to post it here for reference. Though there is no ONE way to do any of this there are ways that scale better than others. But more importantly having one way as a team to do things can be key to projects from beginning to end (eg the rest of the projects life!)\nProject Style Guides The Clean Coder by Robert Martin book is a look at being a \u0026ldquo;Professional\u0026rdquo; coder and all that comes with it. It is a great look at not only how one should be in the role of a Programmer but what to expect of each other as a team.\nDomain Driven Deisgn A great look at being a programmer that not only makes code but more importantly bridges the gap between the vision of the business with the goals of the code.\n PHP Style Guides Back to Robert Martin again on this to start Clean Code\nIt is not about PHP directly but it all applies to good Oo PHP design patterns and thinking. There are so many classics he quotes that could be added here as well.\n Angular Style Guides I use to start with Angular Seed but always thought it fell short when the project grew and this guide made it clear to me why. IMO it is a much better approach to Angular John Papa. This guide includes examples which is great.\n API Guides There are a number of great books on this as well. Right now a short and simple look at how to make an API, I think, is Build APIs You Won\u0026rsquo;t Hate by Phil Sturgeon. Great code example too on Behat and API testing\n UML 2.0 A unified means to communicate ideas to each other and to product owners. Before digging into code this is a great way for teams to communicate all the way from higher level overview down to the classes and constructors.\nSeems the Gang of Four book, Robert Martin books and Domain Driven Design all point to this as a way to sketch out ideas or even use it as a long term blueprint to go hand and hand with deployed code. The UML 2.0 in a Nutshell along with the more in depth O\u0026rsquo;Reilly book UML 2.0 second edition.\n BDD / TDD Testing is really key I think know one anymore doubts that. What you end up with is Code that you can refactor and make better over time with confidence. And as a team that is important. It also leads to one of the best sources of documentation. This presentation talks about BDD and article really take it to the next level. As the test become the glue between the goals of the business and the code of the developers.\nFinal Notes Robert Martin really hones in for me why testing is so important. It is not about TDD in the end but maintainable and changeable code. And so even though much of the above seems like more work upfront it really leads to better code and better experiences as a coder and more importantly as a team.\nAlso Pair programming is a great use of time and should not be feared. Too much of it wears me out but just the right amount can be a powerful way to get a team member up to speed on a new part to a project or just to check in with each other and spend some time coding and growing as a team. It is scary to share in something as personal as coding but in the end we all can learn from each other.\n Misc Reads Not as key as the ones above imo but still super helpful. Though POODR could easily be moved above.\nPractical Object-Oriented Design in Ruby: An Agile Primer PHP Objects, Patterns and Practice Laravel: From Apprentice To Artisan Eloquent JavaScript: A Modern Introduction to Programming Node.js the Right Way: Practical, Server-Side JavaScript That Scales The Pragmatic Programmer: From Journeyman to Master RESTful Web APIs ","relPermalink":"/posts/105/","summary":"Been sharing this info with team members a bit lately and want to post it here for reference. Though there is no ONE way to do any of this there are ways that scale better than others. But more importantly having one way as a team to do things can be key to projects from beginning to end (eg the rest of the projects life!)\nProject Style Guides The Clean Coder by Robert Martin book is a look at being a \u0026ldquo;Professional\u0026rdquo; coder and all that comes with it.","tags":["php","angular.js","coder"],"title":"Team Style Guides and Mind Set"},{"content":"There are a number of related models to this one model that I store in the Models $relations property\n protected static $relations = [\r'owner',\r'apns',\r'zoning_urls',\r'structures.address',\r'structures.comments.user.profiles',\r'listings',\r'attachments',\r'structures.structure_type',\r'property_owner',\r'primary_property_type',\r'address',\r'property_specialist.profiles',\r'listings.team'\r];\rThis allows me to easily reuse this for each query\n$found = $found-\u0026gt;load(static::$relations);\rBut there is one model I removed from that list to do a dynamic query/sorting on it\n $found = $this-\u0026gt;property-\u0026gt;with([\r'verifiers' =\u0026gt; function($query) {\r$query-\u0026gt;with('user.profiles')-\u0026gt;orderBy('id', 'DESC');\r},\r])-\u0026gt;findOrFail($id);\r$found = $found-\u0026gt;load(static::$relations);\rveifiers was part of the protected static $relations list but I moved it out since, for each query, I need to sort them from last to first.\n","relPermalink":"/posts/104/","summary":"There are a number of related models to this one model that I store in the Models $relations property\n protected static $relations = [\r'owner',\r'apns',\r'zoning_urls',\r'structures.address',\r'structures.comments.user.profiles',\r'listings',\r'attachments',\r'structures.structure_type',\r'property_owner',\r'primary_property_type',\r'address',\r'property_specialist.profiles',\r'listings.team'\r];\rThis allows me to easily reuse this for each query\n$found = $found-\u0026gt;load(static::$relations);\rBut there is one model I removed from that list to do a dynamic query/sorting on it\n $found = $this-\u0026gt;property-\u0026gt;with([\r'verifiers' =\u0026gt; function($query) {\r$query-\u0026gt;with('user.","tags":["laravel","php","note2self"],"title":"Sorting related models in Laravel"},{"content":"The code for behat\u0026rsquo;s FeatureContext comes from this repo and book https://github.com/philsturgeon/build-apis-you-wont-hate\nI will bring it together so before long you can run tests like this\n\nThe road map will be\n Quick Setup Notes GET requests POST request Tie into your framework Seeding step Query your db step PUT request  Quick Setup Notes Setting up behat is beyond the scope of this. If you want try alnutile/behat-seed to get going on testing since it can be used to hit any API. But using the FeatureContext file from the https://github.com/philsturgeon/build-apis-you-wont-hate instead. So with that and his composer.json info we are ready to build out our testing environment.\nWith that setup we are using composer to pull in all the packages and now have guzzle at our disposal.\nAlso the behat.yml file needs the default context parameters setup.\ndefault:\rpaths:\rfeatures: behat/features\rbootstrap: features/bootstrap\rcontext:\rparameters:\rbase_url: http://local.dev\rSometimes I would not set this since I do mostly selenium work.\nGET Request To start with we will test using GET, a very simple start.\nFeature: Projects\rThis projects data\rAs an authenticated user\rI should be able to see all the projects of my team\rScenario: I should see projects output\rGiven I reseed the database\rWhen I request \u0026quot;GET /api/v1/projects\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\rAnd data has 5 items\rThat is it! Behat will not hit that endpoint using Guzzle and do a get request. We test the response and then count the results.\nHere is the count code\n /**\r* @Given /^data has (\\d+) items/\r*/\rpublic function dataHasItems($arg)\r{\r$results = $this-\u0026gt;getResponsePayload();\rassertCount($arg, $results-\u0026gt;data);\r}\rPOST Request This got a bit trickier\nThe final result looked like this\nScenario: Creating a new Project and new Site\rGiven I reseed the database\rGiven I have the payload:\r\u0026quot;\u0026quot;\u0026quot;\r{ \u0026quot;data\u0026quot;:\r{\r\u0026quot;name\u0026quot;: \u0026quot;test foo\u0026quot;,\r\u0026quot;branch\u0026quot;: \u0026quot;test\u0026quot;,\r\u0026quot;folder\u0026quot;: \u0026quot;foo\u0026quot;,\r\u0026quot;active\u0026quot;: 1,\r\u0026quot;team_id\u0026quot;: \u0026quot;foo-bar-foo-baz-5\u0026quot;,\r\u0026quot;site_id\u0026quot;: \u0026quot;test-foo-site-id-test-new\u0026quot;,\r\u0026quot;urls\u0026quot;: [\r{\u0026quot;name\u0026quot;: \u0026quot;Url 1 Behat\u0026quot;, \u0026quot;path\u0026quot;: \u0026quot;http://foo1.behat\u0026quot; },\r{\u0026quot;name\u0026quot;: \u0026quot;Url 2 Behat\u0026quot;, \u0026quot;path\u0026quot;: \u0026quot;http://foo2.behat\u0026quot; }\r],\r\u0026quot;site_object\u0026quot;: {\r\u0026quot;id\u0026quot;: \u0026quot;test-foo-site-id-test-new\u0026quot;,\r\u0026quot;name\u0026quot;: \u0026quot;Site via Behat\u0026quot;,\r\u0026quot;repo_name\u0026quot;: \u0026quot;foo_repo\u0026quot;,\r\u0026quot;active\u0026quot;: 1\r},\r\u0026quot;team_object\u0026quot;: {\r\u0026quot;id\u0026quot;: \u0026quot;foo-bar-foo-baz-5\u0026quot;,\r\u0026quot;name\u0026quot;: \u0026quot;Team 5\u0026quot;\r}\r}\r}\r\u0026quot;\u0026quot;\u0026quot;\rWhen I request \u0026quot;POST /api/v1/projects\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\rWhen I request \u0026quot;GET /api/v1/projects\u0026quot;\rAnd data has 6 items\rAnd there are 6 rows of \u0026quot;\\BehatEditor\\Models\\Site\u0026quot;\rLets cover it one line or so at a time\nGiven I reseed the database\rSometimes I want to start with a new data set and this is what triggers it. I will cover this more in the sections below \u0026ldquo;Tie into your framework\u0026rdquo; and \u0026ldquo;Seeding step\u0026rdquo;\nNow the payload\nGiven I have the payload:\r\u0026quot;\u0026quot;\u0026quot;\r{ \u0026quot;data\u0026quot;:\r{\r\u0026quot;name\u0026quot;: \u0026quot;test foo\u0026quot;,\r\u0026quot;branch\u0026quot;: \u0026quot;test\u0026quot;,\r\u0026quot;folder\u0026quot;: \u0026quot;foo\u0026quot;,\r\u0026quot;active\u0026quot;: 1,\r\u0026quot;team_id\u0026quot;: \u0026quot;foo-bar-foo-baz-5\u0026quot;,\r\u0026quot;site_id\u0026quot;: \u0026quot;test-foo-site-id-test-new\u0026quot;,\r\u0026quot;urls\u0026quot;: [\r{\u0026quot;name\u0026quot;: \u0026quot;Url 1 Behat\u0026quot;, \u0026quot;path\u0026quot;: \u0026quot;http://foo1.behat\u0026quot; },\r{\u0026quot;name\u0026quot;: \u0026quot;Url 2 Behat\u0026quot;, \u0026quot;path\u0026quot;: \u0026quot;http://foo2.behat\u0026quot; }\r],\r\u0026quot;site_object\u0026quot;: {\r\u0026quot;id\u0026quot;: \u0026quot;test-foo-site-id-test-new\u0026quot;,\r\u0026quot;name\u0026quot;: \u0026quot;Site via Behat\u0026quot;,\r\u0026quot;repo_name\u0026quot;: \u0026quot;foo_repo\u0026quot;,\r\u0026quot;active\u0026quot;: 1\r},\r\u0026quot;team_object\u0026quot;: {\r\u0026quot;id\u0026quot;: \u0026quot;foo-bar-foo-baz-5\u0026quot;,\r\u0026quot;name\u0026quot;: \u0026quot;Team 5\u0026quot;\r}\r}\r}\r\u0026quot;\u0026quot;\u0026quot;\rThe API expects the payload to be in the data object. From there it is just a object of data relative to the Project endpoint. We will see too this gets pretty cool cause we will make sure new sites are made, new urls are made etc as needed.\nWhen I request \u0026quot;POST /api/v1/projects\u0026quot;\rThen I get a \u0026quot;200\u0026quot; response\rThen we post it. Phil\u0026rsquo;s code was modified a bit here\n /**\r* @When /^I request \u0026quot;(GET|PUT|POST|DELETE) ([^\u0026quot;]*)\u0026quot;$/\r*/\rpublic function iRequest($httpMethod, $resource)\r{\r$this-\u0026gt;resource = $resource;\r$method = strtolower($httpMethod);\rtry {\rswitch ($httpMethod) {\rcase 'PUT':\r$this-\u0026gt;response = $this\r-\u0026gt;client\r-\u0026gt;$method($resource, null, $this-\u0026gt;requestPayload);\rbreak;\rcase 'POST':\r$post = \\GuzzleHttp\\json_decode($this-\u0026gt;requestPayload, true);\r$this-\u0026gt;response = $this\r-\u0026gt;client\r-\u0026gt;$method($resource, array('body' =\u0026gt; $post));\rbreak;\rdefault:\r$this-\u0026gt;response = $this\r-\u0026gt;client\r-\u0026gt;$method($resource);\r}\r} catch (BadResponseException $e) {\r$response = $e-\u0026gt;getResponse();\r// Sometimes the request will fail, at which point we have\r// no response at all. Let Guzzle give an error here, it's\r// pretty self-explanatory.\rif ($response === null) {\rthrow $e;\r}\r$this-\u0026gt;response = $e-\u0026gt;getResponse();\r}\r}\rI added the post line (hmm need to pull out the json_decode just noticed that) anyways we send this off to Guzzle\u0026rsquo;s post method to send to the API.\nBasically I added this\ncase 'POST':\r$post = \\GuzzleHttp\\json_decode($this-\u0026gt;requestPayload, true);\r$this-\u0026gt;response = $this\r-\u0026gt;client\r-\u0026gt;$method($resource, array('body' =\u0026gt; $post));\rbreak;\rAs you see above.\nWhen I request \u0026quot;GET /api/v1/projects\u0026quot;\rAnd data has 6 items\rAnd there are 6 rows of \u0026quot;\\BehatEditor\\Models\\Site\u0026quot;\rThis is to verify new items where made. The last line is to verify that a new Site was made since it does not have a restful endpoint to GET a count nor POST since it is only part of the Project and from an external API. The step for that is\n /**\r* @Given /^there are (\\d+) rows of \u0026quot;([^\u0026quot;]*)\u0026quot;$/\r*/\rpublic function thereAreRowsOf($arg1, $arg2)\r{\r$count = $arg2::all()-\u0026gt;count();\rif($count != $arg1) {\rthrow new Exception(\r\u0026quot;Actual count is:\\n\u0026quot; . $count\r);\r}\r}\rWe pass in the namespace of the Model and the expected count and then run the query. More on that in the integration area.\nTie into your framework For this project, Silex, it was quite easy. In the FeatureContext class I do this following making $this-\u0026gt;core the app.\n public function __construct(array $parameters)\r{\r$config = isset($parameters['guzzle']) \u0026amp;\u0026amp; is_array($parameters['guzzle']) ? $parameters['guzzle'] : [];\r$config['base_url'] = $parameters['base_url'];\r$this-\u0026gt;client = new Client($config);\r$this-\u0026gt;core = require_once __DIR__.'/../../../../bootstrap/start.php';\r}\rI basically pull in the boostrap file with all the info to setup the database, methods etc used by the index.php and command line tools. Then later on I can do queries of the db and other things that really need to tie into the framework. Like\n /**\r* @Given /^there are (\\d+) rows of \u0026quot;([^\u0026quot;]*)\u0026quot;$/\r*/\rpublic function thereAreRowsOf($arg1, $arg2)\r{\r$count = $arg2::all()-\u0026gt;count();\rif($count != $arg1) {\rthrow new Exception(\r\u0026quot;Actual count is:\\n\u0026quot; . $count\r);\r}\r}\rThis takes the request\nAnd there are 6 rows of \u0026quot;\\BehatEditor\\Models\\Site\u0026quot;\rAnd queries the db using the Model class to do a simple all()-\u0026gt;count() on the results.\nSeeding Now that things are tied in I made a simple step for this\n /**\r* @Given /^I reseed the database$/\r*/\rpublic function iReseedTheDatabase()\r{\rif($this-\u0026gt;core-\u0026gt;getEnv() != 'production') {\r$path = __DIR__.'/../../../../' . 'setup/seed.php';\rexec(\u0026quot;php $path\u0026quot;);\r}\r}\rPUT Coming soon Delete Coming Soon Auth Coming soon ","relPermalink":"/posts/103/","summary":"The code for behat\u0026rsquo;s FeatureContext comes from this repo and book https://github.com/philsturgeon/build-apis-you-wont-hate\nI will bring it together so before long you can run tests like this\n\nThe road map will be\n Quick Setup Notes GET requests POST request Tie into your framework Seeding step Query your db step PUT request  Quick Setup Notes Setting up behat is beyond the scope of this. If you want try alnutile/behat-seed to get going on testing since it can be used to hit any API.","tags":["behat","php"],"title":"Behat for testing RESTful APIs"},{"content":"This video will cover the details http://youtu.be/RHdxSsCDmNQ\nJust a few notes though https://github.com/d11wtq/boris is a better place for getting started overall.\nBorisrc This lives in the root of my application which includes the startup file for the application.\n\u0026lt;?php\r#.borisrc\r$core = require_once(__DIR__.'/bootstrap/start.php');\r$boris = new \\Boris\\Boris('base_app\u0026gt; ');\r$boris-\u0026gt;setLocal(array('core' =\u0026gt; $core));\r$boris-\u0026gt;start();\rThe start.php file I am using for the core startup needed by index.php, this and later a command line class to run the queue daemon and other things\n\u0026lt;?php\r#bootstrap/start.php\rrequire __DIR__.'/../bootstrap/autoload.php';\r$core = new \\App\\Core();\r$core-\u0026gt;getApp();\rif (file_exists(__DIR__ . '/../.env')) {\r\\Dotenv::load(__DIR__.'/../');\r}\r$paths = include(__DIR__.'/paths.php');\r$core-\u0026gt;setUpPaths($paths);\r$core-\u0026gt;setEnv();\r$core-\u0026gt;setDatabaseConnection();\r$core-\u0026gt;getApp()-\u0026gt;register(new Silex\\Provider\\MonologServiceProvider(), array(\r'monolog.logfile' =\u0026gt; $core-\u0026gt;getStoragePath() . '/logs/core.log',\r));\rrequire_once(__DIR__.'/../custom_start.php');\rreturn $core;\rSo index.php like .borisrc calls to this\n\u0026lt;?php\r#public/index.php\r$core = require_once __DIR__.'/../bootstrap/start.php';\r$core = require_once __DIR__.'/../app/routes.php';\r$core-\u0026gt;getApp()-\u0026gt;run();\rAt this point, as seen in the video we can interact with the core app and other methods!\n","relPermalink":"/posts/102/","summary":"This video will cover the details http://youtu.be/RHdxSsCDmNQ\nJust a few notes though https://github.com/d11wtq/boris is a better place for getting started overall.\nBorisrc This lives in the root of my application which includes the startup file for the application.\n\u0026lt;?php\r#.borisrc\r$core = require_once(__DIR__.'/bootstrap/start.php');\r$boris = new \\Boris\\Boris('base_app\u0026gt; ');\r$boris-\u0026gt;setLocal(array('core' =\u0026gt; $core));\r$boris-\u0026gt;start();\rThe start.php file I am using for the core startup needed by index.php, this and later a command line class to run the queue daemon and other things","tags":["boris","php","silex"],"title":"Boris REPL and you Applicatoin (Silex in this case)"},{"content":"Had some trouble doing the normal composer install so I went with the manual install noted here https://github.com/drush-ops/drush\nBasically I downloaded and unzipped the repo to /usr/local/sbin. Then I did a symlink to /usr/bin\ncd /usr/bin\rsudo ln -s /usr/local/sbin/drush/drush .\rThen in /usr/local/sbin/drush I ran\nsudo composer install\r","relPermalink":"/posts/100/","summary":"Had some trouble doing the normal composer install so I went with the manual install noted here https://github.com/drush-ops/drush\nBasically I downloaded and unzipped the repo to /usr/local/sbin. Then I did a symlink to /usr/bin\ncd /usr/bin\rsudo ln -s /usr/local/sbin/drush/drush .\rThen in /usr/local/sbin/drush I ran\nsudo composer install\r","tags":["drush","drupal","laravel","homestead"],"title":"Drush and Homestead Vagrant Box"},{"content":"This example will show a typical \u0026ldquo;Attachment\u0026rdquo; need. The Laravel docs really do cover alot as seen here especially \u0026ldquo;Polymorphic Relation Table Structure‚Äù. I cover many to many polymorphic relationships here\nI will cover an example of an Attachment that has some fields. And it is related to a model, in this example \u0026ldquo;Post\u0026rdquo;\nUsing the Way Generators to make this resource.\nphp artisan generate:resource attachment --fields=\u0026quot;attachable_type:string, attachable_id:integer, name:string, file_name:string, note:text, tag:string‚Äù\rAs noted in the laravel docs our table for Attachments would look something like this\npost\rid - integer\rname - string\rbody - text\rattachments\rid - integer\rfile_name - string\rattachable_id - integer\rattachable_type - string\rSo we are making a table/model Attachment. The model will use the \u0026ldquo;attachable\u0026rdquo; syntax to dynamically reference another model and model id.\nIn the Post model I set that this relationship exists\n#app/models/Post.php\rpublic function attachments()\r{\rreturn $this-\u0026gt;morphTo(\u0026quot;Attachment\u0026quot;, \u0026quot;attachable\u0026quot;);\r}\rThe Attachment model file is this\n\r\u0026lt;?php\r#app/models/Attachment.php\rclass Attachment extends \\Eloquent {\rprotected $fillable = [\r\u0026quot;attachable_type\u0026quot;,\r\u0026quot;attachable_id\u0026quot;,\r\u0026quot;name‚Äù,\r‚Äúfile_name‚Äù,\r\u0026quot;note\u0026quot;,\r\u0026quot;tag\u0026quot;\r];\rpublic function attachable()\r{\rreturn $this-\u0026gt;morphTo();\r}\r}\rFinally if we where to seed the db or add content the table for Attachments would look like this\nthe attachable_type is the model class so if the namespace was Acme\\Post then that would be \u0026ldquo;Acme\\Post\nThat is it. As long as you include it in your results you will see it in your output.\n","relPermalink":"/posts/99/","summary":"This example will show a typical \u0026ldquo;Attachment\u0026rdquo; need. The Laravel docs really do cover alot as seen here especially \u0026ldquo;Polymorphic Relation Table Structure‚Äù. I cover many to many polymorphic relationships here\nI will cover an example of an Attachment that has some fields. And it is related to a model, in this example \u0026ldquo;Post\u0026rdquo;\nUsing the Way Generators to make this resource.\nphp artisan generate:resource attachment --fields=\u0026quot;attachable_type:string, attachable_id:integer, name:string, file_name:string, note:text, tag:string‚Äù\rAs noted in the laravel docs our table for Attachments would look something like this","tags":["laravel","php","note2self"],"title":"Polymorphic relationship Laravel"},{"content":"This is like most nginx the only trick was adding the port forward on Homestead\n#scripts/homestead.rb\r# Configure Port Forwarding To The Box\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 80, host: 8000\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 443, host: 44300\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 3306, host: 33060\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 5432, host: 54320\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 11300, host: 11300\rI set it to 44300\nThen just follow along here\nhttp://laravel.io/forum/07-06-2014-enabling-ssl-on-a-homestead-vm which leads to here https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04 for the rest\n","relPermalink":"/posts/101/","summary":"This is like most nginx the only trick was adding the port forward on Homestead\n#scripts/homestead.rb\r# Configure Port Forwarding To The Box\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 80, host: 8000\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 443, host: 44300\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 3306, host: 33060\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 5432, host: 54320\rconfig.vm.network \u0026quot;forwarded_port\u0026quot;, guest: 11300, host: 11300\rI set it to 44300\nThen just follow along here\nhttp://laravel.io/forum/07-06-2014-enabling-ssl-on-a-homestead-vm which leads to here https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04 for the rest","tags":["homestead","nginx"],"title":"SSL and Homestead"},{"content":"The RecursiveIteratorIterator makes it super easy to traverse a nested array.\nHere is an example though the docs are pretty clear there. For me it was in a class so I defined the array keys at the top of the Class\n protected $merged_profile_options = [];\rprotected $data_values = [\r'browser' =\u0026gt; null,\r'name' =\u0026gt; null,\r'version' =\u0026gt; null,\r'platform' =\u0026gt; null,\r'base_url' =\u0026gt; null,\r'repo' =\u0026gt; null,\r'filename' =\u0026gt; null,\r'branch' =\u0026gt; null,\r'status' =\u0026gt; null,\r'user_uuid' =\u0026gt; null,\r'remote_job_id' =\u0026gt; null,\r'job_id' =\u0026gt; null,\r];\rThen later on iterated over that array.\n protected function setAllDataValues() {\r$traverse = new \\RecursiveIteratorIterator(\rnew \\RecursiveArrayIterator($this-\u0026gt;merged_profile_options));\rforeach($traverse as $key=\u0026gt;$value)\r{\rif(array_key_exists($key, $this-\u0026gt;data_values))\r{\r$this-\u0026gt;setDataValues($key, $value);\r}\r}\r}\rpublic function setDataValues($key, $value)\r{\r$this-\u0026gt;data_values[$key] = $value;\r}\rSuper easy. This array was 4 levels deep.\n","relPermalink":"/posts/98/","summary":"The RecursiveIteratorIterator makes it super easy to traverse a nested array.\nHere is an example though the docs are pretty clear there. For me it was in a class so I defined the array keys at the top of the Class\n protected $merged_profile_options = [];\rprotected $data_values = [\r'browser' =\u0026gt; null,\r'name' =\u0026gt; null,\r'version' =\u0026gt; null,\r'platform' =\u0026gt; null,\r'base_url' =\u0026gt; null,\r'repo' =\u0026gt; null,\r'filename' =\u0026gt; null,\r'branch' =\u0026gt; null,\r'status' =\u0026gt; null,\r'user_uuid' =\u0026gt; null,\r'remote_job_id' =\u0026gt; null,\r'job_id' =\u0026gt; null,\r];\rThen later on iterated over that array.","tags":["php","note2self"],"title":"Quick way to traverse a nested php arrray"},{"content":"Testing that your code works against an API can take up lots of un-needed time. With this php-vcr library you can do ONE real request that saves a fixture file that will automatically be used with each additional requests!\nThey have decent docs on setting up but I will walk through them here.\nI will base this off a seed phpunit repo I have https://github.com/alnutile/base_library_repo\nYou will need to add to the composer.json the packages for this library\n \u0026quot;require\u0026quot;: {\r\u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.4.0\u0026quot;,\r\u0026quot;ext-curl\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;symfony/process\u0026quot;: \u0026quot;\u0026gt;=2.3\u0026quot;,\r\u0026quot;symfony/event-dispatcher\u0026quot;: \u0026quot;\u0026gt;=2.3\u0026quot;,\r\u0026quot;guzzle/guzzle\u0026quot;: \u0026quot;~3.7\u0026quot;,\r\u0026quot;vlucas/phpdotenv\u0026quot;: \u0026quot;1.0.6\u0026quot;\r},\r\u0026quot;require-dev\u0026quot;: {\r\u0026quot;phpunit/phpunit\u0026quot;: \u0026quot;~3.0\u0026quot;,\r\u0026quot;mockery/mockery\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;php-vcr/php-vcr\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;php-vcr/phpunit-testlistener-vcr\u0026quot;: \u0026quot;dev-master\u0026quot;\r}\rI have another post that talks about the dotenv package here\nThen if you test folder make a a fixtures folder. So you layout is\n.\r--test\r-----fixtures\rAnd open your phpunit.xml file to add the code to intercept your requests.\n#/phpunit.xml\r\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\r\u0026lt;phpunit backupGlobals=\u0026quot;false\u0026quot;\rbackupStaticAttributes=\u0026quot;false\u0026quot;\rbootstrap=\u0026quot;test/bootstrap.php\u0026quot;\rcolors=\u0026quot;true\u0026quot;\rconvertErrorsToExceptions=\u0026quot;true\u0026quot;\rconvertNoticesToExceptions=\u0026quot;true\u0026quot;\rconvertWarningsToExceptions=\u0026quot;true\u0026quot;\rprocessIsolation=\u0026quot;false\u0026quot;\rstopOnFailure=\u0026quot;false\u0026quot;\rsyntaxCheck=\u0026quot;false\u0026quot;\r\u0026gt;\r\u0026lt;listeners\u0026gt;\r\u0026lt;listener class=\u0026quot;PHPUnit_Util_Log_VCR\u0026quot; file=\u0026quot;vendor/php-vcr/phpunit-testlistener-vcr/PHPUnit/Util/Log/VCR.php\u0026quot; /\u0026gt;\r\u0026lt;/listeners\u0026gt;\r\u0026lt;testsuites\u0026gt;\r\u0026lt;testsuite name=\u0026quot;Application Test Suite\u0026quot;\u0026gt;\r\u0026lt;directory\u0026gt;test\u0026lt;/directory\u0026gt;\r\u0026lt;/testsuite\u0026gt;\r\u0026lt;/testsuites\u0026gt;\r\u0026lt;/phpunit\u0026gt;\rLastly edit your phpunit bootstrap file to setup VCR\n#test/bootstrap.php\r\u0026lt;?php\rfunction includeIfExists($file)\r{\rif (file_exists($file)) {\rreturn include $file;\r}\r}\rif ((!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php')) \u0026amp;\u0026amp; (!$loader = includeIfExists(__DIR__.'/../../../.composer/autoload.php'))) {\rdie('You must set up the project dependencies, run the following commands:'.PHP_EOL.\r'curl -s http://getcomposer.org/installer | php'.PHP_EOL.\r'php composer.phar install'.PHP_EOL);\r}\r\\VCR\\VCR::configure()-\u0026gt;setCassettePath(__DIR__ .'/../test/fixtures');\r$loader-\u0026gt;add('Foo\\SauceLabs', __DIR__);\rreturn $loader;\rNow you are ready to use the API. This repo has a ton of tests using the api https://github.com/alnutile/saucelabs_client\nYou will see in this file for example how it is called in the doc blocks\n#test/SauceLabs/Tests/JobsTest.php\ruse SauceLabs\\Client;\ruse VCR\\VCR;\ruse SauceLabs\\Tests\\BaseTest as Base;\rclass JobsTest extends Base {\rprotected function tearDown()\r{\rm::close();\r}\r/**\r* @test\r* @@vcr get_jobs\r*/\rpublic function get_jobs()\r{\r$username = $_ENV['USERNAME_KEY'];\rVCR::turnOn();\r//VCR::insertCassette('authenticate');\rVCR::insertCassette('get_jobs');\r//Arrange\r$sauce_api = new Client();\r$sauce_api-\u0026gt;authenticate($username, $_ENV['TOKEN_PASSWORD'], Client::AUTH_HTTP_PASSWORD);\r//Act\r$response = $sauce_api-\u0026gt;api('jobs')-\u0026gt;getJobs($username);\r//Assert\r$this-\u0026gt;assertGreaterThan(15, count($response));\r// To stop recording requests, eject the cassette\rVCR::eject();\r// Turn off VCR to stop intercepting requests\rVCR::turnOff();\r}\rAfter the first time you run that you will have a new \u0026ldquo;cassette\u0026rdquo; in the test/fixtures folder that you can use as needed\n#test/fixtures/get_jobs\r-\rrequest:\rmethod: GET\rurl: 'https://saucelabs.com/rest/v1/api-test-user/jobs'\rheaders:\rHost: saucelabs.com\rAccept: application/vnd.SauceLabs.beta+json\rUser-Agent: 'php-github-api (http://github.com/alnutile/saucelabs_client)'\rAuthorization: 'Basic YmVoYXQtc2VlZDpmYzViNjg4YS1mMjdjLTRjNzMtYTkxNC1lYjVkN2UyY2RmMWU='\rContent-Length: '0'\rresponse:\rstatus: 200\rheaders:\rServer: nginx\rDate: 'Fri, 11 Jul 2014 11:03:19 GMT'\rContent-Type: 'application/json; charset=utf-8'\rTransfer-Encoding: chunked\rConnection: keep-alive\rX-Backend: mix\rbody: '[{\u0026quot;id\u0026quot;: \u0026quot;79bd34f42d584da6ad59c051388134d9\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;d75177a863ec4a458c7222813e10ee84\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;67591976001c4c5a9522b93281e0e8ef\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;ada6876f799d4b589ef0e2c4069c7438\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;3e676ac921aa43f5a5628d231ca7115d\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;222cdddafb9e4c3fb0722bccc9891a15\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;6393dc7ca1ea447eb509b5e1dd6821ac\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;789004fc2ec34d0d8e03945759fc25b0\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;3331badd2da140d08613a786257d177d\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;9437a50a354e4fca8252447b03d21348\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;dec07ca1c30e40f4a693de7f7a102eab\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;3a1a0fb2d4be4580b00a3e35b86aa6fa\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;55de27651bf14c92b901cbd0a62b1603\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;7e12ec786ad544008c5f4e3e4340d5a8\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;a8edb7ab8a8f408a9b0829cc45ca4563\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;b67a4d7187cc4dc8ad661ef7045d15e9\u0026quot;}]'\r-\rrequest:\rmethod: GET\rurl: 'https://saucelabs.com/rest/v1/behat-seed/jobs'\rheaders:\rHost: saucelabs.com\rAccept: application/vnd.SauceLabs.beta+json\rUser-Agent: 'php-github-api (http://github.com/alnutile/saucelabs_client)'\rAuthorization: 'Basic YmVoYXQdtc2VlZssDpmYzViNjdfasdfg4YS1mMjdrerjLTRjNzMtYTkxNC1l3eYjVkN2UyY2RmMadsfWUj='\rContent-Length: '0'\rresponse:\rstatus: 200\rheaders:\rServer: nginx\rDate: 'Fri, 11 Jul 2014 13:41:38 GMT'\rContent-Type: 'application/json; charset=utf-8'\rTransfer-Encoding: chunked\rConnection: keep-alive\rX-Backend: mix\rbody: '[{\u0026quot;id\u0026quot;: \u0026quot;3a4136e1bb6f4f6b8cae6fbd0bf2e6aa\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;1cde7b77e8744ff5b6198489ceffce81\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;79bd34f42d584da6ad59c051388134d9\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;d75177a863ec4a458c7222813e10ee84\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;67591976001c4c5a9522b93281e0e8ef\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;ada6876f799d4b589ef0e2c4069c7438\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;3e676ac921aa43f5a5628d231ca7115d\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;222cdddafb9e4c3fb0722bccc9891a15\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;6393dc7ca1ea447eb509b5e1dd6821ac\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;789004fc2ec34d0d8e03945759fc25b0\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;3331badd2da140d08613a786257d177d\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;9437a50a354e4fca8252447b03d21348\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;dec07ca1c30e40f4a693de7f7a102eab\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;3a1a0fb2d4be4580b00a3e35b86aa6fa\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;55de27651bf14c92b901cbd0a62b1603\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;7e12ec786ad544008c5f4e3e4340d5a8\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;a8edb7ab8a8f408a9b0829cc45ca4563\u0026quot;}, {\u0026quot;id\u0026quot;: \u0026quot;b67a4d7187cc4dc8ad661ef7045d15e9\u0026quot;}]'\rThat library should be a big help to try it out. You just need a Saucelabs account and make a file in the root of your folder called .env as noted in the README with your username and token for saucelabs and then run bin/phpunit.\n","relPermalink":"/posts/97/","summary":"Testing that your code works against an API can take up lots of un-needed time. With this php-vcr library you can do ONE real request that saves a fixture file that will automatically be used with each additional requests!\nThey have decent docs on setting up but I will walk through them here.\nI will base this off a seed phpunit repo I have https://github.com/alnutile/base_library_repo\nYou will need to add to the composer.","tags":["php","api","testing"],"title":"Using VCR for PHP API Testing"},{"content":"It is built off of the php-github-api client seen here by KnpLabs . They made a really nice client that uses Guzzle and an AbstractionAPI to make it easy to code out different classes around the API endpoints.\nAnyways I have had such a good experience with github one I figured it would be nice to have one for the Saucelabs work I do.\nhttps://github.com/alnutile/saucelabs_client more features will be added shortly as it is being used in a couple of decent size projects.\nThere are plenty of Tests to show how to use it.\n","relPermalink":"/posts/96/","summary":"It is built off of the php-github-api client seen here by KnpLabs . They made a really nice client that uses Guzzle and an AbstractionAPI to make it easy to code out different classes around the API endpoints.\nAnyways I have had such a good experience with github one I figured it would be nice to have one for the Saucelabs work I do.\nhttps://github.com/alnutile/saucelabs_client more features will be added shortly as it is being used in a couple of decent size projects.","tags":["bdd","testing","php"],"title":"Saucelabs PHP Client"},{"content":"This will cover having a polymorphic relationship in Laravel, showing it on a form in Angular and saving it back to Laravel. Overall it is well documented here at the great docs at Laravel but this post might help in a few areas.\nAs someone defines Polymorphic Relationships there\n \u0026ldquo;Polymorphic relations allow a model to belong to more than one other model, on a single association. For example, you might have a photo model that belongs to either a staff model or an order model. \u0026quot;\n Output the data to Angular Taking the User Model as an example I query the user but then before returning the data to Angular I append the polymorphic results. In this case we will call it Specialties\nprotected function transformOutgoingData($data)\r{\r$data-\u0026gt;specialties = $data-\u0026gt;specialties()-\u0026gt;getResults()-\u0026gt;lists('id');\rreturn $data;\r}\rThis returns just an array to Angular to deal with. When sending it an Object trouble getting Angular to set the selected options. The hard part, since by default it just worked, was to send not only the 2 selected Specialties but the 20 other possible ones and make the list out of that.\n#angular html file\r\u0026lt;div class=\u0026quot;form-group\u0026quot; ng-if=\u0026quot;userHasAdminRole(user)\u0026quot; markdown=\u0026quot;1\u0026quot;\u0026gt;\r\u0026lt;label\u0026gt;Specialties:\u0026lt;/label\u0026gt;\r\u0026lt;select ng-options=\u0026quot;specialty.id as specialty.name for specialty in user.specialties_all\u0026quot;\rname=\u0026quot;specialty\u0026quot;\rmultiple\rng-model=\u0026quot;user.specialties\u0026quot;\rng-required=\u0026quot;true\u0026quot;\rclass=\u0026quot;form-control\u0026quot;\u0026gt;\r\u0026lt;/select\u0026gt;\r\u0026lt;/div\u0026gt;\rThe specialties_all comes from the method I run on the data before output it which I do anyways on many data models. This comes right before the transformOutgoingData.\n protected function addDataToOutGoingModel($user)\r{\r$user = $this-\u0026gt;addAllSpecialtiesToModel($user);\rreturn $user;\r}\rThis way all my select lists on that page and other data lists, checkboxes etc have the data they need.\nFinally when the person clicks Submit it is sent back to Laravel. So far I could not just save or update the user with this info. For example\n#app/models/User.php\rpublic function update($user_id, $all)\r{\r$all = $this-\u0026gt;transformIncomingData($all);\rtry {\r$user = \\User::findOrFail($user_id);\r}\rcatch(\\Expection $e){\rthrow new \\Exception(\u0026quot;User not found\u0026quot;);\r}\r$user-\u0026gt;update($all);\r$user = $this-\u0026gt;saveDataToModel($user);\rreturn $user;\r}\rThe $user-\u0026gt;update($all); will crash with this extra \u0026ldquo;specialties\u0026rdquo; data coming in with this error.\n \u0026ldquo;preg_replace(): Parameter mismatch, pattern is a string while replacement is an array\u0026rdquo;\n So instead I do a step before and after\nBefore I run transformIncomingData and unset the $all[\u0026lsquo;specialties\u0026rsquo;] key I get from Input::all() and save that to a property\n protected function transformIncomingData($data)\r{\r$data = ( isset($data['specialties'])) ? $this-\u0026gt;transformSpecialtiesIncoming($data) : $data;\rreturn $data;\r}\rwhich goes to\n protected function transformSpecialtiesIncoming($data)\r{\r$this-\u0026gt;original_specialities = $data['specialties'];\runset($data['specialties']);\rreturn $data;\r}\rThen after I update the User I run saveDataToModel($user) which triggers this method\n protected function setSpecialties($user)\r{\r$user-\u0026gt;specialties()-\u0026gt;sync($this-\u0026gt;original_specialities);\rreturn $user;\r}\rFinally back to Angular with the results.\nAnother good way to tie all this together is the Model Observer Pattern noted here http://laravel.com/docs/eloquent#model-observers\n","relPermalink":"/posts/95/","summary":"This will cover having a polymorphic relationship in Laravel, showing it on a form in Angular and saving it back to Laravel. Overall it is well documented here at the great docs at Laravel but this post might help in a few areas.\nAs someone defines Polymorphic Relationships there\n \u0026ldquo;Polymorphic relations allow a model to belong to more than one other model, on a single association. For example, you might have a photo model that belongs to either a staff model or an order model.","tags":["laravel","php","angular.js"],"title":"Many to Many Polymorphic Relations from Laravel to Angular and back"},{"content":"Using MailCatcher http://mailcatcher.me/ I can see the emails sent by the website.\nFirst checkout https://github.com/fideloper/Vaprobash/pull/348 to get your box ready All I did was\nLog into the vagrant box and run sudo apt-get install libsqlite3-dev\rThen\nsudo apt-get install ruby1.9.1-dev -y\rsudo gem install mailcatcher\rThen\nsudo gem install mailcatcher -V\rSet your mail.php config This is found in app/config and should be copied to app/config/local so it only applies to local\n#app/config/local/mail.php\r\u0026lt;?php\rreturn array(\r'driver' =\u0026gt; 'smtp',\r'host' =\u0026gt; '192.168.33.10',\r'port' =\u0026gt; 1025,\r'from' =\u0026gt; array('address' =\u0026gt; 'admin@test.com', 'name' =\u0026gt; 'Foo Bar'),\r'encryption' =\u0026gt; '',\r// 'username' =\u0026gt; null,\r// 'password' =\u0026gt; null,\r);\rFinally reload vagrant\nvagrant reload\rAnd start up mailcatcher inside of vagrant.\nmailcatcher --ip=192.168.33.10\rAnd you are set. http://192.168.33.10:1080 works\nLinks  https://laracasts.com/forum/?p=1896-mailcatcher-vagrant-and-multiple-developers/0  ","relPermalink":"/posts/93/","summary":"Using MailCatcher http://mailcatcher.me/ I can see the emails sent by the website.\nFirst checkout https://github.com/fideloper/Vaprobash/pull/348 to get your box ready All I did was\nLog into the vagrant box and run sudo apt-get install libsqlite3-dev\rThen\nsudo apt-get install ruby1.9.1-dev -y\rsudo gem install mailcatcher\rThen\nsudo gem install mailcatcher -V\rSet your mail.php config This is found in app/config and should be copied to app/config/local so it only applies to local","tags":["laravel","php","homestead"],"title":"Laravel Homestead and MailCatcher"},{"content":"Update October 10 10:07 Have hit a few issues with this model but still working okay.\nTo start this trait does some of the work to manage incoming POST data.\n\u0026lt;?php namespace BehatEditor\\Helpers;\ruse Rhumsaa\\Uuid\\Uuid;\rtrait UuidHelper {\rprotected $uuid;\rprotected $saved;\rpublic function getUuid()\r{\rreturn $this-\u0026gt;uuid;\r}\rpublic function setUuid($uuid = null)\r{\rif($uuid === null)\r{\r$uuid = $this-\u0026gt;generateNewId()-\u0026gt;toString();\r}\r$this-\u0026gt;uuid = $uuid;\rreturn $this;\r}\r/**\r* Get a new version 4 (random) UUID.\r*\r* @return \\Rhumsaa\\Uuid\\Uuid\r*/\rpublic function generateNewId()\r{\rreturn Uuid::uuid4();\r}\rprotected function setModelParamsIdWithUuid($params)\r{\rif(!isset($params['id'])) {\r$this-\u0026gt;setUuid($this-\u0026gt;generateNewId()-\u0026gt;toString());\r$params['id'] = $this-\u0026gt;getUuid();\r}\r$this-\u0026gt;uuid = $params['id'];\rreturn $params;\r}\rpublic function dealWithUsingUuidNotReturningIdFromCreate($model)\r{\r$this-\u0026gt;saved = $model-\u0026gt;find($this-\u0026gt;uuid);\r}\r} Here is an example of me using it.\n\r/**\r* Incoming Post request from the Controller to a Service and finally to this Repository Class.\r*/\rpublic function createNewBatch($batch) {\rtry {\r$this-\u0026gt;post = $batch; //Incoming post data\r$this-\u0026gt;setRelatedObjectsFromPost(); //I deal with some of the related data or incoming data before hand\r$setUuid = $this-\u0026gt;setModelParamsIdWithUuid($batch); //this is the traits setting the UUID on the incoming POST data.\r$this-\u0026gt;batch-\u0026gt;create($setUuid); //Finally I create using the auto-generated UUID OR the id/uuid that came in via the post\r/**\r* Again the trait takes care of this ONE issue I can not get around is returning the results of Create with the an ID\r* It works and saves the data but the ID is missing. Though looking at Eloquent this most likely is because I need to be using save.\r* Any ways I load it back up again for further processing.\r* Also some of this work started when I was using Eloquent outside of Laravel so it may need to be refactored since we are back in Laravel.\r*/\r$this-\u0026gt;dealWithUsingUuidNotReturningIdFromCreate($this-\u0026gt;batch); $this-\u0026gt;extractAndSyncRelatedObjects(); //This is the further processing I do not really related to this post\rreturn $this-\u0026gt;uuid; //This was set in the Trait see the trait class for this uuid field.\r} catch (\\Exception $e) {\rthrow new \\Exception('The batch could not be created ' . $e-\u0026gt;getMessage());\r}\r}\rAlso note the model class needs this property set\npublic $incrementing = false;\rEND UPDATES  I needed to have UUID setup for users since we will be syncing users from site to site. I also wanted to use sentry as a starting point for user auth, roles and groups.\nUsing this starter package for a demo https://github.com/alnutile/L4withSentry/tree/uuid which is a fork of https://github.com/rydurham/L4withSentry\nA lot of this comes from http://garrettstjohn.com/entry/using-uuids-laravel-eloquent-orm/\nThe repo will show the changes\nAdd the method and class to the base controller This way we can call to it from other controllers as needed\n##Update the UserController\nThere are lots of changes in here to replace is_numeric wtih $this-\u0026gt;isValue($id) to check the uuid\n##Update the seeder\nThis will setup our seed data to work as well\n##Update the user model\nWe call the boot method to generate a uuid if there is none being passed in.\nUpdate October 10 10:18 This below setup for the model has not worked which is why I have the update at the start of this article\nEnd update /**\r* The \u0026quot;booting\u0026quot; method of the model.\r*\r* @return void\r*/\rpublic static function boot()\r{\rparent::boot();\r/**\r* Attach to the 'creating' Model Event to provide a UUID\r* for the `id` field (provided by $model-\u0026gt;getKeyName())\r*/\rstatic::creating(function ($model) {\r$model-\u0026gt;id = (string)$model-\u0026gt;generateNewId();\r});\r}\rand then generateNewId method down below\n /**\r* Get a new version 4 (random) UUID.\r*\r* @return \\Rhumsaa\\Uuid\\Uuid\r*/\rpublic function generateNewId()\r{\rreturn Uuid::uuid4();\r}\r##Update Route file\nReplace the regular expressions to allow uuid\n+Route::get('users/{id}/reset/{code}', 'UserController@reset')-\u0026gt;where('id', '[a-z0-9\\-]+');\rRoute::get('users/{id}/suspend', array('as' =\u0026gt; 'suspendUserForm', function($id)\r{\rreturn View::make('users.suspend')-\u0026gt;with('id', $id);\r}));\rThere are a number of them in there\n##Composer\nOf course you need it in your composer file\n\t\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;4.2.*\u0026quot;,\r\u0026quot;cartalyst/sentry\u0026quot;: \u0026quot;~2.1\u0026quot;,\r\u0026quot;r15ch13/peculiar\u0026quot;: \u0026quot;1.0.*@dev\u0026quot;\r},\r##User Migration file\nThis repo the sentry migration files are copied into app/database/migrations\nThis being key\n$table-\u0026gt;string('id', '36')-\u0026gt;primary();\r#app/database/migrations/2012_12_06_225921_migration_cartalyst_sentry_install_users.php\r\u0026lt;?php\ruse Illuminate\\Database\\Migrations\\Migration;\rclass MigrationCartalystSentryInstallUsers extends Migration {\r/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::create('users', function($table)\r{\r$table-\u0026gt;string('id', '36')-\u0026gt;primary();\r$table-\u0026gt;string('email');\r$table-\u0026gt;string('password');\r$table-\u0026gt;text('permissions')-\u0026gt;nullable();\r$table-\u0026gt;boolean('activated')-\u0026gt;default(0);\r$table-\u0026gt;string('activation_code')-\u0026gt;nullable();\r$table-\u0026gt;timestamp('activated_at')-\u0026gt;nullable();\r$table-\u0026gt;timestamp('last_login')-\u0026gt;nullable();\r$table-\u0026gt;string('persist_code')-\u0026gt;nullable();\r$table-\u0026gt;string('reset_password_code')-\u0026gt;nullable();\r$table-\u0026gt;string('first_name')-\u0026gt;nullable();\r$table-\u0026gt;string('last_name')-\u0026gt;nullable();\r$table-\u0026gt;timestamps();\r// We'll need to ensure that MySQL uses the InnoDB engine to\r// support the indexes, other engines aren't affected.\r$table-\u0026gt;engine = 'InnoDB';\r$table-\u0026gt;unique('email');\r$table-\u0026gt;index('activation_code');\r$table-\u0026gt;index('reset_password_code');\r});\r}\r/**\r* Reverse the migrations.\r*\r* @return void\r*/\rpublic function down()\r{\rSchema::drop('users');\r}\r}\r","relPermalink":"/posts/94/","summary":"Update October 10 10:07 Have hit a few issues with this model but still working okay.\nTo start this trait does some of the work to manage incoming POST data.\n\u0026lt;?php namespace BehatEditor\\Helpers;\ruse Rhumsaa\\Uuid\\Uuid;\rtrait UuidHelper {\rprotected $uuid;\rprotected $saved;\rpublic function getUuid()\r{\rreturn $this-\u0026gt;uuid;\r}\rpublic function setUuid($uuid = null)\r{\rif($uuid === null)\r{\r$uuid = $this-\u0026gt;generateNewId()-\u0026gt;toString();\r}\r$this-\u0026gt;uuid = $uuid;\rreturn $this;\r}\r/**\r* Get a new version 4 (random) UUID.","tags":["laravel","php"],"title":"Laravel Sentry and UUID"},{"content":"I am doing some queue work and wanted beanstalkd console installed so I can see the status of the queue\nUsing Laravel Homestead as the vagrant box http://laravel.com/docs/homestead I needed to\n Download beanstalkd console https://github.com/ptrofimov/beanstalk_console Setup Homesteads yml file Provision the box Setup my local hosts file to a url Finally run php artisan queue:listen to have my app call to the queue.  And that was about it.\nDownload Beanstalkd Console https://github.com/ptrofimov/beanstalk_console have it stored in the\n/home/vagrant/Code/\rvagrant@homestead:~/Code/\rHomestead YML file //Homestead.yaml in root of your Homestead Vagrant install sites:\r- map: beanstalkd.dev\rto: /home/vagrant/Code/beanstalk_console/public\rProvision the new site With Vagrant running do\n#on my local box not in vagrant\r\u0026gt; vagrant provision\rHost file Just make sure to match 127.0.0.1 to what the domain above or what ever you want\n#/etc/hosts\r127.0.0.1 beanstalkd.dev\rThen in the vagrant box make sure beanstalkd is running ideally every time you start the box. Which by default the box does this.\nFinally you should be able to go to http://beanstalkd.dev:8000/ and see Queue Listen #folder of project\rphp artisan queue:listen\rNow as you put things in the queue you can see them come and go at http://beanstalkd.dev:8000/\n","relPermalink":"/posts/92/","summary":"I am doing some queue work and wanted beanstalkd console installed so I can see the status of the queue\nUsing Laravel Homestead as the vagrant box http://laravel.com/docs/homestead I needed to\n Download beanstalkd console https://github.com/ptrofimov/beanstalk_console Setup Homesteads yml file Provision the box Setup my local hosts file to a url Finally run php artisan queue:listen to have my app call to the queue.  And that was about it.","tags":["laravel","beanstalkd","vagrant","homestead"],"title":"Laravel Homestead and Beanstalkd Console"},{"content":"this was key to dealing with this type of results\n{\r\u0026quot;data\u0026quot;: {\r\u0026quot;name\u0026quot;: \u0026quot;Foo\u0026quot;\r},\r\u0026quot;message\u0026quot;: {\r\u0026quot;Post Updated\u0026quot;\r}\r}\rSo I had to set this in a app.js config area\n//app,js\rapp.config(function(RestangularProvider) {\r// add a response intereceptor\rRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\rvar extractedData;\rextractedData = data.data;\rreturn extractedData;\r});\r});\r","relPermalink":"/posts/91/","summary":"this was key to dealing with this type of results\n{\r\u0026quot;data\u0026quot;: {\r\u0026quot;name\u0026quot;: \u0026quot;Foo\u0026quot;\r},\r\u0026quot;message\u0026quot;: {\r\u0026quot;Post Updated\u0026quot;\r}\r}\rSo I had to set this in a app.js config area\n//app,js\rapp.config(function(RestangularProvider) {\r// add a response intereceptor\rRestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\rvar extractedData;\rextractedData = data.data;\rreturn extractedData;\r});\r});\r","tags":["angular.js","note2self"],"title":"Restangular and nested responses"},{"content":"There is a Mink step to check for the number of elements\n//MinkDictionary.php\r/**\r* Checks, that (?P\u0026lt;num\u0026gt;\\d+) CSS elements exist on the page\r*\r* @Then /^(?:|I )should see (?P\u0026lt;num\u0026gt;\\d+) \u0026quot;(?P\u0026lt;element\u0026gt;[^\u0026quot;]*)\u0026quot; elements?$/\r*/\rpublic function assertNumElements($num, $element)\r{\r$this-\u0026gt;assertSession()-\u0026gt;elementsCount('css', $element, intval($num));\r}\rBut I needed one just to make sure there are some elements on the page, more than 1 for example on a reports page. I guess I could have checked for just 1 eg \u0026ldquo;#behat ol li\u0026rdquo; but I think this can come in handy for our reporting tests.\n//FeatureContext.php\r/**\r* Check that there are more than or = to a number of elements on a page\r*\r* @Then /^I should see more \u0026quot;([^\u0026quot;]*)\u0026quot; or more \u0026quot;([^\u0026quot;]*)\u0026quot; elements$/\r*/\rpublic function iShouldSeeMoreOrMoreElements($num, $element)\r{\r$container = $this-\u0026gt;getSession()-\u0026gt;getPage();\r$nodes = $container-\u0026gt;findAll('css', $element);\rif (intval($num) \u0026gt; count($nodes)) {\r$message = sprintf('%d elements less than %s \u0026quot;%s\u0026quot; found on the page, but should be %d.', count($nodes), $selectorType, $selector, $count);\rthrow new ExpectationException($message, $this-\u0026gt;session);\r}\r}\r","relPermalink":"/posts/90/","summary":"There is a Mink step to check for the number of elements\n//MinkDictionary.php\r/**\r* Checks, that (?P\u0026lt;num\u0026gt;\\d+) CSS elements exist on the page\r*\r* @Then /^(?:|I )should see (?P\u0026lt;num\u0026gt;\\d+) \u0026quot;(?P\u0026lt;element\u0026gt;[^\u0026quot;]*)\u0026quot; elements?$/\r*/\rpublic function assertNumElements($num, $element)\r{\r$this-\u0026gt;assertSession()-\u0026gt;elementsCount('css', $element, intval($num));\r}\rBut I needed one just to make sure there are some elements on the page, more than 1 for example on a reports page. I guess I could have checked for just 1 eg \u0026ldquo;#behat ol li\u0026rdquo; but I think this can come in handy for our reporting tests.","tags":["behat","php"],"title":"Behat Test more than number of elements"},{"content":"The angularjs module for drupal will direct you to setup a menu path for Angular.js to get it\u0026rsquo;s template files.\nSo the Angular route would look like this\n//app.js\rbehat_reports.config(['$routeProvider',\rfunction ($routeProvider) {\r$routeProvider.\rwhen('/', {\rtemplateUrl: '/behat_editor_reports_service_v2/tpl/behat_editor_reports_service_reports_tpl',\rcontroller: 'ReportsAll'\r}).\rotherwise({\rredirectTo: '/'\r});\r}]);\rWhat I am suggesting is that when bootstraping Angular is to set the path to the \u0026ldquo;html\u0026rdquo; template folder. Then your Angular app route can look like this\n//app.js\rbehat_reports.config(['$routeProvider',\rfunction ($routeProvider) {\r//Getting the path we set during our drupal modules function var path = Drupal.settings.behat_reporting_v2.path;\r$routeProvider.\rwhen('/', {\rtemplateUrl: '/' + path + '/templates/reports-all.html',\rcontroller: 'ReportsAll'\r}).\rotherwise({\rredirectTo: '/'\r});\r}]);\rIt gets the path from a setting I set below, which is the path that renders this drupal url and setups up Angular in your module.\n//some drupal module you are making\rfunction behat_reporting_v2_api_reports_ui() {\rangularjs_init_application('behat_reports_v2');\r$path = drupal_get_path('module', 'behat_reporting_v2');\r//Set the drupal path\rdrupal_add_js(array('behat_reporting_v2' =\u0026gt; array('path' =\u0026gt; $path)), 'setting');\rdrupal_add_js($path . '/js/services.js');\rdrupal_add_js($path . '/js/reportsController.js');\rdrupal_add_js($path . '/js/app.js');\rreturn theme('behat_reports_v2');\r}\rYou are basically allowing Angular to get the html files it needs without bootstrapping the template system in drupal. Yeah!\n","relPermalink":"/posts/89/","summary":"The angularjs module for drupal will direct you to setup a menu path for Angular.js to get it\u0026rsquo;s template files.\nSo the Angular route would look like this\n//app.js\rbehat_reports.config(['$routeProvider',\rfunction ($routeProvider) {\r$routeProvider.\rwhen('/', {\rtemplateUrl: '/behat_editor_reports_service_v2/tpl/behat_editor_reports_service_reports_tpl',\rcontroller: 'ReportsAll'\r}).\rotherwise({\rredirectTo: '/'\r});\r}]);\rWhat I am suggesting is that when bootstraping Angular is to set the path to the \u0026ldquo;html\u0026rdquo; template folder. Then your Angular app route can look like this","tags":["angular.js","drupal"],"title":"When you have to use Angular inside of Drupal"},{"content":"Having watched the screen cast here by Jeffery Way and reading Phil Sturgeon\u0026rsquo;s Build APIs You Won\u0026rsquo;t Hate I used this approach on a recent project.\nBasically, and they both cover it really well, instead of returning the data right to the ui/rest endpoint from the database I pass it through a class to transform the data formats, field name etc. This has been extremely helpful as we also work out some wording of fields that I can not do easily in this one class.\nAlso I can do output alterations using this Class and replace text depending on say a users permission level or maybe just to set a default image if there is none. So that user gets and Address Value Object that only shows the State.\nAnother good example was one server was LAMP and the other Nginx. Same db, etc but one has a setting to output a boolean as \u0026ldquo;1\u0026rdquo; and the other 1 so again I could verify and set these as needed as I built out the output. (yes I could have just Google the setting or better yet use a Vagrant box running Nginx to dev on)\nAnyways just a really simple layer to add to a project.\nSome good learning\n Incremental API https://laracasts.com/series/incremental-api-development/episodes/4 Build APIs You Won\u0026rsquo;t Hate https://leanpub.com/build-apis-you-wont-hate Fractal http://fractal.thephpleague.com/simple-example/ Fractal Class https://github.com/thephpleague/fractal  ","relPermalink":"/posts/88/","summary":"Having watched the screen cast here by Jeffery Way and reading Phil Sturgeon\u0026rsquo;s Build APIs You Won\u0026rsquo;t Hate I used this approach on a recent project.\nBasically, and they both cover it really well, instead of returning the data right to the ui/rest endpoint from the database I pass it through a class to transform the data formats, field name etc. This has been extremely helpful as we also work out some wording of fields that I can not do easily in this one class.","tags":["REST","php","patterns"],"title":"Transforming Output from the Database to the View/REST layer"},{"content":"This is soooo easy but this is always something this easy can be missed. In this example we have a Property Model with Buildings that have an address.\nSo the model files look like this\n//Property.php\r//structures = buildings\rpublic function structures()\r{\rreturn $this-\u0026gt;hasMany('Structure');\r}\r//Structure.php\rpublic function address()\r{\rreturn $this-\u0026gt;belongsTo(\u0026quot;Address\u0026quot;);\r}\rSo when I query a property I now get\n {\r\u0026quot;id\u0026quot;: 1,\r\u0026quot;structures\u0026quot;: [\r{\r\u0026quot;id\u0026quot;: 6,\r\u0026quot;address_id\u0026quot;: 9,\r\u0026quot;address\u0026quot;: {\r\u0026quot;id\u0026quot;: 9,\r\u0026quot;city\u0026quot;: \u0026quot;Melvinport\u0026quot;,\r\u0026quot;state\u0026quot;: \u0026quot;MT\u0026quot;,\r\u0026quot;zip\u0026quot;: \u0026quot;75182\u0026quot;,\r\u0026quot;lat\u0026quot;: -18.370000839233,\r\u0026quot;lng\u0026quot;: 36.270000457764,\r\u0026quot;created_at\u0026quot;: \u0026quot;2014-06-09 16:18:40\u0026quot;,\r\u0026quot;updated_at\u0026quot;: \u0026quot;2014-06-09 16:18:40\u0026quot;\r}\rThen in my query for properties I just included this with statement.\n\rpublic function search($args)\r{\r$term = $args['terms'];\r$found = $this-\u0026gt;property-\u0026gt;with('structures.address')\r-\u0026gt;where(\u0026quot;name\u0026quot;, \u0026quot;LIKE\u0026quot;, \u0026quot;%{$term}%\u0026quot;)\r-\u0026gt;get();\rreturn $found;\r}\rthe dot notation basically showing load Structures and the Address data related to those.\n","relPermalink":"/posts/87/","summary":"This is soooo easy but this is always something this easy can be missed. In this example we have a Property Model with Buildings that have an address.\nSo the model files look like this\n//Property.php\r//structures = buildings\rpublic function structures()\r{\rreturn $this-\u0026gt;hasMany('Structure');\r}\r//Structure.php\rpublic function address()\r{\rreturn $this-\u0026gt;belongsTo(\u0026quot;Address\u0026quot;);\r}\rSo when I query a property I now get\n {\r\u0026quot;id\u0026quot;: 1,\r\u0026quot;structures\u0026quot;: [\r{\r\u0026quot;id\u0026quot;: 6,\r\u0026quot;address_id\u0026quot;: 9,\r\u0026quot;address\u0026quot;: {\r\u0026quot;id\u0026quot;: 9,\r\u0026quot;city\u0026quot;: \u0026quot;Melvinport\u0026quot;,\r\u0026quot;state\u0026quot;: \u0026quot;MT\u0026quot;,\r\u0026quot;zip\u0026quot;: \u0026quot;75182\u0026quot;,\r\u0026quot;lat\u0026quot;: -18.","tags":["laravel","php","note2self"],"title":"Showing nested relationships details"},{"content":"Quick intro to Laravel using a custom CMS app I made The repo is here\nThis is mainly to show an example of a small CMS being built in Laravel. CMS (Content Management System) that is at it\u0026rsquo;s most basic level, Authentication, Simple Content Types etc.\nWhat we will cover.\n Installing the \u0026ldquo;CMS\u0026rdquo; and what Page Types it comes with Looking at the folder layout \u0026ldquo;Where is\u0026hellip;.\u0026rdquo; App config setting up the site PHP Artisan command to migrate the site Routes Page example looking at the wysiwyg, Controller, View etc Tags - lets add a many to many relationship  This is NOT the end all setup just an example. There are links below to quality videos, blogs posts docs etc to take you to the next level, not only in Laravel but just Object Oriented Design and good Architecture in general.\nNote the theme has it\u0026rsquo;s own license and you need to purchase it here in order to use it.\nInstall the \u0026ldquo;CMS\u0026rdquo; and what Page Types it comes with The repo is here https://github.com/alnutile/cms\nIn time I will add more features but it really is an app that was made for a client that the base of it I wanted to fork off for later use.\nRun the basic laravel install steps noted on their site http://laravel.com/docs/quick\nWhat Page Types  Pages are the main landing pages for most of the site with a slug to manage the url [1]. More on Pages shortly. Portfolios was how this project started. Basically you make One and then make projects that reference it. Projects are just that. They fit in a Portfolio Menu Sorting there is an admin area for menu sorting as well. Right now it is just for the top left menu. (not the black top nav)  All these \u0026ldquo;Admin\u0026rdquo; links can be seen below\nEvery landing page is a Page Every URLs is Page, Project or Portfolio so the editor can always edit the description of the page even if there is a \u0026ldquo;collection\u0026rdquo; under it. For example /all_projects is a Page that just happens to also show a collection of \u0026ldquo;Projects\u0026rdquo; under it. Ideally this will be a less hard coded relationship BUT this particular example just needed a simple data set.\nThere are Portfolio and Project pages as well that the edit can edit the description on etc.\nLooking at the folder layout This is a standard Laravel App. The one key folder is app/CMS for some items. But otherwise the Controllers, Models etc have all the needed data. [2]\nIn app/CMS there is the Menu Facade, and the MenuService to make managing the menu system easier. [3]\nThe system puts it\u0026rsquo;s uploaded files under public/img in settings, banners etc\nApp config setting up the site The app default to sqlite and the bootstrap/start.php will default to local without you needing to set anything.\nRunning migrations will get you a good sample set of data. You can always turn this off in app/database/seeds\nIn the app/database/seeds/UsersTableSeeder.php file is the admin and test user emails and passwords to login.\nRoutes The app/routes.php is where you can manage routes and see what is there right now.\nPage Example You can edit a page or add a page.\nOnce in there you will see this\nYou can give the page a title, SEO title, upload images and files via the wysiwyg and set the slug (Published coming soon so there can be a workflow)\nTags There is a tagging feature that does not yet have the UI setup. (coming soon). The resource is setup but needs to be placed in the view\nIn php artisan tinker we can mess around with tags thought\n\rphp artisan tinker\r$tag = new Tag(['name' =\u0026gt; \u0026quot;Test 4\u0026quot;]);\rPortfolio::find(1)-\u0026gt;tags()-\u0026gt;save($tag);\rPortfolio::find(1)-\u0026gt;tags-\u0026gt;toArray();\rTag::find(1)-\u0026gt;portfolios-\u0026gt;toArray();\rPortfolio::find(1)-\u0026gt;tags()-\u0026gt;detach(1);\rPortfolio::find(1)-\u0026gt;tags()-\u0026gt;attach(1);\rSo we are making a tag, saving it to Portfolio 1. Seeing it attached to Portfolio 1 and Seeing Portfolios attached to it.\nLinks  Great videos on Laravel, Oop and design patters https://laracasts.com/ Laravel own docs are great http://laravel.com/docs Forums and Chat room http://laravel.io/forum Great overview of Laravel app building http://culttt.com/2013/04/29/getting-started-with-laravel-4/  Footnotes  [1] This will be refactored shortly [2] This will be moved shortly to make it way more extendable but leaving the core easy to manage. [3] Refactor this out so menu is a manyToMany relationship with the models that will use it.  ","relPermalink":"/posts/86/","summary":"Quick intro to Laravel using a custom CMS app I made The repo is here\nThis is mainly to show an example of a small CMS being built in Laravel. CMS (Content Management System) that is at it\u0026rsquo;s most basic level, Authentication, Simple Content Types etc.\nWhat we will cover.\n Installing the \u0026ldquo;CMS\u0026rdquo; and what Page Types it comes with Looking at the folder layout \u0026ldquo;Where is\u0026hellip;.\u0026rdquo; App config setting up the site PHP Artisan command to migrate the site Routes Page example looking at the wysiwyg, Controller, View etc Tags - lets add a many to many relationship  This is NOT the end all setup just an example.","tags":["laravel","php","cms"],"title":"Simple Laravel CMS Example"},{"content":"MUCH BETTER WAY HERE\n This is setup for Laravel but can work for any app. Most of this is due to the great Laracasts on Gulp\nDownload and setup gulp\nFirst make a package.json file in the root of your app and just put curly brackets in it.\ntouch package.json\rvim package.json\r//package.json\r{\r}\rThen run the needed node commands\nnpm install -g gulp\rnpm install gulp --save-dev\rnpm install gulp-notify --save-dev\rnpm install gulp-phpunit --save-dev\rNow the package.json should look like this thanks to the save switch.\n{\r\u0026quot;devDependencies\u0026quot;: {\r\u0026quot;gulp\u0026quot;: \u0026quot;^3.6.2\u0026quot;,\r\u0026quot;gulp-phpunit\u0026quot;: \u0026quot;^0.5.3\u0026quot;,\r\u0026quot;gulp-notify\u0026quot;: \u0026quot;^1.3.0\u0026quot;\r}\r}\rNow to setup the gulpfile, again in the root of your app\n//gulpfile.js\rvar phpunit = require('gulp-phpunit');\rvar gulp = require('gulp'),\rnotify = require('gulp-notify'),\rphpunit = require('gulp-phpunit');\rgulp.task('phpunit', function() {\rvar options = {debug: false, notify: true};\rgulp.src('app/tests/*.php')\r.pipe(phpunit('', options))\r.on('error', notify.onError({\rtitle: \u0026quot;Failed Tests!\u0026quot;,\rmessage: \u0026quot;Error(s) occurred during testing...\u0026quot;\r}));\r});\rgulp.task('default', function(){\rgulp.run('phpunit');\rgulp.watch('app/**/*.php', function(){\rgulp.run('phpunit');\r});\r});\rBasically we are saying watch the app folder recursively for file changes to files ending in php then run all the tests in app/tests/*.php.\nFinally run gulp at the command line and it will run keeping an eye on changes.\ngulp\rThat is it. From here you will get typically phpunit output as you work BUT also a notice if you break something.\n","relPermalink":"/posts/85/","summary":"MUCH BETTER WAY HERE\n This is setup for Laravel but can work for any app. Most of this is due to the great Laracasts on Gulp\nDownload and setup gulp\nFirst make a package.json file in the root of your app and just put curly brackets in it.\ntouch package.json\rvim package.json\r//package.json\r{\r}\rThen run the needed node commands\nnpm install -g gulp\rnpm install gulp --save-dev\rnpm install gulp-notify --save-dev\rnpm install gulp-phpunit --save-dev\rNow the package.","tags":["gulp","phpunit","laravel"],"title":"Quick Gulp file to run php-unit tests"},{"content":"Note to self. The Laravel docs are here that cover Authentication. But when it came time to use a filter and a non email based user name I had to modify the auth.basic filter, or any filter you want to use.\nIt ended up looking like this since I wanted user_account and not email to be the username for authentication.\n//app/filters.php\rRoute::filter('auth.basic', function()\r{\rreturn Auth::basic('user_account');\r});\rYou can see this option here\n//vendor/laravel/framework/src/Illuminate/Auth/Guard.php\rpublic function basic($field = 'email', Request $request = null)\r","relPermalink":"/posts/84/","summary":"Note to self. The Laravel docs are here that cover Authentication. But when it came time to use a filter and a non email based user name I had to modify the auth.basic filter, or any filter you want to use.\nIt ended up looking like this since I wanted user_account and not email to be the username for authentication.\n//app/filters.php\rRoute::filter('auth.basic', function()\r{\rreturn Auth::basic('user_account');\r});\rYou can see this option here","tags":["laravel","php","note2self"],"title":"Laravel and non email authentication"},{"content":"The aim of this repo is to make it super easy to get going with behat. All you will need to get outside of this repo is\n Selenium Jar file download Composer Saucelabs Account (Optional)  After you install and setup those items you will be able to run tests locally or via Saucelabs and have a base setup to add new/custom steps as needed.\nSelenium Easy This is the one jar file you need\nhttps://code.google.com/p/selenium/downloads/detail?name=selenium-server-standalone-2.39.0.jar\u0026amp;can=2\u0026amp;q=\nThe trick though is getting Java for your OS. For me, a Mac, I had to go here http://support.apple.com/kb/DL1572 ie avoid Oracles horrible download process at all costs. Linux is easy and Windows I am not sure about.\nOnce you have Java and Selenium open a terminal and go to the folder you will be keeping selenium and type\njava -jar selenium-server-standalone-2.39.0.jar\rThis will output a lot of info to the screen and will remain running as you work. This line shows it is running\n14:21:08.171 INFO - Started SocketListener on 0.0.0.0:4444\rSo now we can connect to that port later on.\nComposer This is a great way to manage PHP dependencies and just enjoy the numerous libraries out there.\nThe install is pretty easy just type\n$ php composer.phar install\rAnd then move that into /use/bin on your machine so you can now run it from anywhere. (this may take sudo powers)\nBehat Install Finally download the repo https://github.com/alnutile/behat-seed to a folder that you will store tests for a site or many sites.\nFor example\ncd /opt\rgit clone https://github.com/alnutile/behat-seed\rThen cd into behat-seed and lets start the composer install\ncd behat-seed\rcomposer install --prefer-dist\rComeback in 20 minutes (or less hopefully)\nAfter that you should be able to run\nbin/behat --help\rLayout of files and folders This download and build of composer will leave you with this layout.\n /opt/behat-seed\r|-tests\r|--behat.yml\r|--features\r| --bootstrap\r| FeatureContext.php\r| wikipedia.feature\r| wikipedia_tokens.feature\r|-files\r|-vendor\r|-composer.json\r|-composer.lock\r|-bin\r| behat\r|-dummy-site\rTests will be where we store the behat.yml file and tests files. We will explore that more in a moment.\nTests has a folder called features. In here we store our actual tests called *.feature. Example wikipedia.feature.\nFiles is for storing files for a vanilla behat example.\nVendor is for composer as well as composer.lock and composer.json\nBin which stores behat only for now (really a symlink to the right area).\nFinally dummy-site to run a php server for use to quickly test against.\nExploring our configuration To start we are going to look at behat.yml so open up that file and you should see this in your editor. Keep in mind it is YAML format. So if you get errors then look for tabs and other formats that break YAML. Stick to spaces.\nLooking at the file\ndefault:\rpaths:\rfeatures: /opt/behat-seed/tests/features\rbootstrap: /opt/behat-seed/tests/features/bootstrap\rformatter:\rname: pretty\rextensions:\rOrangeDigital\\BusinessSelectorExtension\\Extension:\rurlFilePath: tests/urls.yml\rselectorFilePath: tests/selectors.yml\rassetPath: path\rtimeout: 30\rcontexts:\rUIBusinessSelector: ~\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rgoutte: null\rselenium2: ~\rbase_url: 'http://localhost:8080'\rbrowser_name: safari\rsaucelabs:\rextensions:\rBehat\\MinkExtension\\Extension:\rdefault_session: selenium2\rbase_url: 'http://en.wikipedia.org/wiki/'\rselenium2:\rbrowser: chrome\rwd_host: 'behat-seed:fc5b688a-f27c-4c73-a914-eb5d7e2cdf1e@ondemand.saucelabs.com/wd/hub'\rcapabilities:\rplatform: 'Windows 2012'\rbrowser: chrome\rversion: '26'\rname: 'Behat See'\rcommand-timeout: '600'\rmax-duration: '600'\rWe will cover the details shortly.\nRunning the local server I included a simple php server and some test pages to try this out against To get it going\ncd dummy-site\rphp -S 127.0.0.1:8080\rAnd you now can visit that url to see a site with numerous things to click and move.\nNow What With all of this setup, selenium running then you can just run, for example, this command\nbin/behat --config tests/behat.yml --profile saucelabs tests/features/local_tokens.feature\rTo see tokens in action. Or\nbin/behat --config tests/behat.yml --profile saucelabs tests/features/local.feature\rTo see basic behat/mink Or to see it run but where? On Saucelabs.\nbin/behat --config tests/behat.yml --profile saucelabs tests/features/wikipedia.feature\rEven just testing linux/Mac so you can see that level of work.\nbin/behat --config tests/behat.yml tests/features/pure_behat.feature\rRoadMap  Some more steps included. Base Vagrant install file  Links   OrangeDigital https://github.com/orangedigital/business-selector-extension\n  Saucelabs https://saucelabs.com/\n  Some Code From\n build apis you wont hate    Slim PHP http://www.slimframework.com/\n  ","relPermalink":"/posts/77/","summary":"The aim of this repo is to make it super easy to get going with behat. All you will need to get outside of this repo is\n Selenium Jar file download Composer Saucelabs Account (Optional)  After you install and setup those items you will be able to run tests locally or via Saucelabs and have a base setup to add new/custom steps as needed.\nSelenium Easy This is the one jar file you need","tags":["behat","bdd"],"title":"Behat Seed Repo"},{"content":"Phase 1 of my master plan is to regularly write more posts on misc web and coding in general related topics. And sometimes I can sit and write a few of them but it would be best not to release them all at once for a lot of reason.\nSo this will cover the way I setup a schedule feature to my post creation process. Yes there are libraries for this but I just wanted to have fun making this feature. There are three key posts that helped me get through this.\n Laravel Docs Fideloper Laracasts Ubuntu Firewall Rules  I will not repeat what they offer but link to them as needed.\nWe will cover  Setup up a schedule field Setting up a Beanstalkd server  Setting up the field My Post model has a published or active field and now a scheduled field. It is just a timestamp format field. I could have done other solutions and tighten this up a bit so any feedback is welcome below. When making a post I have two options at the bottom.\nI also use the Timepicker addon\nIf the new post is not Active \u0026amp;\u0026amp; has a Scheduled date then this method kicks into place in my Posts controller during the creation process. I will most likely move this to a Service or Model since it really is not the job of the Controller but this is v1 of my idea.\n//app/controllers/PostsController.php\rpublic function __construct(MarkdownExtraParser $mk = null, SchedulerAls $scheduler = null)\r{\r//other code here\r$this-\u0026gt;scheduler = ($scheduler == null) ? new SchedulerAls() : $scheduler;\r}\r/**\r* Store a newly created post in storage.\r*\r* @return Response\r*/\rpublic function store()\r{\r//basic code here for laravel\r$this-\u0026gt;scheduler-\u0026gt;sendToQueue($post);\rFirst The SchedulerAls Class is pretty simple, using the Laravel Queue\nThe sendToQueue($post) method just does that\n//app/Als/Services/SchedulerAls.php\rclass SchedulerAls\rpublic function sendToQueue($post) {\rif(!empty($post-\u0026gt;scheduled)) {\r\\Log::info(\u0026quot;Testing: PushJob {$post-\u0026gt;id}\u0026quot;);\r\\Queue::push('Als\\Services\\SchedulerAls', array('post' =\u0026gt; $post-\u0026gt;id));\r}\r}\rThis adds a row to the queue to check the \u0026ldquo;Als\\Services|SchedulerAls\u0026rdquo; class and trigger the fire method (more on that below) passing it the $post-\u0026gt;id.\nI make my fire method call to a processPost method that decides if this post is not active and if it has a date set. If so and that date is not greater than today make it active else release it for 30 minutes and the next command needed into the queue.\nEg if I post 1 for tomorrow (#100) and after that one for today (#101), it will see #100 is not ready and move on to #101.\nHere is that the fire method and the processPost. Really it can all be in the fire method.\n//app/Als/Facades/Services/SchedulerAls.php\rclass SchedulerAls {\rpublic function fire($job, $data)\r{\r$this-\u0026gt;processPost($job, $data);\r}\rprotected function processPost($job, $data)\r{\r$id = $data['post'];\r$post = \\Post::find($id);\r$scheduled = Carbon::createFromFormat('Y-m-d H:i:s', $post-\u0026gt;scheduled);\r$now = Carbon::create();\rif($scheduled-\u0026gt;lt($now)) {\r$post-\u0026gt;active = 1;\r$post-\u0026gt;save();\r$job-\u0026gt;delete();\r} else {\r$job-\u0026gt;release(30);\r}\r}\rSo that is it really. Set to active or not. Delete job or release it back to the queue with a 30 minute delay etc.\nSetting up the server. This was really not bad. I ended up using the existing server but will move to another server shortly. One thing to keep in mind is your firewall. You really want to make sure that you are only allowing certain IPs to visit this server or limit beanstalkd to localhost.\nAs noted this tutorial handles most of this really well Fideloper\nFinally beanstalk console is a great way, especially locally if you are not using \u0026ldquo;sync\u0026rdquo; driver to see what is going on. Just make sure to block it with htaccess so no one can just visit it on your server.\nThat is about it. Later I will add an even to allow other things to be triggered maybe via IFTT!\n","relPermalink":"/posts/78/","summary":"Phase 1 of my master plan is to regularly write more posts on misc web and coding in general related topics. And sometimes I can sit and write a few of them but it would be best not to release them all at once for a lot of reason.\nSo this will cover the way I setup a schedule feature to my post creation process. Yes there are libraries for this but I just wanted to have fun making this feature.","tags":["laravel","php","queue"],"title":"Using Beanstalkd to Schedule the release of a post in Laravel"},{"content":"Wow. Included in Laravel http://laravel.com/docs/configuration#protecting-sensitive-configuration\n  removed due to old news\n  http://mattstauffer.co/blog/laravel-forge-using-environment-variables-for-environment-detection/\n  Update I really like the second link and how it sets up a .env file first to just return a simple string. After that you can have the .env.production.php or .env.local.php that laravel can look for.\n//bootstrap/start.php\r$env = $app-\u0026gt;detectEnvironment(function()\r{\rif (file_exists(__DIR__ . '/../.env')) {\rreturn include(__DIR__ . '/../.env');\r} else {\rreturn 'production';\r}\r});\rQuite simple at that point to separate all of the environments.\n","relPermalink":"/posts/76/","summary":"Wow. Included in Laravel http://laravel.com/docs/configuration#protecting-sensitive-configuration\n  removed due to old news\n  http://mattstauffer.co/blog/laravel-forge-using-environment-variables-for-environment-detection/\n  Update I really like the second link and how it sets up a .env file first to just return a simple string. After that you can have the .env.production.php or .env.local.php that laravel can look for.\n//bootstrap/start.php\r$env = $app-\u0026gt;detectEnvironment(function()\r{\rif (file_exists(__DIR__ . '/../.env')) {\rreturn include(__DIR__ . '/../.env');\r} else {\rreturn 'production';\r}\r});\rQuite simple at that point to separate all of the environments.","tags":["laravel","php","note2self"],"title":"Using Dot Env files to manage settings"},{"content":"I have about 4 models that all share 2 common queries. I want all of them that are \u0026ldquo;Published\u0026rdquo; and or Ordered by a field called Order.\nThis does help with some DRY goals, but you could easily change or add to a scope as needed to update all the queries involved etc. Especially if at a later point you break this out into a Repository Patter to use a different ORM.\nSo using Scopes I can make one shared query. All my Model classes extend a BaseModel class I made that looks like this\n//app/models/BaseModel.php\r\u0026lt;?php\rclass BaseModel extends \\Eloquent {\rpublic function scopePublished($query)\r{\rreturn $query-\u0026gt;where(\u0026quot;published\u0026quot;, \u0026quot;=\u0026quot;, 1);\r}\rpublic function scopeOrderByOrder($query)\r{\rreturn $query-\u0026gt;orderBy('order');\r}\r} So with any of the three class all I have to do is use these scopes.\n//app/controllers/PortfoliosController.php\rpublic function adminIndex()\r{\r$portfolios = Portfolio::OrderByOrder()-\u0026gt;get();\rreturn View::make('portfolios.admin_index', compact('portfolios'));\r}\ror even a Models relationships\n//app/models/Portfolio.php\rpublic function projects()\r{\rreturn $this-\u0026gt;hasMany('Project')-\u0026gt;Published()-\u0026gt;OrderByOrder();\r}\r","relPermalink":"/posts/69/","summary":"I have about 4 models that all share 2 common queries. I want all of them that are \u0026ldquo;Published\u0026rdquo; and or Ordered by a field called Order.\nThis does help with some DRY goals, but you could easily change or add to a scope as needed to update all the queries involved etc. Especially if at a later point you break this out into a Repository Patter to use a different ORM.","tags":["laravel","php","note2self"],"title":"Using Scopes in Laravel"},{"content":"Since I am not testing ckeditor this is a way to get text into a sometimes required field.\n//FeaturesContext.php\r/**\r* @Then /^I fill in wysiwyg on field \u0026quot;([^\u0026quot;]*)\u0026quot; with \u0026quot;([^\u0026quot;]*)\u0026quot;$/\r*/\rpublic function iFillInWysiwygOnFieldWith($arg, $arg2)\r{\r$js = \u0026lt;\u0026lt;\u0026lt;HEREDOC\rjQuery(\u0026quot;textarea[name='$arg']\u0026quot;).css('visibility', 'visible');\rjQuery(\u0026quot;textarea[name='$arg']\u0026quot;).show();\rHEREDOC;\r$this-\u0026gt;getSession()-\u0026gt;executeScript($js);\r$this-\u0026gt;fillField($arg, $arg2);\r}\rThis will go into FeaturesContext.php. Then to you test you can pass the name and text to place into the field\n Then I fill in wysiwyg on field \u0026quot;body\u0026quot; with \u0026quot;Project via Test 1\u0026quot;\rIf you want to test Ckeditor then just look for a class that it applies to your text editor to know it is showing. Otherwise assume it is tested and working if it is there.\n","relPermalink":"/posts/68/","summary":"Since I am not testing ckeditor this is a way to get text into a sometimes required field.\n//FeaturesContext.php\r/**\r* @Then /^I fill in wysiwyg on field \u0026quot;([^\u0026quot;]*)\u0026quot; with \u0026quot;([^\u0026quot;]*)\u0026quot;$/\r*/\rpublic function iFillInWysiwygOnFieldWith($arg, $arg2)\r{\r$js = \u0026lt;\u0026lt;\u0026lt;HEREDOC\rjQuery(\u0026quot;textarea[name='$arg']\u0026quot;).css('visibility', 'visible');\rjQuery(\u0026quot;textarea[name='$arg']\u0026quot;).show();\rHEREDOC;\r$this-\u0026gt;getSession()-\u0026gt;executeScript($js);\r$this-\u0026gt;fillField($arg, $arg2);\r}\rThis will go into FeaturesContext.php. Then to you test you can pass the name and text to place into the field\n Then I fill in wysiwyg on field \u0026quot;body\u0026quot; with \u0026quot;Project via Test 1\u0026quot;\rIf you want to test Ckeditor then just look for a class that it applies to your text editor to know it is showing.","tags":["behat","php"],"title":"Quick way to add text to a hidden ckeditor field"},{"content":"Needed to make a quick library for pulling down this info and making it a CSV file.\nThe libraries made this super easy. But it was hard to get all the emails since these can only been seen if in the users profile.\nthe link https://github.com/alnutile/org_reports\n","relPermalink":"/posts/67/","summary":"Needed to make a quick library for pulling down this info and making it a CSV file.\nThe libraries made this super easy. But it was hard to get all the emails since these can only been seen if in the users profile.\nthe link https://github.com/alnutile/org_reports","tags":["github","tools","apis","php"],"title":"Github CLI to get Teams and Members of an Org"},{"content":"Just a reminder this file as a good list of steps I can use. (will post more here shortly)\nMink 1.3 [behat/mink-extension/src/Behat/MinkExtension/Context/MinkDictionary.php](https://github.com/Behat/MinkExtension/blob/1.3/src/Behat/MinkExtension/Context/MinkDictionary.php)\r","relPermalink":"/posts/66/","summary":"Just a reminder this file as a good list of steps I can use. (will post more here shortly)\nMink 1.3 [behat/mink-extension/src/Behat/MinkExtension/Context/MinkDictionary.php](https://github.com/Behat/MinkExtension/blob/1.3/src/Behat/MinkExtension/Context/MinkDictionary.php)\r","tags":["note2self","behat"],"title":"Mink Assertions"},{"content":"After the security update I had to add a remember_token to my user table. security update\nSince I am using sqllite locally I ended up with this error\n\u0026gt;php artisan migrate\r[Illuminate\\Database\\QueryException]\rSQLSTATE[HY000]: General error: 1 Cannot add a NOT NULL column with default value NULL (SQL: alter table \u0026quot;users\u0026quot; add column \u0026quot;remember_token\u0026quot; text not null)\rFinally this post made it clear I had to make this nullable\n//migration file\r/**\r* Run the migrations.\r*\r* @return void\r*/\rpublic function up()\r{\rSchema::table('users', function(Blueprint $table)\r{\r$table-\u0026gt;text('remember_token')-\u0026gt;nullable();\r});\r}\r","relPermalink":"/posts/64/","summary":"After the security update I had to add a remember_token to my user table. security update\nSince I am using sqllite locally I ended up with this error\n\u0026gt;php artisan migrate\r[Illuminate\\Database\\QueryException]\rSQLSTATE[HY000]: General error: 1 Cannot add a NOT NULL column with default value NULL (SQL: alter table \u0026quot;users\u0026quot; add column \u0026quot;remember_token\u0026quot; text not null)\rFinally this post made it clear I had to make this nullable\n//migration file\r/**\r* Run the migrations.","tags":["laravel","php","note2self"],"title":"Adding Column using sqlite caused error 'Cannot add a NOT NULL column with default value NULL'"},{"content":"Using composer and drupal, even d7, is great. But an update or install can leave you with a broken drupal registry.\nSo here is a workflow that is pretty bullet proof.\nIn this example drupal\u0026rsquo;s composer folder where composer.json lives is located in /var/www/drupal/sites/default/files/composer\nSo in there is composer.json and composer.lock\nSo when you need to install a new composer library and you updated your json file you can run\ncd /var/www/drupal/\rdrush composer-rebuild-file\rcomposer --working-dir=/var/www/drupal/sites/default/files/composer update\rIf you get an broken registry issue the typically happens when you run\ndrush composer-manager update\rYou can clear that up with\ndrush rr\rAnd then use composer directly as I did above to update/install your composer related files.\n","relPermalink":"/posts/65/","summary":"Using composer and drupal, even d7, is great. But an update or install can leave you with a broken drupal registry.\nSo here is a workflow that is pretty bullet proof.\nIn this example drupal\u0026rsquo;s composer folder where composer.json lives is located in /var/www/drupal/sites/default/files/composer\nSo in there is composer.json and composer.lock\nSo when you need to install a new composer library and you updated your json file you can run","tags":["composer","drupal","php"],"title":"Drupal and Composer install or update"},{"content":"This was an issue for me using sqlite. There was a simple fix noted in the irclogs of Laravel!\nSo under my require-dev or require I placed\n//composer.json\r\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;4.1.*\u0026quot;,\r\u0026quot;way/generators\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;doctrine/dbal\u0026quot;: \u0026quot;~2.3\u0026quot;\r},\rran composer update and all was well again!\n","relPermalink":"/posts/63/","summary":"This was an issue for me using sqlite. There was a simple fix noted in the irclogs of Laravel!\nSo under my require-dev or require I placed\n//composer.json\r\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;4.1.*\u0026quot;,\r\u0026quot;way/generators\u0026quot;: \u0026quot;dev-master\u0026quot;,\r\u0026quot;doctrine/dbal\u0026quot;: \u0026quot;~2.3\u0026quot;\r},\rran composer update and all was well again!","tags":["laravel","php"],"title":"php artisan migrate:reset not working"},{"content":"The creator of Angular notes it in this video which is well worth the watch.\nBasically when using includes or directives etc you may not be getting a scope value as easily because it is child scope and you may be looking in the parent scope.\nFor example This include if I have an include and it references a model attribute like this\n//Some include\r\u0026lt;input ng-model=\u0026quot;firstname\u0026quot;\u0026gt;\rI may not get the results from that input that I expect. I may not get any. So to be safe it is best to make an Object for your data that then has keys to get the value from. For example\n//Some controller\r$scope.person = {};\r$scope.person.firstname = \u0026quot;Bob\u0026quot;\rThen back in that include\n//Some include\r\u0026lt;input ng-model=\u0026quot;person.firstname\u0026quot;\u0026gt;\rTends to work better than fighting with $parent prefixes as such\n//Some include\r\u0026lt;input ng-model=\u0026quot;$parent.firstname\u0026quot;\u0026gt;\rAnyways glad I watched the video which meant I only wasted under an hour one this head scratcher.\n","relPermalink":"/posts/62/","summary":"The creator of Angular notes it in this video which is well worth the watch.\nBasically when using includes or directives etc you may not be getting a scope value as easily because it is child scope and you may be looking in the parent scope.\nFor example This include if I have an include and it references a model attribute like this\n//Some include\r\u0026lt;input ng-model=\u0026quot;firstname\u0026quot;\u0026gt;\rI may not get the results from that input that I expect.","tags":["angular.js","note2self"],"title":"Angular and Scope - or - How not to waste time figuring out why a scope value is not 'working'"},{"content":"Just a reminder to check if a checkbox is checked or not.\nFeature: Behat bug\rScenario:\rGiven I am on \u0026quot;/bug.html\u0026quot;\rWhen I check \u0026quot;foo\u0026quot;\rThen the \u0026quot;foo\u0026quot; checkbox should be checked\ror\nFeature: Behat bug\rScenario:\rGiven I am on \u0026quot;/bug.html\u0026quot;\rWhen I check \u0026quot;foo\u0026quot;\rThen the \u0026quot;foo\u0026quot; checkbox should not be checked\rhttps://github.com/Behat/Behat/issues/298\n","relPermalink":"/posts/61/","summary":"Just a reminder to check if a checkbox is checked or not.\nFeature: Behat bug\rScenario:\rGiven I am on \u0026quot;/bug.html\u0026quot;\rWhen I check \u0026quot;foo\u0026quot;\rThen the \u0026quot;foo\u0026quot; checkbox should be checked\ror\nFeature: Behat bug\rScenario:\rGiven I am on \u0026quot;/bug.html\u0026quot;\rWhen I check \u0026quot;foo\u0026quot;\rThen the \u0026quot;foo\u0026quot; checkbox should not be checked\rhttps://github.com/Behat/Behat/issues/298","tags":["behat","note2self"],"title":"Behat Checkbox"},{"content":"In this case it is Laravel but any PHP framework could use this.\nGet the Library I used the dflydev-markdown library which uses php-markdown as it\u0026rsquo;s base. 1\nAs it notes I load it up with composer.json and I am ready to use it.\nInject the class into your controller At the controller level I inject it like this\n//BaseController.php\ruse dflydev\\markdown\\MarkdownExtraParser;\rclass BaseController {\rpublic $mk;\rpublic function __construct(MarkdownExtraParser $mk = null)\r{\r$this-\u0026gt;mk = ($mk == null) ? new MarkdownExtraParser() : $mk;\r}\rLater on I call to it on both update and store on any of my Controllers that extend this class.\nAdd a new field to your Posts or other content type But the other step here is to add a rendered_body field to my models/tables. Then on store and update I write to these but on edit I am working on the body field which is markdown.\n$data['rendered_body'] = $this-\u0026gt;mk-\u0026gt;transformMarkdown($data['body']);\rRender it in the View And in my Views I render the rendered_body field and NOT the body field which stores the raw text. This idea I got from danneu.com\nNow with the help of the docs on php-markdown I can do most of the work I need to make a post, embed video, images etc.\nThoughts As far as uploading images I use Dropbox for that so it is really not part of my needs. With dropbox I just take a snapshot and it auto uploads the image and I get the url in my clipboard. Though I then have to go to the URL and get the real URL. Still working on that.\n{\r\u0026quot;name\u0026quot;: \u0026quot;laravel/laravel\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;The Laravel Framework.\u0026quot;,\r\u0026quot;keywords\u0026quot;: [\u0026quot;framework\u0026quot;, \u0026quot;laravel\u0026quot;],\r\u0026quot;license\u0026quot;: \u0026quot;MIT\u0026quot;,\r\u0026quot;repositories\u0026quot;: [\r{\r\u0026quot;type\u0026quot;: \u0026quot;git\u0026quot;,\r\u0026quot;url\u0026quot;: \u0026quot;https://github.com/alnutile/dflydev-markdown\u0026quot;\r}\r],\r\u0026quot;require\u0026quot;: {\r\u0026quot;laravel/framework\u0026quot;: \u0026quot;4.1.*\u0026quot;,\r\u0026quot;dflydev/markdown\u0026quot;: \u0026quot;dev-master\u0026quot;\r},\r\u0026quot;autoload\u0026quot;: {\r\u0026quot;classmap\u0026quot;: [\r\u0026quot;app/commands\u0026quot;,\r\u0026quot;app/controllers\u0026quot;,\r\u0026quot;app/models\u0026quot;,\r\u0026quot;app/database/migrations\u0026quot;,\r\u0026quot;app/database/seeds\u0026quot;,\r\u0026quot;app/tests/TestCase.php\u0026quot;\r]\r},\r\u0026quot;require-dev\u0026quot;: {\r\u0026quot;way/generators\u0026quot;: \u0026quot;2.*\u0026quot;,\r\u0026quot;schickling/backup\u0026quot;: \u0026quot;dev-master\u0026quot;\r},\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;post-install-cmd\u0026quot;: [\r\u0026quot;php artisan clear-compiled\u0026quot;,\r\u0026quot;php artisan optimize\u0026quot;\r],\r\u0026quot;post-update-cmd\u0026quot;: [\r\u0026quot;php artisan clear-compiled\u0026quot;,\r\u0026quot;php artisan optimize\u0026quot;\r],\r\u0026quot;post-create-project-cmd\u0026quot;: [\r\u0026quot;php artisan key:generate\u0026quot;\r]\r},\r\u0026quot;config\u0026quot;: {\r\u0026quot;preferred-install\u0026quot;: \u0026quot;dist\u0026quot;\r},\r\u0026quot;minimum-stability\u0026quot;: \u0026quot;stable\u0026quot;\r}\r  I may start using this michelf since the one I am using now is marked depreciated. But I have already made a change to this one so it works a little better with my settings. My fork is here my fork and my composer.json looks below 2 \u0026#x21a9;\u0026#xfe0e;\n \u0026#x21a9;\u0026#xfe0e;   ","relPermalink":"/posts/60/","summary":"In this case it is Laravel but any PHP framework could use this.\nGet the Library I used the dflydev-markdown library which uses php-markdown as it\u0026rsquo;s base. 1\nAs it notes I load it up with composer.json and I am ready to use it.\nInject the class into your controller At the controller level I inject it like this\n//BaseController.php\ruse dflydev\\markdown\\MarkdownExtraParser;\rclass BaseController {\rpublic $mk;\rpublic function __construct(MarkdownExtraParser $mk = null)\r{\r$this-\u0026gt;mk = ($mk == null) ?","tags":["laravel","php"],"title":"Adding Markdown Editor to your Blog/CMS"},{"content":"Scratched my head on this one for a few.\nInside of ng-if is a new scope. So a model on $scope.modelName will have to be referenced as $parent.modelName in the view.\nBasically it worked on another page so I knew it should work here. When I moved it out of ng-if it worked so it had to be related to that. Finally this post made some sense of it\nSo now my filter works.\n","relPermalink":"/posts/47/","summary":"Scratched my head on this one for a few.\nInside of ng-if is a new scope. So a model on $scope.modelName will have to be referenced as $parent.modelName in the view.\nBasically it worked on another page so I knew it should work here. When I moved it out of ng-if it worked so it had to be related to that. Finally this post made some sense of it\nSo now my filter works.","tags":["note2self"],"title":"Ng-if and Scope"},{"content":"I will not even try to write about this but instead share the most well written technical page I have read in a long time\u0026nbsp;http://deeson-online.co.uk/labs/multi-processing-part-1-how-make-drush-rush\nHe covers how to make a drush command run multiple processes in parallel\u0026nbsp;depending on how many threads you give it. I show in the image below me starting up the command to run 9 behat tests sent to Saucelabs with 4\u0026nbsp;threads (could not go over that)\nThis reduced my testing time quite a bit for each cron job that runs these @critical tests.\nWhich is great. The next step will be to read up about the mtq where he integrates this in the DrupalQueue system!\nnow if only I had the Saucelabs account with unlimited threads!\nTakes 10 seconds to start the jobs but this is \u0026quot;normal\u0026quot; for my behat to Saucelabs startup.\n","relPermalink":"/posts/59/","summary":"I will not even try to write about this but instead share the most well written technical page I have read in a long time\u0026nbsp;http://deeson-online.co.uk/labs/multi-processing-part-1-how-make-drush-rush\nHe covers how to make a drush command run multiple processes in parallel\u0026nbsp;depending on how many threads you give it. I show in the image below me starting up the command to run 9 behat tests sent to Saucelabs with 4\u0026nbsp;threads (could not go over that)","tags":["behat"],"title":"Running multiple tasks asynchronously with Drush, Drupal and MT"},{"content":"I wanted to share the steps I followed to get this WYSIWYG editor working with Angular and to allow uploads. By the end of it you will see how to  Plug CKeditor into your Angular app Setup the config options in your Angular Controller and your view Setup your REST endpoints to take the needed requests   Show image gallery Upload image Show Files to link to Upload file to link to  This can work for really any backend, Laravel, Drupal, Node etc. It is mostly to share some of the undocumented settings I needed. Though ckeditor does have a good api page here ckdocs\nAlso what I hope for you to see how much you can really do with this. Your endpoints can easily be showing files from Dropbox, Evernote etc and offering those up in the interface for CKEditor.\n###Plug in the CKEditor module\nI downloaded this module ng-ckeditor\nfor me I store it in\n/app/lib/ng-ckeditor\rI also placed into the folder the ckeditor download.\nThat download will have a plugin folder in there I downloaded 2 plugins we will use.\nImagebrowser to get an easier api to JSON and MediaEmbed which may show up in my code examples and is totally optional.\n###Your Angular Controller\nDepending on your framework you need to inject the module and then apply some settings.\nInjecting the module Of course you need to include the js files and css file in your \u0026ldquo;index.html\u0026rdquo; file.\n\rng-ckeditor/ng-ckeditor.css\rng-ckeditor/libs/ckeditor/ckeditor.js\rng-ckeditor/ng-ckeditor.js\r\ritem #2 being the actual ckeditor library.\nFinally inject it into your app.js file \u0026lsquo;ngCkeditor\u0026rsquo; so Angular makes it available to your controller.\nThe Controller#### It is here I finally get to configure the editor\n $scope.editorOptions = {\rlanguage: 'en',\r'skin': 'moono',\r'extraPlugins': \u0026quot;imagebrowser,mediaembed\u0026quot;,\rimageBrowser_listUrl: '/api/v1/ckeditor/gallery',\rfilebrowserBrowseUrl: '/api/v1/ckeditor/files',\rfilebrowserImageUploadUrl: '/api/v1/ckeditor/images',\rfilebrowserUploadUrl: '/api/v1/ckeditor/files',\rtoolbarLocation: 'bottom',\rtoolbar: 'full',\rtoolbar_full: [\r{ name: 'basicstyles',\ritems: [ 'Bold', 'Italic', 'Strike', 'Underline' ] },\r{ name: 'paragraph', items: [ 'BulletedList', 'NumberedList', 'Blockquote' ] },\r{ name: 'editing', items: ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock' ] },\r{ name: 'links', items: [ 'Link', 'Unlink', 'Anchor' ] },\r{ name: 'tools', items: [ 'SpellChecker', 'Maximize' ] },\r{ name: 'clipboard', items: [ 'Undo', 'Redo' ] },\r{ name: 'styles', items: [ 'Format', 'FontSize', 'TextColor', 'PasteText', 'PasteFromWord', 'RemoveFormat' ] },\r{ name: 'insert', items: [ 'Image', 'Table', 'SpecialChar', 'MediaEmbed' ] },'/',\r]\r};\rCan also be seen as a gist here\nSo of course you can do no settings but this is where the fun is. I am telling CKEditor where the endpoints are that it needs to talk to to GET and POST data.\nfilebrowserUploadUrl: '/api/v1/ckeditor/files',\rIs telling it to POST the uploaded file to that url.\nfilebrowserBrowseUrl: '/api/v1/ckeditor/files',\rIs telling it to GET the files available from that url.\nThe View The html for this to work is simple.\nAll I need to do is to tell the text area field to use this \u0026lsquo;directive\u0026rsquo;\n\u0026lt;textarea cols=\u0026quot;30\u0026quot; rows=\u0026quot;40\u0026quot;\rng-model=\u0026quot;page.body\u0026quot;\rname=\u0026quot;pageBody\u0026quot;\rckeditor=\u0026quot;editorOptions\u0026quot; rows=\u0026quot;100\u0026quot; required=\u0026quot;required\u0026quot;\u0026gt;\r\u0026lt;/textarea\u0026gt;\rHere I am using the ckeditor directive to take over this textarea and pass the \u0026lsquo;editorOptions\u0026rsquo; info here as well.\nThat is it!\nNow your ui in Angular has the editor.\n##The REST endpoints\nThis was pretty hard to find in the documentations. Googling helped for sure but I figured it would good to put it here as well.\n###GET\nFor getting/displaying the gallery of images I used that Imagebrowser plugin so when the GET request was made to the endpoint \u0026lsquo;/api/v1/ckeditor/gallery\u0026rsquo; it just had to respond with a certain format.\nMy Images Controller method looks like this\n\r$rel = '/assets/img/wysiwyg';\r$dir = public_path() . '/assets/img/wysiwyg';\r$iterator = $this-\u0026gt;finder-\u0026gt;in($dir)-\u0026gt;name('*.png')-\u0026gt;name('*.jpg');\r$files = [];\r$count = 0;\rforeach($iterator as $file) {\r$files[$count]['thumb'] = $rel . '/' . $file-\u0026gt;getFilename();\r$files[$count]['image'] = $rel . '/' . $file-\u0026gt;getFilename();\r$files[$count]['title'] = $file-\u0026gt;getFilename();\r$count ++;\r}\rreturn Response::json($files);\rgist is here\nSince I pulled in the Imagebrowser plugin I did not have to output html.\nThe file viewer work though (eg the non image gallery) one I had to output html but maybe I could have found a JSON method. Here is what my endpoint returns.\n $funcNum = $_GET['CKEditorFuncNum'];\r$message = \u0026quot;File chosen\u0026quot;;\r$script = \u0026quot;\r\u0026lt;script type='text/javascript' src='/assets/js/jquery.1.10.2.min.js'\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script type='text/javascript'\u0026gt;\rvar sendLink = function(event, url) {\revent.preventDefault();\rwindow.opener.CKEDITOR.tools.callFunction(\\\u0026quot;$funcNum\\\u0026quot;, url, \\\u0026quot;$message\\\u0026quot;);\rwindow.close();\r};\r\u0026lt;/script\u0026gt;\u0026quot;;\r$rel = '/assets/files/wysiwyg';\r$dir = public_path() . '/assets/files/wysiwyg/';\r$iterator = $this-\u0026gt;finder-\u0026gt;in($dir)-\u0026gt;name('*.pdf')-\u0026gt;name('*.doc');\r$files = [];\r$count = 0;\rforeach($iterator as $file) {\r$f = $rel . '/' . $file-\u0026gt;getFileName();\r$name = $file-\u0026gt;getFileName();\r$files[$count]['name'] = \u0026quot;\u0026lt;a href='\u0026quot; . $f . \u0026quot;' onclick='sendLink(event, \\\u0026quot;$f\\\u0026quot;)'\u0026gt;{$name}\u0026lt;/a\u0026gt;\u0026quot;;\r$files[$count]['choose'] = \u0026quot;\u0026lt;a href='\u0026quot; . $f . \u0026quot;' onclick='sendLink(event, \\\u0026quot;$f\\\u0026quot;)'\u0026gt;\u0026lt;i class='glyphicon glyphicon-new-window'\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/a\u0026gt;\u0026quot;;\r$count++;\r}\rreturn View::make('files.index', compact('files', 'script'));\rThe View::make is just a template file that goes through the array and makes a bootstrap formatted table. Nothing fancy. But the $script, though it could have been better, was the only way I could figure to pass back the chosen file to the editor.\nKeep in mind this is the html/output on the popup window you get when you click \u0026ldquo;Upload File\u0026rdquo; In CKEditor.\nThat takes care of GET so the user will see buttons in CKEditor and browse images and files to insert as we all know.\n##POST / Uploading##\nThese 2 endpoints are the same. They are POST endpoints that process the data like this\n $rel = '/assets/files/wysiwyg';\r$dir = public_path() . $rel;\r$_FILES['upload']['type'] = strtolower($_FILES['upload']['type']);\rif ($_FILES['upload']['type'] == 'application/pdf'\r|| $_FILES['upload']['type'] == 'image/jpg'\r|| $_FILES['upload']['type'] == 'image/gif'\r|| $_FILES['upload']['type'] == 'image/jpeg'\r|| $_FILES['upload']['type'] == 'application/doc')\r{\r$tmp = $_FILES['upload']['tmp_name'];\r$dest = $dir . '/' . $_FILES['upload']['name'];\r$this-\u0026gt;filesystem-\u0026gt;copy($tmp, $dest, $override = TRUE);\r$file = '/assets/files/wysiwyg/'.$_FILES['upload']['name'];\r}\r$funcNum = $_GET['CKEditorFuncNum'];\r$message = \u0026quot;File uploaded\u0026quot;;\r$script = \u0026quot;\u0026lt;script type='text/javascript'\u0026gt;window.parent.CKEDITOR.tools.callFunction(\\\u0026quot;$funcNum\\\u0026quot;, \\\u0026quot;$file\\\u0026quot;, \\\u0026quot;$message\\\u0026quot;);\u0026lt;/script\u0026gt;\u0026quot;;\rreturn $script;\rgist is here\nBasically I take the input of $_FILES and make sure it is what I expected and save it to the folder. The tricky part was to switch the user back to the interface, closing the parent window so they now can finish linking their file.\n##Final notes\nThis is a first draft of this working deployed system. So it may have changes to it. I will try to comment here as I learn more.\nWhen getting info from CKEDITOR I would do a var_dump at the endpoint to see what it was sending me for data. You can always see this output in your Chrome Console under Networking.\n##Some links\n\rhttps://github.com/spantaleev/ckeditor-imagebrowser#usage\rhttp://devture.com/projects/ckeditor-imagebrowser/demo/\rhttp://ckeditor.com/addon/imagebrowser\rhttps://github.com/spantaleev/ckeditor-imagebrowser#usage\rhttp://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.config.html\rhttp://docs.cksource.com/CKEditor_3.x/Developers_Guide/File_Browser_(Uploader)\rhttp://www.paulfp.net/blog/2010/10/how-to-add-and-upload-an-image-using-ckeditor/\rhttp://www.mixedwaves.com/2010/02/integrating-fckeditor-filemanager-in-ckeditor/\r\r","relPermalink":"/posts/50/","summary":"I wanted to share the steps I followed to get this WYSIWYG editor working with Angular and to allow uploads. By the end of it you will see how to  Plug CKeditor into your Angular app Setup the config options in your Angular Controller and your view Setup your REST endpoints to take the needed requests   Show image gallery Upload image Show Files to link to Upload file to link to  This can work for really any backend, Laravel, Drupal, Node etc.","tags":["angular.js"],"title":"Angular.js, CKEditor, and REST including file uploads"},{"content":"There are two settings I add to my yml file to prevent a timeout, command-timeout and max-duration.\n\rLast I checked though I had to add a different repo to my composer.json\n\rNow you get 10 minutes on both\n","relPermalink":"/posts/49/","summary":"There are two settings I add to my yml file to prevent a timeout, command-timeout and max-duration.\n\rLast I checked though I had to add a different repo to my composer.json\n\rNow you get 10 minutes on both","tags":["saucelabs"],"title":"Saucelabs Timeout"},{"content":"Lately I have had a few projects using a RESTful backend to output JSON formatted data and a javascript front end. All of them are different technologies but the front end is in Angular.js.\nSo using the Angular mock module I have been able to build out the front end with no backend. I started to do this for speed reasons but realized a number of huge benefits.\nAngular has some good docs on how to mock this data and use this $httpbackend module here.\nAlso I posted a quick video here on getting the json data from your app or from this great site JsonGenerator.\nYou can see the video here\n## User interfaces change\nNo matter what the mock up show the ui will change. By having such a quick interface to try out widgets and workflows I can easily change with the clients needs.\nAlso use Layitout to crank out the UI\n## The UI building process helps me to really understand the data goals\nIf the ui is coming before the data end points are built then this really gives you time to rethink some assumptions on the data goals.\n## Speed and Testing\nLocal testing is super fast. Also the infamous page reload for viewing the latest change is instantaneous.¬†## UI fixes are separate from backend fixes and changes\nA bug or feature added to the ui does not get tangled with the backend making for quick fixes and deployments.¬†## Lastly it is real code\nThe mocked routing code is pretty much a drop in for the final front end product. Just one file and it's one call to the mock module and run settings and it will call the real end points! And my data is structured to help guide me in building the RESTful part of the app\nI will do a quick series on using Angula mock and in general a workflow for building like this that can be applied to different javascript front ends and back ends.\n¬†Links\rSupports wildcard\rhttp://docs.angularjs.org/api/ngMock/service/$httpBackend and¬†http://stackoverflow.com/questions/18618532/is-it-possible-to-use-wild-cards-in-angularjs-mocks\nUPDATE: June 17 13:54 a friend just posted a link to http://jsonstub.com/ which looks really interesting\n","relPermalink":"/posts/58/","summary":"Lately I have had a few projects using a RESTful backend to output JSON formatted data and a javascript front end. All of them are different technologies but the front end is in Angular.js.\nSo using the Angular mock module I have been able to build out the front end with no backend. I started to do this for speed reasons but realized a number of huge benefits.\nAngular has some good docs on how to mock this data and use this $httpbackend module here.","tags":["angular.js"],"title":"Building the UI first with Angular, Mocked Data and REST"},{"content":"I had to update other items on the page including an CSV export as the user made filter changes on the site.\nI had to pass the results of ng-repeat into a model and then the filters as seen here\n\nAnd in my controller I added a watcher to process the new results as needed.\n\nThis simple solution I had some trouble grasping.\n","relPermalink":"/posts/43/","summary":"I had to update other items on the page including an CSV export as the user made filter changes on the site.\nI had to pass the results of ng-repeat into a model and then the filters as seen here\n\nAnd in my controller I added a watcher to process the new results as needed.\n\nThis simple solution I had some trouble grasping.","tags":["angular.js"],"title":"Angular Watching a model and it's filters"},{"content":"I\u0026#39;ve been working on behat related work for some time now and here is a list of things I would like to centralize and share\n\rVagrant install of behat and behatEditor https://github.com/alnutile/behat-vagrant\rBehatEditor https://github.com/alnutile/behat_editor it will link off to serveral projects\r\rGithub Integration\rSaucelabs Integration\rAngular Reporting tool\r\r\rGoogle doc that goes over how to get started \rThere is a new version of the tool coming out soon and a service you can see that starts of it here http://angular.behateditor.io/#/\rSome links on the blog here http://www.alfrednutile.info/tags/behat\rSome youtube videos are linked in all the above docs for setting up, testing etc.\r\r","relPermalink":"/posts/42/","summary":"I\u0026#39;ve been working on behat related work for some time now and here is a list of things I would like to centralize and share\n\rVagrant install of behat and behatEditor https://github.com/alnutile/behat-vagrant\rBehatEditor https://github.com/alnutile/behat_editor it will link off to serveral projects\r\rGithub Integration\rSaucelabs Integration\rAngular Reporting tool\r\r\rGoogle doc that goes over how to get started \rThere is a new version of the tool coming out soon and a service you can see that starts of it here http://angular.","tags":["behat"],"title":"Behat Resources "},{"content":"This took a few settings to get it working.\nFor one I put the correct paths in for karma and webdriver\n\rI then had to download mocks http://code.angularjs.org/1.2.14/angular-mocks.js even though I used angular-seed and setup my module to include this \u0026#39;ngMockE2E\u0026#39;\nThis page was a good starting point http://docs.angularjs.org/api/ngMockE2E/service/$httpBackend\nThen there is the testing end 2 end frame work https://github.com/angular/protractor/tree/master/docs/ that allowed me to easily write non-unit tests\n\u0026nbsp;\n","relPermalink":"/posts/19/","summary":"This took a few settings to get it working.\nFor one I put the correct paths in for karma and webdriver\n\rI then had to download mocks http://code.angularjs.org/1.2.14/angular-mocks.js even though I used angular-seed and setup my module to include this \u0026#39;ngMockE2E\u0026#39;\nThis page was a good starting point http://docs.angularjs.org/api/ngMockE2E/service/$httpBackend\nThen there is the testing end 2 end frame work https://github.com/angular/protractor/tree/master/docs/ that allowed me to easily write non-unit tests\n\u0026nbsp;","tags":["angular.js"],"title":"Angular Seed Testing Setup"},{"content":"quick tip on getting and setting your token for drupal when doing a put, post, destroy against a drupal site.\u0026Acirc;\u0026nbsp;\nMostly gotten from here\nMight even be better to reset the formant for X-CSRF-Token to the default one Angular is looking for X-CSRFToken\n\n","relPermalink":"/posts/48/","summary":"quick tip on getting and setting your token for drupal when doing a put, post, destroy against a drupal site.\u0026Acirc;\u0026nbsp;\nMostly gotten from here\nMight even be better to reset the formant for X-CSRF-Token to the default one Angular is looking for X-CSRFToken","tags":["angular.js"],"title":"Angular Drupal and CSRF"},{"content":"formatting issue will update the code examples soon\nI have a Class I want to test with phpunit but it makes several queries to a drupal database. I rather not bootstrapdrupal just to make sure this Class is returning the results as expected.\nFor example the SiteClass has a method called index. That method takes the uuid for a user and finds all the sites related to that user. Then using that uuid I have some other non drupal data that relates to it. So my class might look like this\n//Foo.php\npublic function getSitesAndOtherDataForUser($uuid) {\n$output = db_query(some query here);\nreturn array(\u0026#39;data\u0026#39; =\u0026gt; $output)\n}\n\rBut this is hard to test quickly in phpunit without touching the database. But I do not want to test the database. I know db_query works. I know the database layer works. I just want to verify this class is getting the request, getting information and then passing me back the right data format.\nOne way to do that is to make a Repository class that wraps all your database queries into methods.\nSo the class SiteClass has a constructor that allows the injection of the repository class for example\n//Foo.php\npublic function __construct(SiteRepository $repo = null)\n{\n$this-\u0026gt;repo = ($repo == null) ? new SiteRepository() : $repo;\n}\n\rThis then turns the above function into\n//Foo.phppublic function getSitesAndOtherDataForUser($uuid) {\n$output = $this-\u0026gt;repo-\u0026gt;getSitesForUserUuid($uuid)\nreturn array(\u0026#39;data\u0026#39; =\u0026gt; $output)\n}\n\rAnd this then allows me to instantiate in a phpunit test the same Repo but using Mockery so my unit test would look like this\n//FooTest.phppublic function setUp()\n{\n$this-\u0026gt;repo = Mockery::mock(\u0026#39;SiteRepository\u0026#39;)\n}\n\rAnd later call to that method in the mocked class\n//FooTest.php\npublic function test_getSitesAndOtherDataForUser()\n{\n$this-\u0026gt;repo-\u0026gt;shouldReceive(\u0026#39;getSitesForUserUuid\u0026#39;)-\u0026gt;once()-\u0026gt;andReturn(array(1,2,3));\n}\n\rThis then allows me to quickly test how my code is dealing with the output. Maybe there is a filter, or other relations I am trying to pull in. As far as testing that the data structure is correct etc I save that for a test for that.\nThe Repository Class can look like this if using EntityQuery\n//SiteRepository.php\npublic $eq;\nfunction __construct(\\EntityFieldQuery $eq = null) {\n$this-\u0026gt;eq = ($eq == null) ? new \\EntityFieldQuery() : $eq;\n}\n//Later on I can offer a method\nfunctiongetSitesForUserUuid($uuid){\n$this-\u0026gt;eq = do some query\n}\n//if we are not using EQ then just do your db_query in there\nfunction getSitesForUserUuid($uudi) {\n$results = db_query(foo);\nreturn $results;\n}\n\r","relPermalink":"/posts/46/","summary":"formatting issue will update the code examples soon\nI have a Class I want to test with phpunit but it makes several queries to a drupal database. I rather not bootstrapdrupal just to make sure this Class is returning the results as expected.\nFor example the SiteClass has a method called index. That method takes the uuid for a user and finds all the sites related to that user. Then using that uuid I have some other non drupal data that relates to it.","tags":["testing"],"title":"Mocking drupal database queries"},{"content":"When doing some API work using Laravel as the REST server I was getting a common error \u0026quot;No \u0026#39;Access-Control-Allow-Origin\u0026#39; header is present on the requested resource.\u0026quot; which happens when the REST server is on a different domain than the client server.\nI installed this package\u0026nbsp;https://github.com/barryvdh/laravel-cors\u0026nbsp;and it now works fine.\n","relPermalink":"/posts/4/","summary":"When doing some API work using Laravel as the REST server I was getting a common error \u0026quot;No \u0026#39;Access-Control-Allow-Origin\u0026#39; header is present on the requested resource.\u0026quot; which happens when the REST server is on a different domain than the client server.\nI installed this package\u0026nbsp;https://github.com/barryvdh/laravel-cors\u0026nbsp;and it now works fine.","tags":["api"],"title":"CORS and Laravel"},{"content":"Setting up Vagrant for Behat\rol.lst-kix_xa82982e1krb-7.start{counter-reset:lst-ctn-kix_xa82982e1krb-7 0}.lst-kix_xa82982e1krb-4li{counter-increment:lst-ctn-kix_xa82982e1krb-4}ol.lst-kix_xa82982e1krb-5.start{counter-reset:lst-ctn-kix_xa82982e1krb-5 0}.lst-kix_xa82982e1krb-1li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-1,lower-latin) \". \"}.lst-kix_xa82982e1krb-0li{counter-increment:lst-ctn-kix_xa82982e1krb-0}.lst-kix_xa82982e1krb-3li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-3,decimal) \". \"}.lst-kix_xa82982e1krb-3li{counter-increment:lst-ctn-kix_xa82982e1krb-3}ol.lst-kix_xa82982e1krb-8{list-style-type:none}ol.lst-kix_xa82982e1krb-0.start{counter-reset:lst-ctn-kix_xa82982e1krb-0 0}.lst-kix_xa82982e1krb-6li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-6,decimal) \". \"}.lst-kix_xa82982e1krb-4li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-4,lower-latin) \". \"}.lst-kix_xa82982e1krb-1li{counter-increment:lst-ctn-kix_xa82982e1krb-1}.lst-kix_xa82982e1krb-0li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-0,decimal) \". \"}.lst-kix_xa82982e1krb-7li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-7,lower-latin) \". \"}ol.lst-kix_xa82982e1krb-3.start{counter-reset:lst-ctn-kix_xa82982e1krb-3 0}ol.lst-kix_xa82982e1krb-6.start{counter-reset:lst-ctn-kix_xa82982e1krb-6 0}ol.lst-kix_xa82982e1krb-1{list-style-type:none}ol.lst-kix_xa82982e1krb-0{list-style-type:none}.lst-kix_xa82982e1krb-7li{counter-increment:lst-ctn-kix_xa82982e1krb-7}ol.lst-kix_xa82982e1krb-3{list-style-type:none}ol.lst-kix_xa82982e1krb-2{list-style-type:none}ol.lst-kix_xa82982e1krb-5{list-style-type:none}ol.lst-kix_xa82982e1krb-2.start{counter-reset:lst-ctn-kix_xa82982e1krb-2 0}ol.lst-kix_xa82982e1krb-4{list-style-type:none}ol.lst-kix_xa82982e1krb-4.start{counter-reset:lst-ctn-kix_xa82982e1krb-4 0}ol.lst-kix_xa82982e1krb-7{list-style-type:none}ol.lst-kix_xa82982e1krb-6{list-style-type:none}.lst-kix_xa82982e1krb-6li{counter-increment:lst-ctn-kix_xa82982e1krb-6}.lst-kix_xa82982e1krb-8li{counter-increment:lst-ctn-kix_xa82982e1krb-8}.lst-kix_xa82982e1krb-5li{counter-increment:lst-ctn-kix_xa82982e1krb-5}ol.lst-kix_xa82982e1krb-8.start{counter-reset:lst-ctn-kix_xa82982e1krb-8 0}.lst-kix_xa82982e1krb-5li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-5,lower-roman) \". \"}ol.lst-kix_xa82982e1krb-1.start{counter-reset:lst-ctn-kix_xa82982e1krb-1 0}.lst-kix_xa82982e1krb-8li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-8,lower-roman) \". \"}.lst-kix_xa82982e1krb-2li{counter-increment:lst-ctn-kix_xa82982e1krb-2}.lst-kix_xa82982e1krb-2li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-2,lower-roman) \". \"}ol{margin:0;padding:0}.c0{widows:2;orphans:2;height:11pt;direction:ltr}.c3{widows:2;orphans:2;direction:ltr;margin-left:36pt}.c10{max-width:468pt;background-color:#ffffff;padding:72pt 72pt 72pt 72pt}.c4{widows:2;orphans:2;direction:ltr}.c2{color:#1155cc;text-decoration:underline}.c11{padding-top:10pt;page-break-after:avoid}.c12{margin:0;padding:0}.c6{color:inherit;text-decoration:inherit}.c1{font-weight:bold}.c9{text-decoration:underline}.c13{color:#ff2500}.c8{font-size:10pt}.c5{margin-left:36pt}.c7{padding-left:0pt}.title{widows:2;padding-top:0pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:21pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}.subtitle{widows:2;padding-top:0pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-style:italic;font-size:13pt;font-family:\"Trebuchet MS\";padding-bottom:10pt;page-break-after:avoid}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{color:#000000;font-size:11pt;margin:0;font-family:\"Arial\"}h1{widows:2;padding-top:10pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:16pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}h2{widows:2;padding-top:10pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:13pt;font-family:\"Trebuchet MS\";font-weight:bold;padding-bottom:0pt;page-break-after:avoid}h3{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:12pt;font-family:\"Trebuchet MS\";font-weight:bold;padding-bottom:0pt;page-break-after:avoid}h4{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:11pt;text-decoration:underline;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}h5{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:11pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}h6{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-style:italic;font-size:11pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}\r\rVagrant Setup \r\u0026nbsp;\nYou can see the video here\n\u0026nbsp;\nThis is a fork of Steve Power\u0026#39;s work\u0026nbsp;https://github.com/appnosteev\n\u0026nbsp;\nThe goal here is to enable you to work locally in either Windows, Mac, Linux but using behat in an environment we can offer support in. After you are done with this install you will \nHave a working Vagrant install with behat working\rA website with the Behat Editor and integrated Report system\rIntegration with Github so you can synchronize your work via the BehatEditor GUI\rAbility to trigger your Desktops browser from tests running in the Vagrant VM vai the website or command line.\r\r\u0026nbsp;\nSteps\r\u0026nbsp;\nDownload and install Virtualbox\nSee the help info here https://www.virtualbox.org/\n\u0026nbsp;\nDownload and install Vagrant\nSee the help here http://docs.vagrantup.com/v2/installation/index.html\nYou just need to get it installed so the executable works. The next steps will setup the VM\n\u0026nbsp;\nDownload the Git Repo to a directory you will keep it in.\nWe will use this repo for now\nhttps://github.com/alnutile/behat-vagrant\nSo go to the command line and type \n\u0026nbsp;\ngit clone https://github.com/alnutile/behat-vagrant.git\n\u0026nbsp;\nthen go into that folder\n\u0026nbsp;\ncd into that behat-vagrant directory\n\u0026nbsp;\nAfter you are in there type\n\u0026nbsp;\nvagrant up\n\u0026nbsp;\nAnd wait for about 5 minutes or so for it to build. It may ask you for a system password along the way.\n\u0026nbsp;\nThen update your host file for the new IP as seen in these docs\nhttps://github.com/alnutile/behat-vagrant/blob/master/README.markdown\n\u0026nbsp;\nLinux and Mac\nsudo vim /etc/hosts\n\u0026nbsp;\nWindows\nhttp://www.howtogeek.com/howto/27350/beginner-geek-how-to-edit-your-hosts-file/\n\u0026nbsp;\nFor any of these your IP will be \n33.33.33.10 drupal.vbox.local \n\u0026nbsp;\nOnce done you can visit the site http://drupal.vbox.local BUT still a few more steps.\n\u0026nbsp;\nSetting up your behat.yml file\nGet your machines IP address\n\u0026nbsp;\nThen Edit your behat.yml file found in the folder you setup your Vagrant install\nThis file will assist you in running your local tests. Just find the file here \n\u0026nbsp;\nThen edit that file and add the lines seen here https://gist.github.com/alnutile/9273691 in the behat_after.yml\n\u0026nbsp;\nSet that IP to your IP and set the browser to firefox or safari or chrome as needed.\n\u0026nbsp;\nFinally run the Selenium Server on your machine (not the vagrant box)\nGot to https://code.google.com/p/selenium/downloads/detail?name=selenium-server-standalone-2.39.0.jar\u0026amp;can=2\u0026amp;q\n\u0026nbsp;\nDownload and run by typing this in the folder you downloaded it to\n\u0026nbsp;\njava -jar selenium-server-standalone-2.39.0.jar\n\u0026nbsp;\nNow it will run in the background.\n\u0026nbsp;\nSo now you can visit the website and run a test (not in Saucelabs yet)\n\u0026nbsp;\nGo to the URL http://drupal.vbox.local \nlog in admin/admin\nVisit http://drupal.vbox.local/admin/behat/index\nClick Add and for now just click \nto fill in a default wikipedia test. Then click \u0026ldquo;Run Test\u0026rdquo; and a new window should pop up on your computer for Firefox or Safari running the test. That is it!\n\r","relPermalink":"/posts/57/","summary":"Setting up Vagrant for Behat\rol.lst-kix_xa82982e1krb-7.start{counter-reset:lst-ctn-kix_xa82982e1krb-7 0}.lst-kix_xa82982e1krb-4li{counter-increment:lst-ctn-kix_xa82982e1krb-4}ol.lst-kix_xa82982e1krb-5.start{counter-reset:lst-ctn-kix_xa82982e1krb-5 0}.lst-kix_xa82982e1krb-1li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-1,lower-latin) \". \"}.lst-kix_xa82982e1krb-0li{counter-increment:lst-ctn-kix_xa82982e1krb-0}.lst-kix_xa82982e1krb-3li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-3,decimal) \". \"}.lst-kix_xa82982e1krb-3li{counter-increment:lst-ctn-kix_xa82982e1krb-3}ol.lst-kix_xa82982e1krb-8{list-style-type:none}ol.lst-kix_xa82982e1krb-0.start{counter-reset:lst-ctn-kix_xa82982e1krb-0 0}.lst-kix_xa82982e1krb-6li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-6,decimal) \". \"}.lst-kix_xa82982e1krb-4li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-4,lower-latin) \". \"}.lst-kix_xa82982e1krb-1li{counter-increment:lst-ctn-kix_xa82982e1krb-1}.lst-kix_xa82982e1krb-0li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-0,decimal) \". \"}.lst-kix_xa82982e1krb-7li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-7,lower-latin) \". \"}ol.lst-kix_xa82982e1krb-3.start{counter-reset:lst-ctn-kix_xa82982e1krb-3 0}ol.lst-kix_xa82982e1krb-6.start{counter-reset:lst-ctn-kix_xa82982e1krb-6 0}ol.lst-kix_xa82982e1krb-1{list-style-type:none}ol.lst-kix_xa82982e1krb-0{list-style-type:none}.lst-kix_xa82982e1krb-7li{counter-increment:lst-ctn-kix_xa82982e1krb-7}ol.lst-kix_xa82982e1krb-3{list-style-type:none}ol.lst-kix_xa82982e1krb-2{list-style-type:none}ol.lst-kix_xa82982e1krb-5{list-style-type:none}ol.lst-kix_xa82982e1krb-2.start{counter-reset:lst-ctn-kix_xa82982e1krb-2 0}ol.lst-kix_xa82982e1krb-4{list-style-type:none}ol.lst-kix_xa82982e1krb-4.start{counter-reset:lst-ctn-kix_xa82982e1krb-4 0}ol.lst-kix_xa82982e1krb-7{list-style-type:none}ol.lst-kix_xa82982e1krb-6{list-style-type:none}.lst-kix_xa82982e1krb-6li{counter-increment:lst-ctn-kix_xa82982e1krb-6}.lst-kix_xa82982e1krb-8li{counter-increment:lst-ctn-kix_xa82982e1krb-8}.lst-kix_xa82982e1krb-5li{counter-increment:lst-ctn-kix_xa82982e1krb-5}ol.lst-kix_xa82982e1krb-8.start{counter-reset:lst-ctn-kix_xa82982e1krb-8 0}.lst-kix_xa82982e1krb-5li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-5,lower-roman) \". \"}ol.lst-kix_xa82982e1krb-1.start{counter-reset:lst-ctn-kix_xa82982e1krb-1 0}.lst-kix_xa82982e1krb-8li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-8,lower-roman) \". \"}.lst-kix_xa82982e1krb-2li{counter-increment:lst-ctn-kix_xa82982e1krb-2}.lst-kix_xa82982e1krb-2li:before{content:\"\" counter(lst-ctn-kix_xa82982e1krb-2,lower-roman) \". \"}ol{margin:0;padding:0}.c0{widows:2;orphans:2;height:11pt;direction:ltr}.c3{widows:2;orphans:2;direction:ltr;margin-left:36pt}.c10{max-width:468pt;background-color:#ffffff;padding:72pt 72pt 72pt 72pt}.c4{widows:2;orphans:2;direction:ltr}.c2{color:#1155cc;text-decoration:underline}.c11{padding-top:10pt;page-break-after:avoid}.c12{margin:0;padding:0}.c6{color:inherit;text-decoration:inherit}.c1{font-weight:bold}.c9{text-decoration:underline}.c13{color:#ff2500}.c8{font-size:10pt}.c5{margin-left:36pt}.c7{padding-left:0pt}.title{widows:2;padding-top:0pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:21pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}.subtitle{widows:2;padding-top:0pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-style:italic;font-size:13pt;font-family:\"Trebuchet MS\";padding-bottom:10pt;page-break-after:avoid}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{color:#000000;font-size:11pt;margin:0;font-family:\"Arial\"}h1{widows:2;padding-top:10pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:16pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}h2{widows:2;padding-top:10pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:13pt;font-family:\"Trebuchet MS\";font-weight:bold;padding-bottom:0pt;page-break-after:avoid}h3{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:12pt;font-family:\"Trebuchet MS\";font-weight:bold;padding-bottom:0pt;page-break-after:avoid}h4{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:11pt;text-decoration:underline;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}h5{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:11pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}h6{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-style:italic;font-size:11pt;font-family:\"Trebuchet MS\";padding-bottom:0pt;page-break-after:avoid}\r\rVagrant Setup \r\u0026nbsp;\nYou can see the video here\n\u0026nbsp;\nThis is a fork of Steve Power\u0026#39;s work\u0026nbsp;https://github.","tags":["behat"],"title":"Behat Vagrant install and local testing"},{"content":"This will show how to use Twig in your D7 module\nSetup your composer.json to pull in twig.\n\rThen setup your template files\n\rThen the buttons I include\n\rfinally load the template and add your variables\n\r\u0026nbsp;\n","relPermalink":"/posts/53/","summary":"This will show how to use Twig in your D7 module\nSetup your composer.json to pull in twig.\n\rThen setup your template files\n\rThen the buttons I include\n\rfinally load the template and add your variables\n\r\u0026nbsp;","tags":["twig"],"title":"Twig and Drupal 7"},{"content":"Blade uses {{ }} so it does not play well with Angular.js but I decided to use partials. I am not using Angular routes so I am just including partials in my controller file.\nMy blade file has this.\r\u0026lt;div ng-include=\u0026quot;template.url\u0026quot;\u0026gt;\u0026amp;nbsp;\u0026lt;/div\u0026gt;\n\rThen the partial has this\r\u0026lt;div class=\u0026quot;issues-to-get\u0026quot; ng-show=\u0026quot;issues.length \u0026gt; 0\u0026quot;\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026lt;li\u0026gt;\u0026lt;label\u0026gt;\u0026lt;input type=\u0026quot;checkbox\u0026quot; value=\u0026quot;all\u0026quot; /\u0026gt;All\u0026lt;/label\u0026gt;\u0026lt;/li\u0026gt;\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026lt;li ng-repeat=\u0026quot;issue in issues\u0026quot;\u0026gt;\u0026lt;label\u0026gt;\u0026lt;input type=\u0026quot;checkbox\u0026quot; value=\u0026quot;{{ issue.id }}\u0026quot; /\u0026gt;{{ issue.title }}\u0026lt;/label\u0026gt;\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt;\n\u0026lt;/div\u0026gt;\n\rThe partial lives here\r/public/assets/js/templates/\nwhich / is the root of my Laravel app.\nFinally my controller has this\r$scope.template = { name: \u0026#39;project_issues\u0026#39;, url: \u0026#39;/assets/js/templates/project_show.html\u0026#39;};\n\u0026nbsp;\n\r","relPermalink":"/posts/55/","summary":"Blade uses {{ }} so it does not play well with Angular.js but I decided to use partials. I am not using Angular routes so I am just including partials in my controller file.\nMy blade file has this.\r\u0026lt;div ng-include=\u0026quot;template.url\u0026quot;\u0026gt;\u0026amp;nbsp;\u0026lt;/div\u0026gt;\n\rThen the partial has this\r\u0026lt;div class=\u0026quot;issues-to-get\u0026quot; ng-show=\u0026quot;issues.length \u0026gt; 0\u0026quot;\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026lt;li\u0026gt;\u0026lt;label\u0026gt;\u0026lt;input type=\u0026quot;checkbox\u0026quot; value=\u0026quot;all\u0026quot; /\u0026gt;All\u0026lt;/label\u0026gt;\u0026lt;/li\u0026gt;\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026lt;li ng-repeat=\u0026quot;issue in issues\u0026quot;\u0026gt;\u0026lt;label\u0026gt;\u0026lt;input type=\u0026quot;checkbox\u0026quot; value=\u0026quot;{{ issue.id }}\u0026quot; /\u0026gt;{{ issue.title }}\u0026lt;/label\u0026gt;\u0026lt;/li\u0026gt;","tags":["laravel"],"title":"Angular and Laravel Partials"},{"content":"Really impressed with how this came out.\nUsing Github pages with no theme we can use that repo to then pull in our help files to our local project via a JSON request. This separates documentation from the project so anyone on the team can checkout the git branch for the docs, make an edit and push to that branch which then shows on the site in minutes.\nTo start with take the repo you are using to make a new branch called gh-pages as noted here Github Docs\u0026nbsp;\nOnce you have that branch start writing your Markdown files.\u0026nbsp;\nI have one index.md that always links to the files in the folder.\nSo when I am done the root looks like this\n/index.md\n/images\n/foo.md\n/bar.md\nAnd if you where to open the index.md you would see this (view the raw version)\n\nSo I am setting up this file to link to the files I am making. This will allow our help page to have an index.\nThen for foo.md I could do something like this (view the raw version)\n\nI will show in a moment the javascript to make the youtube link open in a new page.\nWhen I am done with my markdown I run this at the command line\nfor i in ./*.md; do markdown --html4tags $i \u0026gt; ${i%.*}.html; done;\rand I end up with with my html files all made for me. [1]\nThen I git add, git commit and git push this back to origin gh-pages.\nThat is it for docs.\nIn the app that uses these docs I just have a link that triggers a library to open and show the content.\nI used this library for the slide out\u0026nbsp;http://srobbin.com/jquery-plugins/pageslide/\u0026nbsp;\nI am not totally sold on the library.\nFinally the JS code to pull in the Github docs.\u0026nbsp;\n\u0026nbsp;\n\rFinally I have a route that gets it for me and cleans it up. This could have been done in JS but I did it this way\n\rNote\n[1] I will be using the markdown to html library soon so we can just leave the\u0026nbsp;md\u0026nbsp;as is.\n","relPermalink":"/posts/54/","summary":"Really impressed with how this came out.\nUsing Github pages with no theme we can use that repo to then pull in our help files to our local project via a JSON request. This separates documentation from the project so anyone on the team can checkout the git branch for the docs, make an edit and push to that branch which then shows on the site in minutes.\nTo start with take the repo you are using to make a new branch called gh-pages as noted here Github Docs\u0026nbsp;","tags":["github"],"title":"Using Github Pages for your help docs"},{"content":"I need to stash more of these here as I use this API more\n\u0026Acirc;\u0026Acirc;\u0026#160;\nPer Page Setting\r\u0026Acirc;\u0026Acirc;\u0026#160;\n","relPermalink":"/posts/56/","summary":"I need to stash more of these here as I use this API more\n\u0026Acirc;\u0026Acirc;\u0026#160;\nPer Page Setting\r\u0026Acirc;\u0026Acirc;\u0026#160;","tags":["githubapi"],"title":"GitWrapper Per Page settings KnpLabs / php-github-api"},{"content":"If you already have rvm install this should be easy. Otherwise google that pain.\nI set my rvm to ruby 2.0 but not sure if needed\nrvm --default use 2.0\n\rhttp://rvm.io/rubies/default\nThen I made a Gemfile in the root folder and add this content\n\rand run bundle install\nAfter that was in place I ran guard init to get going and then pasted this code into the Guard file it made.\n\rSo now my root folder has a guard file and it is looking for changes both in app/tests and app/* If the change happens in app/* other than tests it looks for the related *Test.php for that Controller or Model etc It also pops up a notification so you can see all is green or red as you work.\n\u0026nbsp;\n\u0026nbsp;\nNow you are finally ready to run guard\u0026nbsp;\nbundle exe guard\u0026nbsp;\nand that should start up guard\n\u0026nbsp;\n","relPermalink":"/posts/51/","summary":"If you already have rvm install this should be easy. Otherwise google that pain.\nI set my rvm to ruby 2.0 but not sure if needed\nrvm --default use 2.0\n\rhttp://rvm.io/rubies/default\nThen I made a Gemfile in the root folder and add this content\n\rand run bundle install\nAfter that was in place I ran guard init to get going and then pasted this code into the Guard file it made.","tags":["phpunit"],"title":"Guard, Laravel and phpunit"},{"content":"Been using Drupal Services on a project and there are some docs on how to use a Class with this. But to instantiate it I was using a function per class method. Instead I now I have one function that can instantiate the Class and method based on the \u0026#39;callback\u0026#39; and the path 0 arg. Later I would like to just use the $_REQUEST type.\n\u0026nbsp;\nYou can see the service below starting on line 4\nNote the callback then calls to this function on line 127 which then just instantiates the class for me and calls the method.\n\u0026nbsp;\n\u0026nbsp;\n","relPermalink":"/posts/52/","summary":"Been using Drupal Services on a project and there are some docs on how to use a Class with this. But to instantiate it I was using a function per class method. Instead I now I have one function that can instantiate the Class and method based on the \u0026#39;callback\u0026#39; and the path 0 arg. Later I would like to just use the $_REQUEST type.\n\u0026nbsp;\nYou can see the service below starting on line 4","tags":["note2self"],"title":"Drupal Services and Instantiating a Class"},{"content":"Still has some work to be done for sure.\u0026nbsp;\nhttps://github.com/alnutile/pml4\nThe goal will be a PM site that integrates with the github api since I have endless issues with clients getting confused using the Github interface for tickets. So this system will wrap around that.\nIn the mean time\nProjects are\u0026nbsp;in place with many to many on Users\nIssues are\u0026nbsp;in place with a one to many on Projects, a One to One User\nComments are that have one to one relationship to Issues.\nIt is use the Confide auth system but right now only with an Admin role. Soon there will be Enforce, see notes below.\nRoad map\n1. Email message to team on Project with new Issue and Comment\n2. Project links to GithubRepo\n3. Issue links to GithubRepo\n4. Comment links to GithubComment\u0026nbsp;\n5. Freshbook integration\n6. Behat\u0026nbsp;intergration\u0026nbsp;using my Behat Editor work I did on drupal.\n7. Better user managment\n\u0026nbsp;\n","relPermalink":"/posts/44/","summary":"Still has some work to be done for sure.\u0026nbsp;\nhttps://github.com/alnutile/pml4\nThe goal will be a PM site that integrates with the github api since I have endless issues with clients getting confused using the Github interface for tickets. So this system will wrap around that.\nIn the mean time\nProjects are\u0026nbsp;in place with many to many on Users\nIssues are\u0026nbsp;in place with a one to many on Projects, a One to One User","tags":["laravel"],"title":"Laravel Project Management Site "},{"content":"One thing I really enjoy about any of Jeffrey Way\u0026#39;s books or videos is how he emphasizes exploring code. \u0026nbsp;\nLaravel does have great docs but for me it has been best to first dig through the code. Coming from years of another PHP framework, digging though that code could still lead to not being certain about the answer just because it is was a bit different or more abstract than what I am seeing in Laravel or even Rails.\u0026nbsp;\nHere was one nice example, I was trying to figure out how to pass the \u0026quot;PUT\u0026quot; method to my form using Form::model.\u0026nbsp;\nSince I know these are Facades\u0026nbsp;I quickly could see in config/app.php that this Form method was an alias for this path \u0026quot;Illuminate\\Support\\Facades\\Form\u0026quot;.\nThen when I open that file I see it notes on the start of the file @see \u0026quot;\\Illuminate\\Html\\FormBuilder\u0026quot; so I do that.\nIn there I see \u0026quot;public function model\u0026quot;.\nOkay that seems like a lot of work but using PHPStorm I just hold down Command and hover over the method and click on it and it takes me there!\nSo now I can look at the model method, see what it does and how it just calls to the open method and easily see what it needs to find my \u0026quot;method\u0026quot; setting.\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;$method = array_get($options, \u0026#39;method\u0026#39;, \u0026#39;post\u0026#39;);\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;// We need to extract the proper method from the attributes. If the method is\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;// something other than GET or POST we\u0026#39;ll use POST since we will spoof the\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;// actual method since forms don\u0026#39;t support the reserved methods in HTML.\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;$attributes[\u0026#39;method\u0026#39;] = $this-\u0026gt;getMethod($method);\n\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;$attributes[\u0026#39;action\u0026#39;] = $this-\u0026gt;getAction($options);\nAnd that was it.\nI also see tricks on how to do things like the \u0026quot;array_get\u0026quot; function they use (once again Command click and I see what it does)\n\u0026nbsp;\n\u0026nbsp;\n\r","relPermalink":"/posts/40/","summary":"One thing I really enjoy about any of Jeffrey Way\u0026#39;s books or videos is how he emphasizes exploring code. \u0026nbsp;\nLaravel does have great docs but for me it has been best to first dig through the code. Coming from years of another PHP framework, digging though that code could still lead to not being certain about the answer just because it is was a bit different or more abstract than what I am seeing in Laravel or even Rails.","tags":["code"],"title":"Exploring Code and Laravel"},{"content":"Make sure your route file is set to show this\nFor my example is is projects and they have issues\nSo my route looks like this\n#routes.php\rRoute::resource('projects', 'ProjectsController');\rRoute::resource('projects.issues', 'IssuesController');\rSo now my URLs will look lik this\n/projects/4/issues \u0026lt;--shows all issues\r/projects/4/issues/2 \u0026lt;--shows issue 2 in project 4\rFinally on the Project Show page I have these linkRoute\u0026rsquo;s in place\n \u0026lt;tr\u0026gt;\r@endif\r\u0026lt;td\u0026gt;{{ $issue['id'] }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ HTML::linkRoute('projects.issues.show', $issue['name'], array($project-\u0026gt;id, $issue['id'])) }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ $issue['active'] }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ $issue['description'] }}\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\rand\n{{ HTML::linkRoute('projects.issues.create', 'Create Issue', $project-\u0026gt;id, array('class' =\u0026gt; 'btn btn-info')) }}\rThat is it. I will post my Controller shortly for Issues.\nMore help\nhttps://tutsplus.com/lesson/nested-resources/\n","relPermalink":"/posts/41/","summary":"Make sure your route file is set to show this\nFor my example is is projects and they have issues\nSo my route looks like this\n#routes.php\rRoute::resource('projects', 'ProjectsController');\rRoute::resource('projects.issues', 'IssuesController');\rSo now my URLs will look lik this\n/projects/4/issues \u0026lt;--shows all issues\r/projects/4/issues/2 \u0026lt;--shows issue 2 in project 4\rFinally on the Project Show page I have these linkRoute\u0026rsquo;s in place\n \u0026lt;tr\u0026gt;\r@endif\r\u0026lt;td\u0026gt;{{ $issue['id'] }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ HTML::linkRoute('projects.issues.show', $issue['name'], array($project-\u0026gt;id, $issue['id'])) }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ $issue['active'] }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ $issue['description'] }}\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\rand","tags":["laravel"],"title":"Nesting Laravel 4 Routes "},{"content":"Took a bit to find the right setting.\nThe yml file should look like\n\rdefault:\n\u0026nbsp; paths:\n\u0026nbsp; \u0026nbsp; features: \u0026#39;features\u0026#39;\n\u0026nbsp; extensions:\n\u0026nbsp; \u0026nbsp; Behat\\MinkExtension\\Extension:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; goutte:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; guzzle_parameters:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; curl.options:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; CURLOPT_PORT: 8000\n\u0026nbsp; \u0026nbsp; \u0026nbsp; selenium2: ~\n\u0026nbsp; \u0026nbsp; \u0026nbsp; base_url: \u0026#39;http://localhost:8000\u0026#39;\n\u0026nbsp; \u0026nbsp; \u0026nbsp; browser_name: safari\n\rThis way the goutte driver will use the correct port. Where as the base_url setting only seems to apply to that @javascript tag. Thanks to\u0026nbsp;https://groups.google.com/forum/#!msg/behat/WCalw_TIjpo/FyaOjVfZP8IJ\n","relPermalink":"/posts/9/","summary":"Took a bit to find the right setting.\nThe yml file should look like\n\rdefault:\n\u0026nbsp; paths:\n\u0026nbsp; \u0026nbsp; features: \u0026#39;features\u0026#39;\n\u0026nbsp; extensions:\n\u0026nbsp; \u0026nbsp; Behat\\MinkExtension\\Extension:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; goutte:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; guzzle_parameters:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; curl.options:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; CURLOPT_PORT: 8000\n\u0026nbsp; \u0026nbsp; \u0026nbsp; selenium2: ~\n\u0026nbsp; \u0026nbsp; \u0026nbsp; base_url: \u0026#39;http://localhost:8000\u0026#39;\n\u0026nbsp; \u0026nbsp; \u0026nbsp; browser_name: safari\n\rThis way the goutte driver will use the correct port.","tags":["mink"],"title":"Using headless tests with Mink and Behat"},{"content":"\u0026quot;failed to fetch from registry\u0026quot;\nBut it was json endpoint was at that url so it was not a problem with the endpoint.\nhttp://stackoverflow.com/questions/12913141/installing-from-npm-fails had a command that helped\n\rnpm config set registry http://registry.npmjs.org/\n\rNow it all worked.\nThough this article may have been a better one to follow\u0026nbsp;http://shashikantjagtap.net/using-zombie-js-driver-with-behats-minkextension/\n","relPermalink":"/posts/39/","summary":"\u0026quot;failed to fetch from registry\u0026quot;\nBut it was json endpoint was at that url so it was not a problem with the endpoint.\nhttp://stackoverflow.com/questions/12913141/installing-from-npm-fails had a command that helped\n\rnpm config set registry http://registry.npmjs.org/\n\rNow it all worked.\nThough this article may have been a better one to follow\u0026nbsp;http://shashikantjagtap.net/using-zombie-js-driver-with-behats-minkextension/","tags":["nodejs"],"title":"Node.js error"},{"content":"Some of the sites we are testing have HTML that has multiple ID that are the same. Or elements that do not really have enough info to get a class, name, label or ID out of.\nThis has been a challenge and there are a few custom steps made to help get through this\n¬†Switching to an Iframe with no name or id\rThis was hard since the default was to target the ID of the frame or name.\nThanks to the help of this thread¬†https://groups.google.com/forum/#!topic/behat/z0z3DscjzhU I was able to pull it off.\nFirst, using jQuery and JavaScript I enable¬†the user to target an Iframe by finding the ID of the div that surrounds it. Second I give the frame a name / id to target.\nThen I the user can choose one of or other custom steps noted below to switch to the frame. The code still needs better error checking e.g. if the element does not exist.\n\nFinding a Submit button on the page when there are 2 with the same name and ID\rThis snippet allows the user to target a specific element on the page by adding a number. This was done a couple of months ago and at this point I think we have a better way to do it. I will show that below.\n\nClicking Submit on a form with no button\rThere are a few ways to do this. So far this one seem to be working best.\n\nOf course if the form does not have an ID we would be in trouble.\nSwitching to a popup window that has no name\rFinally this was the toughest one. We had to use a different branch of Mink to do this. This thread was key to getting this to work¬†https://groups.google.com/forum/#!topic/behat/QNhOuGHKEWI\nWhat we ended up with was basically from that thread\n\nDealing with Alerts\rDealing with built in browser alerts was found in those threads as well.\nI then wrote a helper that I use in other methods to do this.\nSince all the steps are called from a web form they user can choose to \"Click and Alert\" as needed.\n¬†¬†¬†¬†\n¬†Comparing the Size of an element to the Window\rLastly (really this time) we have to check the size of an element to make sure it meets requirements.\nThis custom steps allows the user to enter a class to get the height of and enter the % it should be of the window.\n\rUPDATE \rNoted in comments this might help as well\n\n","relPermalink":"/posts/38/","summary":"Some of the sites we are testing have HTML that has multiple ID that are the same. Or elements that do not really have enough info to get a class, name, label or ID out of.\nThis has been a challenge and there are a few custom steps made to help get through this\n¬†Switching to an Iframe with no name or id\rThis was hard since the default was to target the ID of the frame or name.","tags":["bdd"],"title":"Behat and bad HTML"},{"content":"Using Behat and Mink I had to make a test that would verify the height of content on the screen compared to the rest of the window size. For example it had to be 30% of the screen or more.\nYou can see the code below.\nIt allows the user to pass in the expected height % and the element they would like to target. I will optmize it to allow more options than just ID.\n","relPermalink":"/posts/37/","summary":"Using Behat and Mink I had to make a test that would verify the height of content on the screen compared to the rest of the window size. For example it had to be 30% of the screen or more.\nYou can see the code below.\nIt allows the user to pass in the expected height % and the element they would like to target. I will optmize it to allow more options than just ID.","tags":["bdd"],"title":"Behat Mink and using Javascript / jQuery to test attributes"},{"content":"I have been doing some work using\u0026nbsp;Oop and have a lot of re-factoring to do since I did not keep my methods small and simple. Often they use other methods or presume a certain amount of constructed parameters.\nWhen I was working strictly in procedural programming I would make my functions small and tie them together like the Unix command line tools. But then I had issues with having to pass too many variables all around. So that is the next step for me, figure out the balance of keeping things small but not always passing around or re-constructing numerous variables.\nPattern:\u0026nbsp;Single responsibility principle\n","relPermalink":"/posts/36/","summary":"I have been doing some work using\u0026nbsp;Oop and have a lot of re-factoring to do since I did not keep my methods small and simple. Often they use other methods or presume a certain amount of constructed parameters.\nWhen I was working strictly in procedural programming I would make my functions small and tie them together like the Unix command line tools. But then I had issues with having to pass too many variables all around.","tags":["patterns"],"title":"Keep it (functions/methods) small and simple"},{"content":"Note to self\nSuper easy steps to setup PHP 5.4 on Ubuntu 12.04\nhttp://www.dev-metal.com/how-to-install-latest-php-5-4-x-on-ubuntu-12-04-lts-precise-pangolin/\n","relPermalink":"/posts/45/","summary":"Note to self\nSuper easy steps to setup PHP 5.4 on Ubuntu 12.04\nhttp://www.dev-metal.com/how-to-install-latest-php-5-4-x-on-ubuntu-12-04-lts-precise-pangolin/","tags":["ubuntu"],"title":"Ubuntu 12.04 and PHP 5.4"},{"content":"This simple command \u0026quot;history\u0026quot; shows a numbered list of your past commands.\n\r\u0026nbsp;1720 \u0026nbsp;sudo chgrp -R www-data batch\n\u0026nbsp;1721 \u0026nbsp;sudo chmod -R 766 batch\n\u0026nbsp;1722 \u0026nbsp;ls -al\n\u0026nbsp;1723 \u0026nbsp;sudo chmod -R 776 batch\n\u0026nbsp;1724 \u0026nbsp;cd batch/full/\n\u0026nbsp;1725 \u0026nbsp;pwd\n\u0026nbsp;1726 \u0026nbsp;exit\n\u0026nbsp;1727 \u0026nbsp;mv build.xml.ant /var/www/test/site/sites/default/files/behat_yml/batch/full/\n\u0026nbsp;1728 \u0026nbsp;cd /var/www/test/site/sites/default/files/behat_yml/batch/full/\n\r\u0026nbsp;\nFrom there you can choose a number from the output and run\n\r!1725\n\rTo quickly rerun the command\n","relPermalink":"/posts/32/","summary":"This simple command \u0026quot;history\u0026quot; shows a numbered list of your past commands.\n\r\u0026nbsp;1720 \u0026nbsp;sudo chgrp -R www-data batch\n\u0026nbsp;1721 \u0026nbsp;sudo chmod -R 766 batch\n\u0026nbsp;1722 \u0026nbsp;ls -al\n\u0026nbsp;1723 \u0026nbsp;sudo chmod -R 776 batch\n\u0026nbsp;1724 \u0026nbsp;cd batch/full/\n\u0026nbsp;1725 \u0026nbsp;pwd\n\u0026nbsp;1726 \u0026nbsp;exit\n\u0026nbsp;1727 \u0026nbsp;mv build.xml.ant /var/www/test/site/sites/default/files/behat_yml/batch/full/\n\u0026nbsp;1728 \u0026nbsp;cd /var/www/test/site/sites/default/files/behat_yml/batch/full/\n\r\u0026nbsp;\nFrom there you can choose a number from the output and run\n\r!1725\n\rTo quickly rerun the command","tags":["bash"],"title":"Bash History"},{"content":"when setting options in an option list dyamically you may run into \u0026quot;An illegal choice has been detected\u0026quot;\u0026nbsp;\nYou will have to set those fileds #validate =\u0026gt; TRUE as seen bellow\n\r\u0026nbsp;\n","relPermalink":"/posts/31/","summary":"when setting options in an option list dyamically you may run into \u0026quot;An illegal choice has been detected\u0026quot;\u0026nbsp;\nYou will have to set those fileds #validate =\u0026gt; TRUE as seen bellow\n\r\u0026nbsp;","tags":["JavaScript"],"title":"Drupal FAPI Validation Error"},{"content":"When at the command line with drush making features keep in mind you may need to use quotes. Example\ndrush features-export --destination=\u0026quot;sites/all/modules/custom\u0026quot; behat_site_settings dependencies:behat menu_custom:main-menu menu_links:main-menu:\u0026quot;\u0026lt;front\u0026gt;\u0026quot; menu_links:main-menu:\u0026quot;user/login\u0026quot; menu_links:main-menu:user menu_links:navigation_:\u0026quot;behat/testarea\u0026quot;\u0026nbsp;\n\rWithout the quotes around the menu links you would get an error from bash.\n\u0026nbsp;\n","relPermalink":"/posts/29/","summary":"When at the command line with drush making features keep in mind you may need to use quotes. Example\ndrush features-export --destination=\u0026quot;sites/all/modules/custom\u0026quot; behat_site_settings dependencies:behat menu_custom:main-menu menu_links:main-menu:\u0026quot;\u0026lt;front\u0026gt;\u0026quot; menu_links:main-menu:\u0026quot;user/login\u0026quot; menu_links:main-menu:user menu_links:navigation_:\u0026quot;behat/testarea\u0026quot;\u0026nbsp;\n\rWithout the quotes around the menu links you would get an error from bash.\n\u0026nbsp;","tags":["drush"],"title":"Drush and Features-Export"},{"content":"Interactive command line on a Mac. So far this helped out\nbrew tap josegonzalez/php\rbrew install phpsh\rand finally add this to the ~/.bash_profile\nexport PYTHONPATH=/usr/local/lib/python2.7/site-packages\u0026nbsp;\rand then re source your .bash_profile\nsouce ~/.bash_profile\rnow phpsh at the command line will give you an interactive shell\u0026nbsp;\n","relPermalink":"/posts/35/","summary":"Interactive command line on a Mac. So far this helped out\nbrew tap josegonzalez/php\rbrew install phpsh\rand finally add this to the ~/.bash_profile\nexport PYTHONPATH=/usr/local/lib/python2.7/site-packages\u0026nbsp;\rand then re source your .bash_profile\nsouce ~/.bash_profile\rnow phpsh at the command line will give you an interactive shell\u0026nbsp;","tags":["note2self"],"title":"PHPSH"},{"content":"Just need to go from dev to basic on some sites. Later I will fix up the script to pass in the plan type and pg_wait.\n","relPermalink":"/posts/33/","summary":"Just need to go from dev to basic on some sites. Later I will fix up the script to pass in the plan type and pg_wait.","tags":["heroku"],"title":"Quick Script to update Heroku database "},{"content":"Intro to Behat and Drupal more coming soon. The goals will be to\u0026nbsp;\n\rUsing Behat to run Drupal Selenium\u0026nbsp;tests.\rIntroduce an easy language for Project Managers and Product Owners to write a tests\rUsing a GUI to write tests.\r\r....\nHere is the intro video\n\n","relPermalink":"/posts/34/","summary":"Intro to Behat and Drupal more coming soon. The goals will be to\u0026nbsp;\n\rUsing Behat to run Drupal Selenium\u0026nbsp;tests.\rIntroduce an easy language for Project Managers and Product Owners to write a tests\rUsing a GUI to write tests.\r\r....\nHere is the intro video","tags":["behat"],"title":"Behat and Drupal episode 1"},{"content":"This particular gem overrides the default output of scaffold. Making your generated view files bootstrap ready.\nBootstrap Generators\u0026nbsp;\n\u0026nbsp;\n","relPermalink":"/posts/10/","summary":"This particular gem overrides the default output of scaffold. Making your generated view files bootstrap ready.\nBootstrap Generators\u0026nbsp;\n\u0026nbsp;","tags":["bootstrap"],"title":"Bootstrap Generator Gem Ruby on Rails"},{"content":"As I build out these sites I had to run heroku commands on heroku since the admin site needs to setup Domains and Subdomain on each new site. I was glad they had the\u0026nbsp;https://github.com/heroku/heroku.rb\u0026nbsp;gem\u0026nbsp;that made it possible to make an interface for administrators to add domains and subdomains to their heroku site.\u0026nbsp;\nIn my controller I included the heroku-api as the node on the github page.\n\rAfter that, on an update or a create I check if the domain exists.\nThere was another post on github in the issue queue to help me figure out how to rescue out of an error. Ideally though I would direct the user back to the edit page with an error message or autocomplete as they type. But right now I save their settings to the Partner model and show the error.\nThis allows me to use the \u0026quot;heroku domain:add --app APPNAME domain_name\u0026quot; command from within the app.\nSetting up the ENV variables are explained on setting up heroku pages like this one\u0026nbsp;https://devcenter.heroku.com/articles/config-vars\u0026nbsp;so you can do this at the command line and note store it in a file on git.\u0026nbsp;\n","relPermalink":"/posts/30/","summary":"As I build out these sites I had to run heroku commands on heroku since the admin site needs to setup Domains and Subdomain on each new site. I was glad they had the\u0026nbsp;https://github.com/heroku/heroku.rb\u0026nbsp;gem\u0026nbsp;that made it possible to make an interface for administrators to add domains and subdomains to their heroku site.\u0026nbsp;\nIn my controller I included the heroku-api as the node on the github page.\n\rAfter that, on an update or a create I check if the domain exists.","tags":["rails"],"title":"Heroku in Heroku"},{"content":"There are some great docs online for figuring out how to setup heroku domains.\nhttps://devcenter.heroku.com/articles/custom-domains as well as others.\nThe feature I had to get setup was that for every new herokuapp I spun up under my account/clients account it had to make a sub-domain under that SaaS owners zone/domain.\nFor example the owner wanted all of these apps to show up under freesurvey.com (not really but just an example url)\u0026nbsp;so each one they spun up would be, for example yoursite.freesurvey.com but also later the person who \u0026quot;subscribed\u0026quot; for the product\u0026nbsp;can also use their real domain like www.mysite.com or survey.mysite.com so it would be fully branded under their name as well.\nThe interface for the owner and the subscriber would allow them to do 2 things. One they could enter the sub-domain they wanted eg \u0026quot;yoursite\u0026quot; as long as it was free to use in the owners domain name spacing eg \u0026quot;freesurvey.com\u0026quot;. Just as you see with basecamp or freshbooks. Second they had a field to enter a full domain they wanted to point here as well eg \u0026quot;survey.mysite.com\u0026quot; to quickly setup the subscriber if they were ready to do that. \u0026nbsp;Keeping in mind each site is a new herokuapp which is really a new IP address. And heroku does not suggest the use of this IP address but to use the herokuapp name as I use below.\nAfter clicking save a few things took place.\n\rA new herokuapp was spun up from the master git branch\u0026nbsp;\rThe herokuapp was given a name that is available from heroku, in my case I ran \u0026quot;heroku create --app NAMEHERE1\u0026quot; using a name the script would produce that I am about 99% sure was available at heroku. But at this point it could just use the one heroku gives it and pass it back to the script.\rDuring the heroku install the\u0026nbsp;zerigo_dns addon was added.\u0026nbsp;\rThe script then adds a domain to heroku via the command \u0026quot;heroku domains:add\u0026nbsp;NAMEHERE.freesurvey.com\u0026quot;\u0026nbsp;this automatically submits that domain via the add on \u0026quot;zerigo_dns\u0026quot; so now my DNS records for that domain \u0026quot;freesurvey.com\u0026quot; includes a CNAME to NAMEHERE.freesurvey.com that points to proxy.heroku.com. The benefit here is that I can do this all in the script at the command line and API to setup the herokuapp so it will respond to the this domain, and the DNS so that it knows of this new subdomain and what to do with it.\nA Wildcard DNS record for freesurvey.com would not have worked since each record points to the herokoapp which is it\u0026#39;s own domain/IP. So NAMEHERE1.herokuapp.com and\u0026nbsp;NAMEHERE2.herokuapp.com\u0026nbsp;are typically\u0026nbsp;a different server and IP. I did not want all of these sites on one server and I wanted to use a Paas provider like heroku for reasons I note here\u0026nbsp;.\u0026nbsp;\rFinally when the client who now uses this site is ready to point it to their own domain/zone they enter into the form \u0026quot;survey.mydomain.com\u0026quot; and this registers with the herokuapp via the command \u0026quot;heroku domains:add\u0026nbsp;survey.mydomain.com\u0026quot;\u0026nbsp;to accept requests from this domain and point it to \u0026quot;NAMEHERE.herokuapp.com\u0026quot;.\nSo now it works for NAMEHERE.freesurvey.com, survey.mydomain.com and of course the name heroku was give to make the app\u0026nbsp;it\u0026nbsp;NAMEHERE.herokuapp.com. Of course the subscriber has to update their records that ONE time to point their CNAME survey.mydomain.com to ideally\u0026nbsp;NAMEHERE.herokuapp.com\r\r\u0026nbsp;\nZerigo DNS\u0026nbsp;https://devcenter.heroku.com/articles/zerigo_dns\nThis was already setup for the client who owns the survey making SaaS site in this case for example \u0026quot;freesurvey.com\u0026quot; (not really this domain just an example)\nSo Zerigo was the Name Server\u0026nbsp;provider for this domain. And was linked to heroku account I made for the client.\u0026nbsp;\n\u0026nbsp;\n1This name is made by Time.now.to_i via the ruby script prefixed with a consistent string of characters like freesurvey so I would end up with an App Name like freesurvey1234556789 which I could error check and make another until heroku says that was available. But that name is pretty rare so so far they are always available.\n","relPermalink":"/posts/27/","summary":"There are some great docs online for figuring out how to setup heroku domains.\nhttps://devcenter.heroku.com/articles/custom-domains as well as others.\nThe feature I had to get setup was that for every new herokuapp I spun up under my account/clients account it had to make a sub-domain under that SaaS owners zone/domain.\nFor example the owner wanted all of these apps to show up under freesurvey.com (not really but just an example url)\u0026nbsp;so each one they spun up would be, for example yoursite.","tags":["rails"],"title":"HerokuApps and Multiple Domains"},{"content":"Hosting is Dead? https://www.getpantheon.com/resources/hostingisdead\nOkay so they have a good reason to say that. But it is still worth a read.\nSome points I have experienced in the past\nServer and Site Updates\r\r\u0026quot;The person tasked with updating security patches had other priorities, and couldn\u0026rsquo;t stay on top of it. Or, the new developers you just brought in for a site\nrefresh are constantly requesting SSH keys and passwords. You\u0026rsquo;ve lost track of who had access to what in the past. Now a robot has hijacked or defaced\nthe site. \u0026quot;\n\rI think this is also a matter of budget and expectations. The client never realized that their choice of Drupal or Wordpress or Joomla is a long term expense. Server updates, if they are not on a shared host, and Site Updates. By removing from the budget the need for spending time on server updates can be a huge help for small business owners, small tech shops and freelancers. Even if you like being a system admin I would still have to wonder is the expense worth it any more?\nWorkflow tools\r\rProfessional Drupal developers need to follow best-practices like version control, staging servers, deployment workflows, and\nautomated backups. Without the proper tooling in place, the development process takes more time and introduces significant risk. Even simple bug fixes\nand updates are cumbersome and can take down the live site.\n\rAnother great point. To have good workflows is a costly investment for an individual or shop. But it is key to working on a project, as a team and even onboarding new people per job. Sure you can spend a ton of time setting up Vagrant, Chef scripts, the perfect server install and distro but can you really ever recover that cost?\nScaling on the fly\rThis is another one I have thought allot about. It seems that Heroko, Pantheon and the APIs Amazon offers are good example of systems I can scale up and down on the fly without a reboot. But others like Rackspace, Linode etc all seem to have downtime to scale the server? This seems so key to a successful site and budget. Backups\rBackups are another huge one. Providers will offer it but is it good enough? Daily? How far back? How quickly can your recover? And are those rdiff-backup or rsync script I made really still running? ( -:\nPoints of failure \rSome of these providers have redundancy built in. That I have not researched enough to know for sure how good it is but this would be a killer feature to have that to build on my own. And again be even harder to recoup the cost from my average client. Even over time cause in time you keep making your system \u0026quot;better\u0026quot; or change them to the latest thing.\nCosts\rFinally costs. They have some charts in the doc about costs. Some of them are clearly one time costs that a shop could then roll out again and again for less hoping to recap the amount needed to pay for the work they did. But overall I would say that the cost to manage a server monthly are at least 2 hours a month (1 minimum). If I am billing a decent rate of $85 to $125 then already the client is paying to much for me to make sure the server (not even the site updates just server) is up to date and secure. Not to mention update but I am expected to be there to fix the server if anything happens 24/7. Honestly I think the client and I are both the losers when those expectations are on the table. As my wife when I got a phone call while getting dressed for my wedding! ( -:\n\r Honestly I think the client and I are both the losers when those expectations are on the table.\n\rAnyways, it is worth reading but more importantly the subject is worth go back and forth on in discussion #hostingisdead to write your thoughts on twitter or link to a post of your own.\nps\nthis site is on A2hosting and I will soon move it to heroku to further test out these ideas.\n","relPermalink":"/posts/28/","summary":"Hosting is Dead? https://www.getpantheon.com/resources/hostingisdead\nOkay so they have a good reason to say that. But it is still worth a read.\nSome points I have experienced in the past\nServer and Site Updates\r\r\u0026quot;The person tasked with updating security patches had other priorities, and couldn\u0026rsquo;t stay on top of it. Or, the new developers you just brought in for a site\nrefresh are constantly requesting SSH keys and passwords. You\u0026rsquo;ve lost track of who had access to what in the past.","tags":["heroku"],"title":"Hosting is Dead? "},{"content":"Been working about a month now on a Ruby on Rails project. The goal of the product is to make a site that can be spun up numerous times as a Saas product. I has to include\u0026nbsp;\n\rCMS elements\rSettings area to change logo, colors etc.\rConnect to a remote SOAP API to create cloneable content from and users.\rUser admin area with Roles\rReporting\rCkeditor that integrates with Paperclip on non-cms pages.\rHeroku deployment strategy\r\rIt really has been a fun project as I get to see all the great gems out there that make alot of this possible without a ton of custom work. Though unlike other frameworks I have used it is super easy to customize the MVC parts of the gems as needed which has made my work a ton more enjoyable.\nSome of the gems used so far\n\rSavon to talk to the SOAP API\rPaperclip Gem to manage images with Amazon S3\u0026nbsp;\rDevise to help with authentication and signup\rRefineryCMS to provide the highly customizable CMS part to this\u0026nbsp;\rVCR to help mock up the tests\u0026nbsp;\rCkeditor with Rails and Paperclip Integration\u0026nbsp;\r\rI am finalizing the VCR test now. I did not do TDD on that part of the project since the IT on the other end where still working out the endpoints in the API. VCR has been a great help there to speed up the tests. And of course RailsCasts.com for going over both Savon and VCR!\n\u0026nbsp;\nA demo of the project can be seen here as well.\n\n\u0026nbsp;\n\u0026nbsp;\n","relPermalink":"/posts/25/","summary":"Been working about a month now on a Ruby on Rails project. The goal of the product is to make a site that can be spun up numerous times as a Saas product. I has to include\u0026nbsp;\n\rCMS elements\rSettings area to change logo, colors etc.\rConnect to a remote SOAP API to create cloneable content from and users.\rUser admin area with Roles\rReporting\rCkeditor that integrates with Paperclip on non-cms pages.","tags":["refinerycms"],"title":"Ruby on Rails with CMS and other fun stuff"},{"content":"\nThis took a bit. On the first site it was easy. I went through these directions to get ckeditor setup with paperclip.\nAnd paperclip is easy to setup with S3 but on this site you are reading now the url Amazon used was not s3.amazonaws.com/nutilesblog but s3-us-west-2.amazonaws.com/nutilesblog\u0026nbsp;\nPaperclip was defaulting to s3 and I had trouble getting the combinations for this setting right. Maybe I could have set the bucket to use s3 but in the end I rather deal with the s3-us-west-2 since different clients will have different needs.\n\nFinally I setup the development.rb and production.rb like this\r\rYou can see the URL below of the image and the PDF\nAnd a PDF\nhttp://s3-us-west-2.amazonaws.com/nutilesblog/var/www/alsstuff2Cap/releases/20130811161031/public/ckeditor_assets/pictures/8/original_testpdf.pdf\n","relPermalink":"/posts/24/","summary":"This took a bit. On the first site it was easy. I went through these directions to get ckeditor setup with paperclip.\nAnd paperclip is easy to setup with S3 but on this site you are reading now the url Amazon used was not s3.amazonaws.com/nutilesblog but s3-us-west-2.amazonaws.com/nutilesblog\u0026nbsp;\nPaperclip was defaulting to s3 and I had trouble getting the combinations for this setting right. Maybe I could have set the bucket to use s3 but in the end I rather deal with the s3-us-west-2 since different clients will have different needs.","tags":["paperclip"],"title":"Paperclip and S3 and Ckeditor"},{"content":"https://github.com/charliesome/better_errors/wiki\ngood help here on loading RubyMine from¬†BetterErrors\n","relPermalink":"/posts/23/","summary":"https://github.com/charliesome/better_errors/wiki\ngood help here on loading RubyMine from¬†BetterErrors","tags":["rubymine"],"title":"RubyMine and BetterErrors"},{"content":"http://stackoverflow.com/questions/5919727/bundle-install-problem-mysql-h-is-missing\nThis was key to get this install done.\n","relPermalink":"/posts/22/","summary":"http://stackoverflow.com/questions/5919727/bundle-install-problem-mysql-h-is-missing\nThis was key to get this install done.","tags":["note2self"],"title":"Installing mysql2 on a mac"},{"content":"Great gem for attaching images to a rails app (maybe even Laravel). This article made it clear how to set this up\nhttps://devcenter.heroku.com/articles/paperclip-s3\nAnd this one made it clear why my development environment was not working.\nhttp://stackoverflow.com/questions/11760597/s3-paperclip-working-on-heroku-but-not-localhost\nI had to edit my .bash_profile\nBut instead of restarting the terminal I just did¬†source ~/.bash_profile¬†and then started that rails server again in that terminal.\nIf only I found a tutorial on using fog and paperclip since I am already using that gem for refinerycms\n","relPermalink":"/posts/17/","summary":"Great gem for attaching images to a rails app (maybe even Laravel). This article made it clear how to set this up\nhttps://devcenter.heroku.com/articles/paperclip-s3\nAnd this one made it clear why my development environment was not working.\nhttp://stackoverflow.com/questions/11760597/s3-paperclip-working-on-heroku-but-not-localhost\nI had to edit my .bash_profile\nBut instead of restarting the terminal I just did¬†source ~/.bash_profile¬†and then started that rails server again in that terminal.\nIf only I found a tutorial on using fog and paperclip since I am already using that gem for refinerycms","tags":["refinerycms"],"title":"Paperclip and S3"},{"content":"\rI've been using capistrano for Rails and really impressed by how easy it makes deployment and rolllback. Sometimes though I need this type of automation on non-rails work. This type of automation can include setting up a vhost in Apache as well as Travis CI work. I know Chef-solo might be best for this but since I am already in Capistrano I might as well push it a little more.\r\rTo use this on a static page I am building all I had to do, after making sure Ruby was installed of course was install the gem railsless-deploy. \rAfter I did that install I ran \"capify .\" in the folder I was working on.\r\rFrom there I edited the file Capify in the root of the folder so, as noted on the page above, it required this gem.\r\rIn my case all I needed was a simple apache_vhost recipe and template to store the configurations using dynamic variables so I can use this on other sites quite easily. As well as updating the deploy.rb. You can see those in a github gist here and below.\rAlso your folder layout will look like this\r/\n/Capfile\n/config\n/config/deploy.rb\n/config/recipes/base.rb\n/config/recipes/apachevhost.rb\n/config/recipes/templates/apache_vhost.erb\n\r\r\rThanks to the RailsCast episode #337 I shown also the trick to setup a base config file to add some shared methods. \rOne odd error before I could get this to work was to make an empty Gemfile in the root of the folder and run bundle install\r\rEven though I assumed the railsless gem would do that. But I posted this question on their github page and will see what I was missing.\rFinally I ran \rcap deploy:install\ncap deploy:setup\ncap deploy:cold\r\rAt this point Apache is set, the folders are set and the site can be accessed. And with all new pushes I just run cap deploy to update the server with the latest work from github \"master\"\r\rThe next steps will be to integrate this into Travis CI to test and deploy via the github/git webhook feature.\r","relPermalink":"/posts/20/","summary":"I've been using capistrano for Rails and really impressed by how easy it makes deployment and rolllback. Sometimes though I need this type of automation on non-rails work. This type of automation can include setting up a vhost in Apache as well as Travis CI work. I know Chef-solo might be best for this but since I am already in Capistrano I might as well push it a little more.","tags":["travis"],"title":"Capistrano for non-rails sites"},{"content":"\nThis worked out quite easily on a project that I am working on. (not yet released) \n\nAt the command line I had to run the needed code to copy the views to my app.\nHere are some commands I ran thoug this command\n\n\rrake refinery:override\n\nwill show other options as well.\n\nrake refinery:override view=refinery/_site_bar\nrake refinery:override view=refinery/_content_page\nrake refinery:override view=refinery/_menu\nrake refinery:override view=refinery/_head\nrake refinery:override view=refinery/_footer\r\r\nOf course I had to install the gem in my Gemfile for the sass version of this\n\n//Gemfile \ngem \u0026quot;twitter-bootstrap-rails\u0026quot;\n\nand run\n\n\rrails generate bootstrap:install static\r\n\nAfter all this you should have this type of layout in your file system\n\n\n\nFinally you need to do all the hard work to edit these files.\nHere is what I ended up with.\nhttps://gist.github.com/alnutile/5943019\n\r\r","relPermalink":"/posts/14/","summary":"This worked out quite easily on a project that I am working on. (not yet released) \n\nAt the command line I had to run the needed code to copy the views to my app.\nHere are some commands I ran thoug this command\n\n\rrake refinery:override\n\nwill show other options as well.\n\nrake refinery:override view=refinery/_site_bar\nrake refinery:override view=refinery/_content_page\nrake refinery:override view=refinery/_menu\nrake refinery:override view=refinery/_head","tags":["twitterbootstrap"],"title":"Refinery CMS and Twitter Bootstrap"},{"content":"\rI had to review for a client what CMS to choose. Keeping in mind the CMS was only part of the product and a small part. Small in that the big value to the product seem to fall more on the APP part of the project that allowed the user to make a question set from an JSON based API. So a bulk of the work would be building that. The CMS was just to help manage a few pages, menu, users, and some settings.\rol{margin:0;padding:0}.c1{vertical-align:top;width:27.8pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c22{vertical-align:top;width:25.5pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c15{vertical-align:top;width:315pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c9{vertical-align:top;width:240pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c19{vertical-align:top;width:24.8pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c10{vertical-align:top;width:26.2pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c12{vertical-align:top;width:27pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c8{vertical-align:top;width:111pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c17{vertical-align:top;width:92.2pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c11{vertical-align:top;width:30.8pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c2{vertical-align:top;width:29.2pt;border-style:solid;border-color:#000000;border-width:1pt;padding:5pt 5pt 5pt 5pt}.c28{list-style-type:decimal;margin:0;padding:0}.c23{max-width:468pt;background-color:#ffffff;padding:72pt 72pt 72pt 72pt}.c26{color:#2793e6;font-size:10pt;background-color:#ffffff}.c18{color:#333333;font-size:10pt;background-color:#ffffff}.c21{padding-left:0pt;margin-left:36pt}.c6{color:inherit;text-decoration:inherit}.c0{line-height:1.0;direction:ltr}.c16{color:#1155cc;text-decoration:underline}.c27{text-align:right}.c3{font-weight:bold}.c5{direction:ltr}.c24{height:0pt}.c20{font-size:8pt}.c4{border-collapse:collapse}.c14{line-height:1.275}.c25{height:25pt}.c13{background-color:#cccccc}.c7{height:11pt}.title{padding-top:0pt;line-height:1.15;text-align:left;color:#000000;font-size:21pt;font-family:\"Trebuchet MS\";padding-bottom:0pt}.subtitle{padding-top:0pt;line-height:1.15;text-align:left;color:#666666;font-style:italic;font-size:13pt;font-family:\"Trebuchet MS\";padding-bottom:10pt}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{color:#000000;font-size:11pt;margin:0;font-family:\"Arial\"}h1{padding-top:10pt;line-height:1.15;text-align:left;color:#000000;font-size:16pt;font-family:\"Trebuchet MS\";padding-bottom:0pt}h2{padding-top:10pt;line-height:1.15;text-align:left;color:#000000;font-size:13pt;font-family:\"Trebuchet MS\";font-weight:bold;padding-bottom:0pt}h3{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-size:12pt;font-family:\"Trebuchet MS\";font-weight:bold;padding-bottom:0pt}h4{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-size:11pt;text-decoration:underline;font-family:\"Trebuchet MS\";padding-bottom:0pt}h5{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-size:11pt;font-family:\"Trebuchet MS\";padding-bottom:0pt}h6{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-style:italic;font-size:11pt;font-family:\"Trebuchet MS\";padding-bottom:0pt}\rBelow are some notes about the technologies. I rate them 1-10, 1 = not strong 10 = strong. \n\nIn the end my thinking comes down the the Console. To deploy sites, change server settings, and automate tasks, etc takes scripting and command line features. Using the same language the site is being built in to also do this type of scripting makes it not only easier to do the work but to also integrate the two areas.\n\nBelow I will review the Frameworks, The different CMS options, and define some terms used through the document.\n\nFramework Considerations\nThe Frameworks I am presenting\nD = Drupal\nR = Ruby on Rails\nW = Wordpress \nL = Laravel, PHP Framework\nA = Angular.js Javascript Framework\n\nTeach -\u0026gt;\nD\nR\nW\nL\nA\nNotes (more details follow below)\nFeatures \n\n\n\n\n\n\nCLI Scripting\n1\n10\n1\n7\n0\nCommand Line Scripting (more notes below)\nTestability\n2\n10\n5\n10\n10\n(more notes below)\nCMS\n6\n8\n10\n\n\nSee CMS Notes below \nDeployment\n5\n10\n5\n10\n10\nSee Deployment Notes below (more notes below)\nAPI Integration\n8\n10\n8\n10\n10\nAble to communicate to API (more notes below)\nCustomize\n7\n10\n9\n10\n10\nSee notes below\nSupport\n7\n10\n7\n10\n10\nEase of finding developers, but see notes below\nRESTful\n5\n10\n?\n10\nN/A\nRESTful interface (more notes below)\n\n\n\n\n\n\n\n\n\n\nCMS ConsiderationsHere are some demos for Ruby on Rails and Laravel.\nKeep in mind ‚Äúmore features‚Äù does not mean better, in our case we need to be able to control the features, or limit them, have an interface that is simple to use, and most importantly we need to be able to manage security updates, feature updates, and other code or database level changes easily. Without that, and I have seen this for year now, when changes are needed, and we are up to 50-100 sites, then there is a huge expense there. \nSome of the main features I am considering, not that others are not there or possible.\nUser can easily add and edit pagesUser can easily add and edit menu areasThere is a solid WYSIWYG editor for adding pages.There are Roles and Permission Levels.There is a solid authentication system \nSome Links to CMS \nRuby on Rails\nhttp://refinerycms.com/ Refinery\nI have a youtube video here\nhttp://youtu.be/pWK_mourmGY\nThere is a nice showcase here\nhttp://refinerycms.com/showcase\nA demo is here\nhttp://refinerycms.com/showcase\n\nA lot more info can be see here\nhttp://railscasts.com/episodes/332-re...\nAs well as on their website\nhttp://refinerycms.com/\n\nLaravel\nhttp://pongocms.com/\nI really do not have much info about this one BUT any CMS we choose will do the basics you need, and most importantly be flexible for your needs.\n\nDrupal and Wordpress are already well known in this area so no links needed.\n\n\n\nCMS Chart\nRef = Refinery\nD = Drupal\nW = Wordpress\n\n\nCMS-\u0026gt;\nRef\nD\nW\nL\nNotes\nFeatures\n\n\n\n\n\nUser Roles\n8\n10\n8\n?\n\nCustomize\n10\n7\n9\n10\n\nWYSIWYG\n10\n7\n10\n10\n\nEasy to theme\n10\n5\n10\n\n\nActive Community\n10\n10\n10\n\n\nLicense\nM\nG\nG\n\nSee Licenses below\n\nLicenseGPL http://en.wikipedia.org/wiki/GNU_General_Public_License\nMIT http://en.wikipedia.org/wiki/MIT_License\n\nRuby on RailsThis is the technology behind BaseCamp, Groupon, Shopify, Yellow Pages, Hulu, Living Social, Twitter etc. This is about 10 years old and the Ruby language it is built around is older than that. \nhttp://en.wikipedia.org/wiki/Ruby_(programming_language)\nhttp://en.wikipedia.org/wiki/Ruby_on_Rails\n\n\n\nLaravelhttp://pongocms.com/ there is a screen cast in the middle of the page. I have not used this but Laravel is a very strong PHP framework that is only going to get better in the next few years and more popular. If we need to use PHP this would be the way to go.\n\nCustomizeThis now only includes the ability to customize but the ease of this work both for cost reason and for overall site stability. This Framework should not get in the way but assist us. And our work should not be about ‚Äúremoving features‚Äù or workflows but add them as we need them.\n\nRESTfulThis is key to talk to the website from the command line or centralized dashboard for example. By have this feature we can send commands, change setting etc to the site or sites as needed. For example we can send a command to disable a site, from the Sales Person dashboard.\nDeploymentWe need to be able to easily deploy changes to the sites either security updates, database changes, or new features. Some of the tools to do that are Chef, Capstrano. Frameworks that keep settings in the database such as Variables, complex table layouts for data etc are very hard to deploy and update via scripts. That is why most frameworks rely on files to base much of their configuration settings. Drupal 8 may help drupal in this regards but it will not be ready for a year or so.\n\nDeveloperspeople who can code at this level not just site builders but people how can code building these custom features, manage servers, manage deployment.\n\nCommand Line Scriptingthis is key. This allows us to use the same language to talk to the server, script deployments, monitor the systems, etc.\n\nTestabilitythis is key to a solid product, one you know you can add features to without breaking previous features. This will be a part of the entire process, and no new deployments will happen until all tests pass. Testing features like User Authentication, Branding Changes, Question Answer sorting etc will mean a long term quality to the site and confidence as we add or change features.\n\nAPI IntegrationThe API being JSON will be compatible with any of these solutions. The rating here is more about how friendly these solutions are to customize with this in mind.\n","relPermalink":"/posts/16/","summary":"I had to review for a client what CMS to choose. Keeping in mind the CMS was only part of the product and a small part. Small in that the big value to the product seem to fall more on the APP part of the project that allowed the user to make a question set from an JSON based API. So a bulk of the work would be building that.","tags":["refinerycms"],"title":"Technologies for a Saas"},{"content":"Fun side project to make a ticket system in Angular.js.\nStill have to build out the authentication system and ideally move the api into Rails.\nAnd of course wrap up a few other things ( -;\nhttp://angular.alfrednutile.info/\nOr the video\nhttp://www.youtube.com/watch?v=RjCJNn7wpj0\n\n","relPermalink":"/posts/18/","summary":"Fun side project to make a ticket system in Angular.js.\nStill have to build out the authentication system and ideally move the api into Rails.\nAnd of course wrap up a few other things ( -;\nhttp://angular.alfrednutile.info/\nOr the video\nhttp://www.youtube.com/watch?v=RjCJNn7wpj0","tags":["angular.js"],"title":"Angular.js Ticket System"},{"content":"\rFirst Rails site for the masses for me. Thanks to Progressive Exchange http://www.progressiveexchange.org/welcome.htm\rI was able to volunteer for a webapp for Doctors for America http://www.drsforamerica.org/\rSo not only do I get to learn Ruby on Rails and practice but I get to build something for a good group and purpose.\r\rThis app had to allow staff to enter and manage Speaker Requests and Speakers data as well as allow the public to view a Calendar of the upcoming events, filter as needed and submit a requests.\rhttp://speakers.drsforamerica.org/calendar\r\rSome of the key points for me where.\r1. TDD ‚Äì Still new at this but truly enjoy. Not only it is relaxing but it make refactoring code awesome.\r2. Agile ‚Äì Tried to keep the goals in small small units and check in with the client often to make sure things where on track and make changes easy. 3. Capistrano ‚Äì coming from a drupal background where migrations and database relate changes = clicking this has been pure awesome. cap deploy = done\r4. Pair programming ‚Äì I was assisted by Amos King https://twitter.com/Adkron helping me to work through what to must have seems like headstart level work but he really helped me to see how to use scopes and how to better separate my Controllers and Models.\r5. ActiveAdmin ‚Äì though it will be fun to build my own user login area this was a quick quick way to get going. It uses formtastic to output the forms, some of which I had to customize.\r6. Twitter Bootstrap ‚Äì Still getting to know this one too. It really is great, I may try Foundations next but only because they both look super.\r7. Rails ‚Äì the obvious output. Though there are great tutorials online nothing is better then application of what you ‚Äúknow‚Äù cause then you realize what you don't know ( -: Which makes going back to those tutorials even better. This being my favorite so far http://ruby.railstutorial.org/ and http://railscasts.com \rThanks to Twitter Bootstrap I get some nice Modal effects\rhttps://dl.dropboxusercontent.com/u/54803135/dfa_modal.gif\r\rAll code on GitHub\rhttps://github.com/alnutile/dfa\r\rrake stats! ‚Äì next time more tests\rhttps://dl.dropboxusercontent.com/u/54803135/dfa_stats.png ","relPermalink":"/posts/15/","summary":"First Rails site for the masses for me. Thanks to Progressive Exchange http://www.progressiveexchange.org/welcome.htm\rI was able to volunteer for a webapp for Doctors for America http://www.drsforamerica.org/\rSo not only do I get to learn Ruby on Rails and practice but I get to build something for a good group and purpose.\r\rThis app had to allow staff to enter and manage Speaker Requests and Speakers data as well as allow the public to view a Calendar of the upcoming events, filter as needed and submit a requests.","tags":["tdd"],"title":"My first Rails site for the masses."},{"content":"Most likely for any internal server I had to run command\nphp artisan serve \u0026ndash;host=\u0026ldquo;0.0.0.0\u0026rdquo;\nto access the port forwarding feature of vagrant\nUpdate: I had to also make sure to set the forward to the same as the original 8000 So my Vagrant file looked like this gist\n","relPermalink":"/posts/13/","summary":"Most likely for any internal server I had to run command\nphp artisan serve \u0026ndash;host=\u0026ldquo;0.0.0.0\u0026rdquo;\nto access the port forwarding feature of vagrant\nUpdate: I had to also make sure to set the forward to the same as the original 8000 So my Vagrant file looked like this gist","tags":["laravel"],"title":"Vagrant and Laravel"},{"content":"Overview The page will cover how billing works and the different ways I can work with you to create features for your business.\nHourly Rates We will discuss my hourly rate before starting the work. Once agreed, we can then talk about feature(s) that the business would like me to build or assist in building. I try to avoid Waterfall projects 1 or digging too deep into feature months down the roadmap since often goals change, and that time is then not a good use of budget or time.\nSome companies need a Fix Bid workflow, and I will talk about this shortly.\nAny work will start with a clear sense of scope from me. For example, you may have a goal of delivering feature CSV upload. So first, I will give you a sense of the overall cost range of to complete. And then, I will also break up the work into \u0026ldquo;small batches\u0026rdquo; to get a sense of daily goals. Then due to the billing cadence and my \u0026ldquo;daily check-in model\u0026rdquo; (more on that in a moment), you will see progress along the way and have an ongoing reality check. This cadence allows you to pivot at any time in the feature build. And also to know that we are building the right feature at the right speed.\n \u0026hellip;the principle of small batches. Functional specialists, especially those steeped in waterfall or stage-gate development, have been trained to work in extremely large batches. This causes even good ideas to get bogged down by waste. By making the batch size small, the sandbox method allows teams to make cheap mistakes quickly and start learning. As we\u0026rsquo;ll see below, these small initial experiments can demonstrate that a team has a viable new business that can be integrated back into the parent company. - Ries, Eric. The Lean Startup: How Today\u0026rsquo;s Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses (p. 264).\n Billing Cadence The cadence is every 15 days I will send an invoice with a detailed hourly list of the work done and the total for that two weeks. The payment cycle is NET 15. You can see this daily on the billing website, more on that shortly.\nThis cadence has apparent advantages for me but also for you, as seen in the quote above.\nFirst, the work I do for you will always take place in \u0026ldquo;small batches\u0026rdquo;. No matter how big the feature you are having me work on, I will break down the work into 1-3 days chunks. In that period, I will deliver results to production daily so you will see progress, and both you and I will know how the feature is going and pivot, as needed before too much time, is invested.\nDaily Check-In As noted above, I will email or chat (Slack, Teams etc) with a list of goals for the day. Typically 1-2 Pull Requests (sending code to the code storage system and then production) will be my goal. This workflow represents fully functional parts of the overall feature. Of course, even after I deploy it to production, some of this will not be seen by you, the user, but knowing it is there helps you know progress is clearly being made.\nTracking Progress If you have a ticket system, I can put all the feature(s) broken into \u0026ldquo;small batches\u0026rdquo;. For example, a feature that will take me approximately four days of work will end up being no less than 8 \u0026ldquo;tickets.\u0026rdquo; This pace allows me to continue working per the standards seen in the State of DevOps and, hopefully the Elite levels seen there. If you do not have a system and are using GitHub, we can use the system provided by GitHub. Read more about \u0026ldquo;Elite Performance\u0026rdquo; here page 18 shows the chart.2\nFixed Bid If a fixed bid is required and creating an accurate bid required thirty or more minutes of my time, then that time will be billed at my hourly rate. The will be billable time even if the work is not ever approved to be worked on. You will get a clear breakdown of each item using a formula from the \u0026ldquo;Agile Estimating and Planning\u0026rdquo; you can read more about it on my Medium post We Code in the Context of our Quoting. By the end of the quote, I will hand you an itemized spreadsheet as seen above so you can see where the time is going to.\nIf the bid is approved, then payments will happen in 2-3 steps. Depending on the size, the payment will be 1/3 to start the project, 1/3 halfway through completion, and 1/3 on delivery. The 1/3 to start is not NET 15 but is paid before starting. From there, the halfway point is NET 7, and the final invoice is NET 15.\nFeature Owners In working on a feature, I will need a point person or persons to know I am delivering the right feature. With this, I expect daily communications in Slack, Teams etc in case I get stuck or need them to review a delivered part of the feature. Most weeks will start with a rundown on what I am working on to ensure it is still a priority.\nHaving a dedicated feature owner is key. Getting paid is nice building the right thing that someone will use is essential to me as well.\nBilling System You will interact with the system Client Portal. So you can easily pay online. You will receive an email with your username and password. However, you can just reset it here.\nLinks   Waterfall \u0026#x21a9;\u0026#xfe0e;\n State of DevOps Report \u0026#x21a9;\u0026#xfe0e;\n   ","relPermalink":"/billing/","summary":"Overview The page will cover how billing works and the different ways I can work with you to create features for your business.\nHourly Rates We will discuss my hourly rate before starting the work. Once agreed, we can then talk about feature(s) that the business would like me to build or assist in building. I try to avoid Waterfall projects 1 or digging too deep into feature months down the roadmap since often goals change, and that time is then not a good use of budget or time.","tags":["biz"],"title":"Billing and Other Workflow Details"},{"content":"This took some time to figure out but I finally found a post on stack exchange. Even RailsCasts has a how-to on making a tag cloud, as well as act_as_taggable\u0026rsquo;s guthub page. But I just could not see how to limit to a context other than :tag\nSo maybe I was missing the obvious but all I wanted was to output a clickable list on a sidebar so users can filter content from that list.\nThe code took place in app/helpers/application_helper.rb Since I wanted to use it in a shared partial\nYou can see the gist here https://gist.github.com/alnutile/5745091\noriginal post that lead me to this solution http://stackoverflow.com/questions/7169787/return-all-tags-based-on-context-actsastaggableon\nI noticed too that the person who posted the solution just read the code! Sometimes it is too easy to google.\n","relPermalink":"/posts/7/","summary":"This took some time to figure out but I finally found a post on stack exchange. Even RailsCasts has a how-to on making a tag cloud, as well as act_as_taggable\u0026rsquo;s guthub page. But I just could not see how to limit to a context other than :tag\nSo maybe I was missing the obvious but all I wanted was to output a clickable list on a sidebar so users can filter content from that list.","tags":["acts_as_taggable"],"title":"Making lists from acts_as_taggable"},{"content":"  Can you clearly define the roles and responsibilities you need me to fill?   What would you need consider my hire a success in the next 6 months? In the next year?   GitHub has a 0% employee turn over rate. How does your company try to prevent turnover?   Using the past few years of your organization financial records do you have a sense of growth and constant revenue increase for this year?   Is there a good amount of jobs or internal products in the hopper to make a new hire profitable?   Considering a project that went well what do you think where some keys to it\u0026rsquo;s success and vice verse for a project that did not go well?   What are some long term goals of the company? Growth or stay the same size? SaSS products? etc   How will your company look in 10 years?   Technology is always changing and new needs come and old needs go or are less profitable. What do you see to be the next \u0026ldquo;big thing\u0026rdquo; for you company to focus on?   What is your Marketing Strategy? Word of mouth? Conferences? Magazine and Radio adds or? Is this a focus in your company?   Some companies enable / allow time during the week for staff to further their skills, give back to the community or build better tools and workflows for the company. This can at times be called 10% time etc. Just wondering if there is anything like that in place?   What are the health benefits? How much, if available, is a family health plan, dental?   Is there a retirement plan in effect?   Where can I read or learn about the company polices for sick days, personal time etc.   What is the yearly salary growth rate?   As a manager and owner how to do grow to understand your employees strengths and weaknesses?   What is most important to you, for an employee to grow in their strengths or fix their weaknesses?   What are some ways your company allows the employee to grow in their role(s)?   ","relPermalink":"/posts/12/","summary":"Can you clearly define the roles and responsibilities you need me to fill?   What would you need consider my hire a success in the next 6 months? In the next year?   GitHub has a 0% employee turn over rate. How does your company try to prevent turnover?   Using the past few years of your organization financial records do you have a sense of growth and constant revenue increase for this year?","tags":["note2self"],"title":"Questions that may come in handy when interviewing"},{"content":"Participated in the Hack For Change challenge in Western Mass.\nAll the challenges where inspiring, I took part in the \u0026ldquo;Unlocking Prison Phone Data\u0026rdquo; because it seemed like the most difficult challenge.\nA blog post about it is here\nOverall it was a lot of scrapping and command line work done by Gyepi Sam, doing some amazing work in Perl and all command line. It was great to see. Pulling down files, processing the PDFs via OCR and pushing them into the Postgres db.\nJonathan Hills, took on the work of scrapping the pages that lead to the files using Python.\nI teamed up with Jake Mitchell and Aaron Smith to manage setting up Rails and getting the Models ready to take the data.\nI later setup SunspotSolr to speed up the results of the search.\nI will post a link to the site after the 26th once there is a bit more to show.\nTheir website http://hackforwesternmass.org/\n","relPermalink":"/posts/11/","summary":"Participated in the Hack For Change challenge in Western Mass.\nAll the challenges where inspiring, I took part in the \u0026ldquo;Unlocking Prison Phone Data\u0026rdquo; because it seemed like the most difficult challenge.\nA blog post about it is here\nOverall it was a lot of scrapping and command line work done by Gyepi Sam, doing some amazing work in Perl and all command line. It was great to see. Pulling down files, processing the PDFs via OCR and pushing them into the Postgres db.","tags":["hfcwestermass"],"title":"Hack For Change Challenge"},{"content":"\rPretty amazing drop in interface to manage a site. I am building a Speakers Bureau for a non-profit and ended up using this to make that part of the build easier.\rhttp://activeadmin.info/\r\rMy only fear was bringing in way more than I needed but so far it is okay because of how hookable it is.\r\rI have dealt with other systems that can be a pain to hook so I am still always nervous about that moment when the hook takes more time than if you built it your self.\r\rActiveadmin takes your models and makes the forms needed to manage them on the fly. The one issue I has was a model with no field it could figure to use as the select label. So all I had to do was set my model to have add alias_attribute :name, :firstname to the model that was having an issue. (not the belongs_to model but the has_many) and it just worked.\r\r","relPermalink":"/posts/8/","summary":"Pretty amazing drop in interface to manage a site. I am building a Speakers Bureau for a non-profit and ended up using this to make that part of the build easier.\rhttp://activeadmin.info/\r\rMy only fear was bringing in way more than I needed but so far it is okay because of how hookable it is.\r\rI have dealt with other systems that can be a pain to hook so I am still always nervous about that moment when the hook takes more time than if you built it your self.","tags":["non-profit"],"title":"ActiveAdmin Rails"},{"content":"\rwith every git push I would like jenkins to run it's tests then deploy the branch if it passes.\r\rThis git plugin for jenkins notes you can setup a post-receive hook in git.\rhttps://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin\r\rGit goes over what is available here\rhttp://git-scm.com/book/en/Customizing-Git-Git-Hooks\r\rAll I did was add post-receive to the git repo and added the curl command in the script noted in the plugin above and now Jenkins will auto run on every git push origin development\rNice!","relPermalink":"/posts/3/","summary":"with every git push I would like jenkins to run it's tests then deploy the branch if it passes.\r\rThis git plugin for jenkins notes you can setup a post-receive hook in git.\rhttps://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin\r\rGit goes over what is available here\rhttp://git-scm.com/book/en/Customizing-Git-Git-Hooks\r\rAll I did was add post-receive to the git repo and added the curl command in the script noted in the plugin above and now Jenkins will auto run on every git push origin development\rNice!","tags":["git"],"title":"Great tip on Git and Jenkins to auto deploy"},{"content":"Going Angular\n\rTook some time to rewrite my drupal/bootstrap site into Angular.js and slim php.\rUsing slim and a seed project I quickly had a rest api to get the different content types, Blog, Page etc.\rI am using the Page content type to make other dynamic parts to the site like Footer and Header.\r\rAfter a quick migration from drupal to a more basic MySQL db layout (soon mongodb?) I put together a Angular.js front end.\n\rStill have a ton to learn about Angular and I figure this will only help. I will post some notes soon on Angular for a different\rproject I am working on.\r\rSome good links\rAngular\rhttp://angularjs.org/\rThey have a great tutorial there.\rThe Slim Rest skeleton here\rhttps://github.com/ccoenraets/angular-cellar\rGreat Seed for a Project\rhttps://github.com/angular/angular-seed\rThis seems like it could have been a good starter to build out the site\rhttp://yeoman.io/\rBut I already had a Twitter Bootstrap theme in place and ready.","relPermalink":"/posts/2/","summary":"Going Angular\n\rTook some time to rewrite my drupal/bootstrap site into Angular.js and slim php.\rUsing slim and a seed project I quickly had a rest api to get the different content types, Blog, Page etc.\rI am using the Page content type to make other dynamic parts to the site like Footer and Header.\r\rAfter a quick migration from drupal to a more basic MySQL db layout (soon mongodb?","tags":["rails"],"title":"Going Angular.js"},{"content":"Due to NDA limitations I had to remove links to the final product Latest Project Virtual Design Tool. [ url removed due to nda issues ) -: ]Some points that were fun, new, and challenging.Model, View, Controller mindet.Building the RESTful service/API firstTrying to follow a feature driven development plan.Having smaller tasks and more points of QAHaving smaller points to check in with the client to review the finished tasks and not wait till the \u0026ldquo;end\u0026rdquo;.Make it modular so it would work just as well outside of the site as in.Verbally breaking up the Classes, functions and overall code used to make the App.¬†NaturalDocs documentation tool and syntaxJetBrain IDEI have been trying to learn the Model View Controller structure to code in. Since we are working with drupal it seems to be a tough fit. Basically drupal becomes possible via some custom code with a RESTful API. It\u0026rsquo;s menu router offering one point of access for anonymous level data (right now just read only). From there the work was making the Models to deliver back to the Controller the data requested. The App calls to this end point with requests. The App then has a View that receives the Model\u0026rsquo;s data and outputs it on the page. MVC is still quite new to me. Mix this with OOP and you get a lot of new ways of thinking in one project. So it was a good start but not perfect.\n\nWe learned from our last project and 100 projects before that the endless issues with ‚ÄúBig Up Front Design‚Äù [‚ÄúBecause any big design created in advance of working software cannot be correct‚Äù Practical Object-Oriented Design in Ruby: An Agile Primer (Addison-Wesley Professional Ruby Series)¬†by Sandi Metz] also not having enough small measurable pieces to review with the client, ie Agile.‚ÄúBecause any big design created in advance of working software cannot be correct‚Äù¬†Practical Object-Oriented Design in Ruby: An Agile Primer (Addison-Wesley Professional Ruby Series)¬†by Sandi Metz\nThis smaller project we took time to break up the scope into numerous tasks grouped in a Feature. That feature/interaction was then placed inside a Burn Down chart to help track progress. [Great info here http://joel.inpointform.net/software-development/b rn-down-charts-tutorial-simple-agile-project-tracking/]Each task was smaller than 2 days. We initially played quoting poker as an office to guesstimate the tasks lengths. Many of the tasks ended up being small modular functional parts of the whole we that could QA internally or show to the client. For example the full product looks like this. [photo removed per NDA]¬†But the work was broken up into smaller pieces as such¬†Shapes BarOrientation Bar¬†[photo removed per NDA]¬†Texture and Colors bar window where images wrap out. etc. Small chunks that we could make focused css and javascript around.¬†Then we took a full day, 2 coders, to outline on paper, white board etc how to build the App. This was tough since it seems anti-productive. But mix this with writing tests, documentation and it was easier to be more precise about what was being built. The other goal here was to make it very modular. Ideally it could work outside of the website css and all.¬†Scalable and Modular Architecture for CSS¬†[photo removed per NDA]¬†On a side note one of the cool things about the App is how the effect is made.¬†There is really only one large swatch image and then a set of transparent orientations per Shape. The initial load of the page only pulls down the default Shape\u0026rsquo;s set eg 4 orientations. When you click a Shape the new set is pulled from a stored result in the jQuery.data object which was stashed there via the initial delivery of the JSON data. There is no new pull from the server till you click a new Texture. This was one possible way to reduce the image lag and download that can happen with a large set of image..[photo removed per NDA]¬†was a good way to document the code but I am starting to agree with some of the books I am reading that good code should read like a book and not need comments and docs [Clean Code: A Handbook of Agile Software Craftsmanship¬†by Robert C. Martin http://www.amazon.com/dp/B001GSTOAM/ref=r_soa_w_d ]. Opening notes or a readme to get help the coder know the purpose of the file but the rest should be found in the names of the Classes and Methods and just well broken out code.\n\nFinally I used an IDE other than Coda. I am running Ubuntu now and just wanted to try and IDE that could do a ton more than Coda. Simple tools like Textmate or Sublime peak my interest as well but so far the IDE from these people was really good http://www.jetbrains.com/. I like how it had jshint built in, integration to git that was ‚Äúbetter‚Äù than Coda. Sure the command line is great for git but there gui was not bad at times to have as well. It was not slow at all, my Core 2 Duo on an SSD never seemed slow.\n","relPermalink":"/posts/6/","summary":"Due to NDA limitations I had to remove links to the final product Latest Project Virtual Design Tool. [ url removed due to nda issues ) -: ]Some points that were fun, new, and challenging.Model, View, Controller mindet.Building the RESTful service/API firstTrying to follow a feature driven development plan.Having smaller tasks and more points of QAHaving smaller points to check in with the client to review the finished tasks and not wait till the \u0026ldquo;end\u0026rdquo;.","tags":["REST"],"title":"Javascript Based Product Viewer"},{"content":"Sometime when using spaces and purl there are Pages Not Found even though they are there. This is one reason. There is a space that purl is looking for a url starting with eg test. Some day you make a node test/testmore and decide later to use drupal\u0026#39;s redirect to save the url test/testmore and delete the node (or unpublish it) But since spaces and purl is keeping an eye on test it will not work. Purl will strip the redirect of the test part $_REQUEST[\u0026#39;q\u0026#39;] making it so this would fail since it no longer is in this space. This minor hook_init can do a double check.\nfunction path_redirect_extra_init() {\r//Check if empty page\r$status = menu_get_item($_GET[\u0026#39;q\u0026#39;]);\r//print_r(\u0026#39;Menu get item \u0026#39; . $status);\rif(empty($status)) {\r//do one more check if this can be redirects\rif(isset($_REQUEST[\u0026#39;q\u0026#39;])) {\r$original_request = check_plain($_REQUEST[\u0026#39;q\u0026#39;]);\r$result = db_query(\u0026quot;SELECT redirect FROM path_redirect WHERE source LIKE \\\u0026quot;%s\\\u0026quot;\u0026quot;, $original_request);\rwhile ($row = db_fetch_array($result)) {\rdrupal_goto($row[\u0026#39;redirect\u0026#39;], $query = NULL, $fragment = NULL, $http_response_code = 301);\r}\r}\r} }\r\rThe http://drupal.org/project/fast_404 module used hook_boot which may have worked as well. Also this is d6 and d7 has the hook_url_inbound_alter and hook_url_outbound_alter whereas d6 closest option to these is custom_url_rewrite_inbound\n","relPermalink":"/posts/26/","summary":"Sometime when using spaces and purl there are Pages Not Found even though they are there. This is one reason. There is a space that purl is looking for a url starting with eg test. Some day you make a node test/testmore and decide later to use drupal\u0026#39;s redirect to save the url test/testmore and delete the node (or unpublish it) But since spaces and purl is keeping an eye on test it will not work.","tags":["bug"],"title":"Global Redirect module after spaces / purl install does not "},{"content":"I will be presenting on 2 topics.\nUsing a VM for development the url can be seen below. http://drupalcampma.com/virtual-box-ubuntu-local-development-strategy\njQuery/Ajax without using the Drupal FAPI http://drupalcampma.com/using-jquery-and-ajax-outside-drupal-fapi\nThough this drupal backbone session looks great! http://drupalcampma.com/drupal-and-backbonejs\n","relPermalink":"/posts/1/","summary":"I will be presenting on 2 topics.\nUsing a VM for development the url can be seen below. http://drupalcampma.com/virtual-box-ubuntu-local-development-strategy\njQuery/Ajax without using the Drupal FAPI http://drupalcampma.com/using-jquery-and-ajax-outside-drupal-fapi\nThough this drupal backbone session looks great! http://drupalcampma.com/drupal-and-backbonejs","tags":["presentation"],"title":"DrupalCamp Western Mass"},{"content":"Simple example of jQuery.address in use. As you click the top \u0026ldquo;black\u0026rdquo; menu area the pages will load via Ajax (and title) notice also the URL. Then if you click back it forces a reload. There is very little code needed to make this work. Other than the ajax callback I run this on page load (eg pressing back on the browser button)\n//Jquery Address clicking back\r$.address.externalChange(function(){\rif($.address.value() !== '/') {\rupdateMe($.address.value());\r}\r});\r\rThe externalChange reacts to the page load or back button and runs this function(s). In this case I run a function and pass the path to it. All that function does is run jQuery.ajax based on the path and lastly\n\r$.address.value(path);\r\r\rand this updates the path.\nThat is it. One other thing is I set the state to\n\r$.address.state('/');\r\r\rThis made it possible to remove the # from the url.\n","relPermalink":"/posts/5/","summary":"Simple example of jQuery.address in use. As you click the top \u0026ldquo;black\u0026rdquo; menu area the pages will load via Ajax (and title) notice also the URL. Then if you click back it forces a reload. There is very little code needed to make this work. Other than the ajax callback I run this on page load (eg pressing back on the browser button)\n//Jquery Address clicking back\r$.address.externalChange(function(){\rif($.address.value() !== '/') {\rupdateMe($.","tags":["JavaScript"],"title":"jQuery Address"},{"content":"Some sites are under NDA. So if you see this message at some point after clicking a link it is due to that. If you have questions about the link you clicked feel free to email me at alfrednutile@gmail.com\n","relPermalink":"/posts/21/","summary":"Some sites are under NDA. So if you see this message at some point after clicking a link it is due to that. If you have questions about the link you clicked feel free to email me at alfrednutile@gmail.com","tags":["nda"],"title":"NDA"}]