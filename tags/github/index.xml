<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Alfred Nutile</title><link>https://alfrednutile.info/tags/github/</link><description>Recent content in github on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 May 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://alfrednutile.info/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Github CLI to get Teams and Members of an Org</title><link>https://alfrednutile.info/posts/67/</link><pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/67/</guid><description>&lt;p>Needed to make a quick library for pulling down this info and making it a CSV file.&lt;/p>
&lt;p>The libraries made this super easy. But it was hard to get all the emails since these can only been seen if in the users profile.&lt;/p>
&lt;h3 id="the-link">the link&lt;/h3>
&lt;p>&lt;a href="https://github.com/alnutile/org_reports">https://github.com/alnutile/org_reports&lt;/a>&lt;/p></description>
github, tools, apis, php</item><item><title>Using Github Pages for your help docs</title><link>https://alfrednutile.info/posts/54/</link><pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/54/</guid><description>&lt;p>Really impressed with how this came out.&lt;/p>
&lt;p>Using Github pages with no theme we can use that repo to then pull in our help files to our local project via a JSON request. This separates documentation from the project so anyone on the team can checkout the git branch for the docs, make an edit and push to that branch which then shows on the site in minutes.&lt;/p>
&lt;p>To start with take the repo you are using to make a new branch called gh-pages as noted here &lt;a href="https://help.github.com/articles/creating-project-pages-manually" target="_blank">Github Docs&lt;/a>&amp;nbsp;&lt;/p>
&lt;p>Once you have that branch start writing your Markdown files.&amp;nbsp;&lt;/p>
&lt;p>I have one index.md that always links to the files in the folder.&lt;/p>
&lt;p>So when I am done the root looks like this&lt;/p>
&lt;p>/index.md&lt;/p>
&lt;p>/images&lt;/p>
&lt;p>/foo.md&lt;/p>
&lt;p>/bar.md&lt;/p>
&lt;p>And if you where to open the index.md you would see this (view the raw version)&lt;/p>
&lt;p>&lt;script src="https://gist.github.com/alnutile/8976685.js?file=index.md">&lt;/script>&lt;/p>
&lt;p>So I am setting up this file to link to the files I am making. This will allow our help page to have an index.&lt;/p>
&lt;p>Then for foo.md I could do something like this (view the raw version)&lt;/p>
&lt;p>&lt;script src="https://gist.github.com/alnutile/8976685.js?file=foo.md">&lt;/script>&lt;/p>
&lt;p>I will show in a moment the javascript to make the youtube link open in a new page.&lt;/p>
&lt;p>When I am done with my markdown I run this at the command line&lt;/p>
&lt;div class="code">for i in ./*.md; do markdown --html4tags $i &amp;gt; ${i%.*}.html; done;&lt;/div>
&lt;p>and I end up with with my html files all made for me. &lt;a href="#mdlibrary">[1]&lt;/a>&lt;/p>
&lt;p>Then I git add, git commit and git push this back to origin gh-pages.&lt;/p>
&lt;p>That is it for docs.&lt;/p>
&lt;p>In the app that uses these docs I just have a link that triggers a library to open and show the content.&lt;/p>
&lt;p>I used this library for the slide out&amp;nbsp;&lt;a href="http://srobbin.com/jquery-plugins/pageslide/" target="_blank">http://srobbin.com/jquery-plugins/pageslide/&amp;nbsp;&lt;/a>&lt;/p>
&lt;p>&lt;img alt="" src="https://photos-2.dropbox.com/t/0/AACODxjK2Mv48iOVCcaSVGPYlYXqWO4lIiaxxwe-osBKCQ/12/54803135/png/1024x768/3/1392310800/0/2/Screenshot%202014-02-13%2010.13.17.png/V8Dl4gLTAVYdmmhc_1z4PuXh7811CRto-qYXCc-5tkI" style="width: 400px; height: 566px;" />&lt;/p>
&lt;p>I am not totally sold on the library.&lt;/p>
&lt;p>Finally the JS code to pull in the Github docs.&amp;nbsp;&lt;/p>
&lt;p>&amp;nbsp;&lt;/p>
&lt;script src="https://gist.github.com/alnutile/8976685.js?file=help.js">&lt;/script>
&lt;p>Finally I have a route that gets it for me and cleans it up. This could have been done in JS but I did it this way&lt;/p>
&lt;script src="https://gist.github.com/alnutile/8976685.js?file=router.php">&lt;/script>
&lt;p>Note&lt;/p>
&lt;p>&lt;a name="mdlibrary">[1] &lt;/a>I will be using the markdown to html library soon so we can just leave the&amp;nbsp;md&amp;nbsp;as is.&lt;/p></description>
github</item></channel></rss>