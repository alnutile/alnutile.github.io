<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dusk on Alfred Nutile</title><link>https://alnutile.github.io/tags/dusk/</link><description>Recent content in dusk on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://alnutile.github.io/tags/dusk/index.xml" rel="self" type="application/rss+xml"/><item><title>Dusk Screenshots to S3 of Failing tests</title><link>https://alnutile.github.io/posts/248/</link><pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/248/</guid><description>I can be really annoying to troubleshoot a failed test in Dusk when using CI systems. What I ended up doing was setting up my project to send these files to S3 on fail.
Here are the steps
Setup You App This is just S3 storage so make sure you have a bucket and a folder in the bucket to write to. Basically for AWS you make an IAM with a key and secret and let it read/write to this folder.</description></item><item><title>Dusk Notes</title><link>https://alnutile.github.io/posts/225/</link><pubDate>Sun, 10 Dec 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/225/</guid><description>Just keeping a list of gotchas around dusk.
use RefreshDatabase not working Cost: 1 hour lost
Basically I had to go back to the slower &amp;ldquo;use DatabaseMigrations;&amp;rdquo; otherwise it would not work. The user was null.
Links: This thread helped
Headless or not Cost: 1 hour lost or less
For some odd reasons my tests started coming up blank.
I turned off headless in this class DuskTestCase
protected function driver()
{
$args = [
'--disable-gpu',
'--headless'
];
if (env(&amp;quot;HEADLESS_OFF&amp;quot;)) {
$args = [
'--disable-gpu'
];
}
$options = (new ChromeOptions)-&amp;gt;addArguments($args);
return RemoteWebDriver::create(
'http://localhost:9515',
DesiredCapabilities::chrome()-&amp;gt;setCapability(
ChromeOptions::CAPABILITY,
$options
)
);
}
And this way it still works on travis.</description></item></channel></rss>