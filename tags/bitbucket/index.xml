<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bitbucket on Alfred Nutile</title><link>https://alfrednutile.info/tags/bitbucket/</link><description>Recent content in bitbucket on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Sep 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://alfrednutile.info/tags/bitbucket/index.xml" rel="self" type="application/rss+xml"/><item><title>Bitbucket Pipeline</title><link>https://alfrednutile.info/posts/257/</link><pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/257/</guid><description><p>BitBucket has a nice feature call Pipelines<a href="https://bitbucket.org/product/features/pipelines">https://bitbucket.org/product/features/pipelines</a> for $0 you can, even for private repos have a decent CI flow.</p><blockquote><p>Private repos CI Pipeline $0!!</p></blockquote><p>It took a bit to get going though since the docs do not talk about PHP and MySQL in enough details. Here is what I ended up with for a<code>bitbucket-pipelines.yml</code></p><pre><code># This is a sample build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: php:7.2<p>options:
max-time: 120</p><p>pipelines:
default:
- step:
caches:
- composer
script:
- apt-get update &amp;&amp; apt-get install -y unzip gnupg
- docker-php-ext-install mysqli pdo pdo_mysql
- curl -sS<a href="https://getcomposer.org/installer">https://getcomposer.org/installer</a> | php &ndash; &ndash;install-dir=/usr/local/bin &ndash;filename=composer
- cp .env.bitbucket .env
- curl -sL<a href="https://deb.nodesource.com/setup_8.x">https://deb.nodesource.com/setup_8.x</a> | bash -
#- apt-get install -y nodejs
# hung on install so will have to come back to this
#- npm install
#- npm test
- composer install
- composer check-style
- vendor/bin/phpunit
services:
- mysql
- step:
name: Deploy to staging
image: aneitayang/aws-cli:1.0
deployment: staging
trigger: automatic
script:
- curl<a href="https://forge.laravel.com/servers/baz/sites/bar/deploy/http?token=foo">https://forge.laravel.com/servers/baz/sites/bar/deploy/http?token=foo</a></p><p>definitions:
services:
mysql:
image: mysql:5.7
environment:
MYSQL_DATABASE: &lsquo;test&rsquo;
MYSQL_RANDOM_ROOT_PASSWORD: &lsquo;yes&rsquo;
MYSQL_USER: &lsquo;test_user&rsquo;
MYSQL_PASSWORD: &lsquo;password&rsquo;</code></pre><p>So basically I install mysql and set it up to use then all just work. NPM just hangs right now so I am not 100% sure what to do there.</p></p><h2 id="debug">Debug</h2><p>Unlike TravisCI I could not just SSH in to debug I had to run docker.
Here are some links</p><ul><li><a href="https://confluence.atlassian.com/bitbucket/debug-your-pipelines-locally-with-docker-838273569.html">https://confluence.atlassian.com/bitbucket/debug-your-pipelines-locally-with-docker-838273569.html</a></li><li><a href="https://confluence.atlassian.com/bitbucket/php-with-bitbucket-pipelines-873907835.html">https://confluence.atlassian.com/bitbucket/php-with-bitbucket-pipelines-873907835.html</a></li><li><a href="https://confluence.atlassian.com/bitbucket/configure-bitbucket-pipelines-yml-792298910.html">Config Info</a></li></ul><p>running locally below worked for me</p><pre><code>docker run -it --volume=$(pwd):/var/www/html --memory=4g --memory-swap=4g --memory-swappiness=0 --entrypoint=/bin/bash php:7.2-apache</code></pre><p>But I would have to install their mysql docker as well they note and map them together. ¯_(ツ)_/¯</p><p>Maybe the price is right for this vs TravisCI</p></description><tags>laravel, bitbucket</tags></item></channel></rss>