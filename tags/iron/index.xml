<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iron on Alfred Nutile</title><link>https://alnutile.github.io/tags/iron/</link><description>Recent content in iron on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 04 Jun 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://alnutile.github.io/tags/iron/index.xml" rel="self" type="application/rss+xml"/><item><title>Logging in Iron.io Workers</title><link>https://alnutile.github.io/posts/147/</link><pubDate>Thu, 04 Jun 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/147/</guid><description>Previously I wrote about how to use Lumen and Iron.io this adds to that by modifying the logging technique.
As noted the worker is basically a class that sets things up, hands off the payload to the handler and returns the results.
&amp;lt;?php
use App\CompareFuseHandler;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Log;
require_once __DIR__ . '/libs/bootstrap.php';
$payload = getPayload(true);
fire($payload);
function fire($payload)
{
$logs = storage_path('logs/lumen.log');
Log::info(sprintf(&amp;quot;Starting Worker at %s&amp;quot;, \Carbon\Carbon::now()));
try
{
//Empty Logs
$handler = App::make('App\CompareFuseHandler');
$handler-&amp;gt;handle($payload);
echo &amp;quot;Success See Logs Below: \n&amp;quot;;
Log::info(sprintf(&amp;quot;Ending Worker at %s&amp;quot;, \Carbon\Carbon::now()));
echo File::get($logs);
}
catch(\Exception $e)
{
echo &amp;quot;Error See Logs Below: \n&amp;quot;;
Log::info(sprintf(&amp;quot;Ending Worker at %s&amp;quot;, \Carbon\Carbon::now())); echo File::get($logs);
}
}
The nice thing about above is that all throughout my handler class I can start the do Log::info('foo') to store up a report for the end of the process on either Success or Error.</description></item><item><title>Iron.io and Lumen</title><link>https://alnutile.github.io/posts/143/</link><pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/143/</guid><description>Lumen Iron Worker What and why A worker is a great way to run tasks as needed taking the load off your applications server and greatly speeding up the process of a task as you can run numerous workers at once.
A lot of this comes from http://dev.iron.io/worker/beta/getting_started/ and http://dev.iron.io/worker/beta/cli/ and their examples
Topics covered Creating a Lumen Worker Creating a statically linked binary in the worker Testing the worker locally with Docker Entering your docker environment Design patterns Install Lumen composer create-project laravel/lumen --prefer-dist
Add to composer.</description></item></channel></rss>