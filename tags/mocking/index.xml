<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mocking on Alfred Nutile</title><link>https://alfrednutile.info/tags/mocking/</link><description>Recent content in mocking on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 04 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://alfrednutile.info/tags/mocking/index.xml" rel="self" type="application/rss+xml"/><item><title>Mocking, Python, Pytest</title><link>https://alfrednutile.info/posts/268/</link><pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/268/</guid><description>Ok this is going to be a collection of notes to self.
This post does a good job of summing up some mock patterns with PyTest.
I then had to mock the Snyk client which depended on the Requests library. I chose not to mock the requests library but the methods in the snyk library.
The thing was the method I mocked returned the &amp;ldquo;Response&amp;rdquo; object and I wanted to use the json() feature of that object/class to return the results.</description></item><item><title>Mocking in Python</title><link>https://alfrednutile.info/posts/263/</link><pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/263/</guid><description>Serious note to self.
I wanted to mock the Github module for python.
My simple class will get the ID of the team.
from github import Github, Team
from dotenv import load_dotenv
import os
import sys
import json
class GetTeamId:
def __init__(self):
load_dotenv()
self.team_id = 5555
self.token = os.environ.get(&amp;quot;GITHUB_TOKEN&amp;quot;)
self.client = Github(self.token)
self.org = self.client.get_organization('FooBar')
def handle(self, team_name):
teams = self.org.get_teams()
for team in teams:
if team_name == team.name:
print(&amp;quot;Team id&amp;quot;, team.</description></item></channel></rss>