<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coder on Alfred Nutile</title><link>https://alfrednutile.info/tags/coder/</link><description>Recent content in coder on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Aug 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://alfrednutile.info/tags/coder/index.xml" rel="self" type="application/rss+xml"/><item><title>Team Style Guides and Mind Set</title><link>https://alfrednutile.info/posts/105/</link><pubDate>Sun, 24 Aug 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/105/</guid><description>&lt;p>Been sharing this info with team members a bit lately and want to post it here for reference.
Though there is no ONE way to do any of this there are ways that scale better than others. But more importantly having one way as a team to do things can be key to projects from beginning to end (eg the rest of the projects life!)&lt;/p>
&lt;h1 id="project-style-guides">Project Style Guides&lt;/h1>
&lt;p>&lt;a href="https://kindle.amazon.com/work/the-clean-coder-professional-programmers-ebook/B004SJU478/B0050JLC9Y">The Clean Coder&lt;/a> by Robert Martin book is a look at being a &amp;ldquo;Professional&amp;rdquo; coder and all that comes with it.
It is a great look at not only how one should be in the role of a Programmer but what to expect of each other as a team.&lt;/p>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/51MoTaVrS7L._SS130_.jpg" alt="clean code">&lt;/p>
&lt;p>&lt;a href="https://kindle.amazon.com/work/domain-driven-design-tackling-complexity-software-ebook/B001KBG6RO/B00794TAUG">Domain Driven Deisgn&lt;/a>
A great look at being a programmer that not only makes code but more importantly bridges the gap between the vision of the business with the goals of the code.&lt;/p>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/51WLtI-uLcL._SS130_.jpg" alt="ddd">&lt;/p>
&lt;hr>
&lt;h1 id="php-style-guides">PHP Style Guides&lt;/h1>
&lt;p>Back to Robert Martin again on this to start &lt;a href="https://kindle.amazon.com/work/clean-code-handbook-software-craftsmanship-ebook/B001GTWCJG/B001GSTOAM">Clean Code&lt;/a>&lt;/p>
&lt;p>It is not about PHP directly but it all applies to good Oo PHP design patterns and thinking. There are so many classics he quotes that could be added here as well.&lt;/p>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/41XojFFhYlL._SS130_.jpg" alt="clean code">&lt;/p>
&lt;hr>
&lt;h1 id="angular-style-guides">Angular Style Guides&lt;/h1>
&lt;p>I use to start with Angular Seed but always thought it fell short when the project grew and this guide made it clear to me why. IMO it is a much better approach to Angular &lt;a href="https://github.com/johnpapa/angularjs-styleguide">John Papa&lt;/a>. This guide includes examples which is great.&lt;/p>
&lt;hr>
&lt;h1 id="api-guides">API Guides&lt;/h1>
&lt;p>There are a number of great books on this as well. Right now a short and simple look at how to make an API, I think, is &lt;a href="https://leanpub.com/build-apis-you-wont-hate">Build APIs You Won&amp;rsquo;t Hate&lt;/a> by Phil Sturgeon. Great code example too on Behat and API testing&lt;/p>
&lt;p>&lt;img src="https://s3.amazonaws.com/titlepages.leanpub.com/build-apis-you-wont-hate/small?1408731468" alt="apis">&lt;/p>
&lt;hr>
&lt;h1 id="uml-20">UML 2.0&lt;/h1>
&lt;p>A unified means to communicate ideas to each other and to product owners. Before digging into code this is a great way for teams to communicate all the way from higher level overview down to the classes and constructors.&lt;/p>
&lt;p>Seems the Gang of Four book, Robert Martin books and Domain Driven Design all point to this as a way to sketch out ideas or even use it as a long term blueprint to go hand and hand with deployed code. The &lt;a href="http://www.amazon.com/UML-2-0-Nutshell-OReilly-ebook/dp/B0026OR2L8/ref=tmm_kin_title_0?_encoding=UTF8&amp;amp;sr=8-1&amp;amp;qid=1410697423">UML 2.0 in a Nutshell&lt;/a> along with the more in depth O&amp;rsquo;Reilly book UML 2.0 second edition.&lt;/p>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41FVsizkpIL._BO2,204,203,200_PIsitb-sticker-v3-big,TopRight,0,-55_SX278_SY278_PIkin4,BottomRight,1,22_AA300_SH20_OU01_.jpg" alt="nutshell">&lt;/p>
&lt;hr>
&lt;h1 id="bdd--tdd">BDD / TDD&lt;/h1>
&lt;p>Testing is really key I think know one anymore doubts that. What you end up with is Code that you can refactor and make better over time with confidence. And as a team that is important. It also leads to one of the best sources of documentation. This presentation talks about &lt;a href="https://amsterdam2014.drupal.org/session/doing-behaviour-driven-development-behat">BDD&lt;/a> and &lt;a href="http://everzet.com/post/99045129766/introducing-modelling-by-example">article&lt;/a> really take it to the next level. As the test become the glue between the goals of the business and the code of the developers.&lt;/p>
&lt;h1 id="final-notes">Final Notes&lt;/h1>
&lt;p>Robert Martin really hones in for me why testing is so important. It is not about TDD in the end &lt;strong>but maintainable and changeable code&lt;/strong>. And so even though much of the above seems like more work upfront it really leads to better code and better experiences as a coder and more importantly as a team.&lt;/p>
&lt;p>Also Pair programming is a great use of time and should not be feared. Too much of it wears me out but just the right amount can be a powerful way to get a team member up to speed on a new part to a project or just to check in with each other and spend some time coding and growing as a team. It is scary to share in something as personal as coding but in the end we all can learn from each other.&lt;/p>
&lt;hr>
&lt;h1 id="misc-reads">Misc Reads&lt;/h1>
&lt;p>Not as key as the ones above imo but still super helpful. Though POODR could easily be moved above.&lt;/p>
&lt;h2 id="practical-object-oriented-design-in-ruby-an-agile-primerhttpskindleamazoncomworkpractical-object-oriented-design-ruby-addison-wesley-ebookb0096gequeb0096byg7c">&lt;a href="https://kindle.amazon.com/work/practical-object-oriented-design-ruby-addison-wesley-ebook/B0096GEQUE/B0096BYG7C">Practical Object-Oriented Design in Ruby: An Agile Primer&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/51lFbn3LPCL._SS130_.jpg" alt="https://images-na.ssl-images-amazon.com/images/I/51lFbn3LPCL.SS130.jpg">&lt;/p>
&lt;h2 id="php-objects-patterns-and-practicehttpskindleamazoncomworkobjects-patterns-practice-experts-source-ebookb003xrx1qmb003xqf3nw">&lt;a href="https://kindle.amazon.com/work/objects-patterns-practice-experts-source-ebook/B003XRX1QM/B003XQF3NW">PHP Objects, Patterns and Practice&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/51bJaFjTZnL._SS130_.jpg" alt="https://images-na.ssl-images-amazon.com/images/I/51bJaFjTZnL.SS130.jpg">&lt;/p>
&lt;h2 id="laravel-from-apprentice-to-artisanhttpsleanpubcomlaravel">&lt;a href="https://leanpub.com/laravel">Laravel: From Apprentice To Artisan&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://s3.amazonaws.com/titlepages.leanpub.com/laravel/small?1387959278" alt="https://s3.amazonaws.com/titlepages.leanpub.com/laravel/small?1387959278">&lt;/p>
&lt;h2 id="eloquent-javascript-a-modern-introduction-to-programminghttpskindleamazoncomworkeloquent-javascript-modern-introduction-programming-ebookb00409onimb004oejnq0">&lt;a href="https://kindle.amazon.com/work/eloquent-javascript-modern-introduction-programming-ebook/B00409ONIM/B004OEJNQ0">Eloquent JavaScript: A Modern Introduction to Programming&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/519WDGN-9DL._SS130_.jpg" alt="https://images-na.ssl-images-amazon.com/images/I/519WDGN-9DL.SS130.jpg">&lt;/p>
&lt;h2 id="nodejs-the-right-way-practical-server-side-javascript-that-scaleshttpskindleamazoncomworknode-js-right-way-server-side-javascript-ebookb00hsocscyb00hso6yd8">&lt;a href="https://kindle.amazon.com/work/node-js-right-way-server-side-javascript-ebook/B00HSOCSCY/B00HSO6YD8">Node.js the Right Way: Practical, Server-Side JavaScript That Scales&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/51%2BVjuSvKJL._SS130_.jpg" alt="https://images-na.ssl-images-amazon.com/images/I/51%2BVjuSvKJL.SS130.jpg">&lt;/p>
&lt;h2 id="the-pragmatic-programmer-from-journeyman-to-masterhttpskindleamazoncomworknode-js-right-way-server-side-javascript-ebookb00hsocscyb00hso6yd8">&lt;a href="https://kindle.amazon.com/work/node-js-right-way-server-side-javascript-ebook/B00HSOCSCY/B00HSO6YD8">The Pragmatic Programmer: From Journeyman to Master&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/41oqLxoTYsL._SS130_.jpg" alt="https://images-na.ssl-images-amazon.com/images/I/41oqLxoTYsL.SS130.jpg">&lt;/p>
&lt;h2 id="restful-web-apishttpskindleamazoncomworkrestful-web-apis-leonard-richardson-ebookb00dduvtr2b00f5bs966">&lt;a href="https://kindle.amazon.com/work/restful-web-apis-leonard-richardson-ebook/B00DDUVTR2/B00F5BS966">RESTful Web APIs&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/51KhFuo-5%2BL._SS130_.jpg" alt="https://images-na.ssl-images-amazon.com/images/I/51KhFuo-5%2BL.SS130.jpg">&lt;/p></description>
php, angular.js, coder</item></channel></rss>