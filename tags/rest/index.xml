<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REST on Alfred Nutile</title><link>https://alnutile.github.io/tags/rest/</link><description>Recent content in REST on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 14 Jun 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://alnutile.github.io/tags/rest/index.xml" rel="self" type="application/rss+xml"/><item><title>Transforming Output from the Database to the View/REST layer</title><link>https://alnutile.github.io/posts/88/</link><pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/88/</guid><description>Having watched the screen cast here by Jeffery Way and reading Phil Sturgeon&amp;rsquo;s Build APIs You Won&amp;rsquo;t Hate I used this approach on a recent project.
Basically, and they both cover it really well, instead of returning the data right to the ui/rest endpoint from the database I pass it through a class to transform the data formats, field name etc. This has been extremely helpful as we also work out some wording of fields that I can not do easily in this one class.</description></item><item><title>Javascript Based Product Viewer</title><link>https://alnutile.github.io/posts/6/</link><pubDate>Fri, 22 Mar 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/6/</guid><description>Due to NDA limitations I had to remove links to the final product Latest Project Virtual Design Tool. [ url removed due to nda issues ) -: ]Some points that were fun, new, and challenging.Model, View, Controller mindet.Building the RESTful service/API firstTrying to follow a feature driven development plan.Having smaller tasks and more points of QAHaving smaller points to check in with the client to review the finished tasks and not wait till the &amp;ldquo;end&amp;rdquo;.</description></item></channel></rss>