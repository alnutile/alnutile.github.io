<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>note2self on Alfred Nutile</title><link>https://alfrednutile.info/tags/note2self/</link><description>Recent content in note2self on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 Feb 2022 06:32:07 -0400</lastBuildDate><atom:link href="https://alfrednutile.info/tags/note2self/index.xml" rel="self" type="application/rss+xml"/><item><title>SwiftUI: Switching to a page when a user clicks on notification</title><link>https://alfrednutile.info/posts/swift_notifications/</link><pubDate>Sat, 12 Feb 2022 06:32:07 -0400</pubDate><guid>https://alfrednutile.info/posts/swift_notifications/</guid><description><h3 id="quick-notes-to-self-on-how-to-have-the-user-go-to-a-specific-page-after-clicking-on-a-notification-in-ios">Quick Notes to Self on how to have the user go to a specific page after clicking on a Notification in iOS.</h3><img src="images/notifications.gif" width="600"><p>The two main articles that helped are<a href="https://stackoverflow.com/questions/62504400/programmatically-change-to-another-tab-in-swiftui">https://stackoverflow.com/questions/62504400/programmatically-change-to-another-tab-in-swiftui</a></p><p><a href="https://stackoverflow.com/questions/62309251/how-can-i-open-a-specific-view-in-swiftui-when-a-user-opens-a-notification">https://stackoverflow.com/questions/62309251/how-can-i-open-a-specific-view-in-swiftui-when-a-user-opens-a-notification</a></p><p>One helped me to see how in a more “modern” SwiftUI way get the state of the Notification from the UIDelegate up to the SwiftUI view. The second one was key since I am using TabView and needed to change the view when this was updated.</p><p>This will assume you have Firebase notifications already working. The pattern I used there can be seen in<a href="https://designcode.io/swiftui-advanced-handbook-push-notifications-part-1">https://designcode.io/swiftui-advanced-handbook-push-notifications-part-1</a> some really great material here as well as<a href="https://seanallen.teachable.com">https://seanallen.teachable.com</a></p><h2 id="setup-up-notificationmanager">Setup up<code>NotificationManager</code></h2><p>I followed the first post but I was a bit more specific since I just, for now, have one page.</p><p>For example when that person setups up the<code>pageToNavigateTo</code> a number I just set it to</p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift">notificationManager?.pageToNavigationTo =<span style="color:#e6db74">"myRecalls"</span></code></pre></div><p>This means I had to set the class as well</p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift"><span style="color:#66d9ef">class</span><span style="color:#a6e22e">NotificationManager</span>: ObservableObject {<span style="color:#66d9ef">static</span><span style="color:#66d9ef">let</span> shared = NotificationManager()
@Published<span style="color:#66d9ef">var</span> pageToNavigationTo : String?
}</code></pre></div><p>From here, I followed along with everything else till they get to the page with the Navigation since I am using tabs. That is where the second article comes in. I set my tags on the Tabs and then set the default.</p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift"> @State<span style="color:#66d9ef">private</span><span style="color:#66d9ef">var</span> tabSelection =<span style="color:#e6db74">"topics"</span><pre><code>&lt;span style="color:#66d9ef">var&lt;/span> body: some View {
ZStack {
VStack {
&lt;span style="color:#66d9ef">if&lt;/span>(authState.signedIn) {
TabView(selection: &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>tabSelection) {
TopicsParentsView()
.tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;Topics&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;house&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;topics&amp;#34;&lt;/span>)
MyRecallsView() .tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;My Recalls&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;person.crop.rectangle&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;myRecalls&amp;#34;&lt;/span>)
RecallsView() .tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;Recalls&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;list.dash&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;recalls&amp;#34;&lt;/span>)
AccountView()
.tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;My Account&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;person.crop.circle&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;account&amp;#34;&lt;/span>)</code></pre><p/></pre></div><p>That was it. After a rebuild my notifications brought me right to the page. For me the articles, when I actually followed all the details, worked perfectly. Below are the full examples.</p></p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift">@main<span style="color:#66d9ef">struct</span><span style="color:#a6e22e">TotalRecallsIoApp</span>: App {
@UIApplicationDelegateAdaptor(AppDelegate.<span style="color:#66d9ef">self</span>)<span style="color:#66d9ef">var</span> appDelegate<pre><code>&lt;span style="color:#66d9ef">let&lt;/span> notificationManager = NotificationManager()
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">setUpdNotificationManager&lt;/span>() {
appDelegate.notificationManager = notificationManager
}
&lt;span style="color:#66d9ef">var&lt;/span> body: some Scene {
&lt;span style="color:#66d9ef">let&lt;/span> authState = AuthState()
WindowGroup {
HomeView()
.environmentObject(authState)
.environmentObject(notificationManager)
.onAppear {
setUpdNotificationManager()
}
}
}</code></pre><p>}</p><p><span style="color:#66d9ef">class</span><span style="color:#a6e22e">NotificationManager</span>: ObservableObject {<span style="color:#66d9ef">static</span><span style="color:#66d9ef">let</span> shared = NotificationManager()
@Published<span style="color:#66d9ef">var</span> pageToNavigationTo : String?
}</code></pre></div><p>Then the AppDelegate</p></p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift">@available(iOS<span style="color:#ae81ff">10</span>,<span style="color:#f92672">*</span>)<span style="color:#66d9ef">extension</span><span style="color:#a6e22e">AppDelegate</span> : UNUserNotificationCenterDelegate {<p><span style="color:#75715e">// Receive displayed notifications for iOS 10 devices.</span><span style="color:#66d9ef">func</span><span style="color:#a6e22e">userNotificationCenter</span>(<span style="color:#66d9ef">_</span> center: UNUserNotificationCenter,
willPresent notification: UNNotification,
withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {<span style="color:#66d9ef">let</span> userInfo = notification.request.content.userInfo</p><pre><code>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> messageID = userInfo[gcmMessageIDKey] {
print(&lt;span style="color:#e6db74">&amp;#34;Message ID: &lt;/span>&lt;span style="color:#e6db74">\(&lt;/span>messageID&lt;span style="color:#e6db74">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
}
print(userInfo)
&lt;span style="color:#75715e">// Change this to your preferred presentation option&lt;/span>
completionHandler([[.banner, .badge, .sound]])</code></pre><p>}</p><pre><code>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">application&lt;/span>(&lt;span style="color:#66d9ef">_&lt;/span> application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {
}
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">application&lt;/span>(&lt;span style="color:#66d9ef">_&lt;/span> application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {
}</code></pre><p><span style="color:#66d9ef">func</span><span style="color:#a6e22e">userNotificationCenter</span>(<span style="color:#66d9ef">_</span> center: UNUserNotificationCenter,
didReceive response: UNNotificationResponse,
withCompletionHandler completionHandler: @escaping () -> Void) {<span style="color:#66d9ef">let</span> userInfo = response.notification.request.content.userInfo</p><pre><code>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> messageID = userInfo[gcmMessageIDKey] {
print(&lt;span style="color:#e6db74">&amp;#34;Message ID from userNotificationCenter didReceive: &lt;/span>&lt;span style="color:#e6db74">\(&lt;/span>messageID&lt;span style="color:#e6db74">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
}
print(userInfo)
print(&lt;span style="color:#e6db74">&amp;#34;DEBUG: User clicks on notifications&amp;#34;&lt;/span>)
notificationManager?.pageToNavigationTo = &lt;span style="color:#e6db74">&amp;#34;myRecalls&amp;#34;&lt;/span>
print(&lt;span style="color:#e6db74">&amp;#34;DEBUG: Done setting page &lt;/span>&lt;span style="color:#e6db74">\(&lt;/span>notificationManager?.pageToNavigationTo&lt;span style="color:#e6db74">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
completionHandler()</code></pre><p>}
}</code></pre></div><p>Finally the page with TabView</p></p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift"><span style="color:#66d9ef">import</span><span style="color:#a6e22e">SwiftUI</span><span style="color:#66d9ef">import</span><span style="color:#a6e22e">Firebase</span><p><span style="color:#66d9ef">struct</span><span style="color:#a6e22e">HomeView</span>: View {</p><pre><code>@EnvironmentObject &lt;span style="color:#66d9ef">var&lt;/span> authState: AuthState
@EnvironmentObject &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> notificationManager: NotificationManager
@State &lt;span style="color:#66d9ef">var&lt;/span> email = &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
@State &lt;span style="color:#66d9ef">var&lt;/span> password = &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
@State &lt;span style="color:#66d9ef">var&lt;/span> signedIn = &lt;span style="color:#66d9ef">false&lt;/span>
@State &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> tabSelection = &lt;span style="color:#e6db74">&amp;#34;topics&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> body: some View {
ZStack {
VStack {
&lt;span style="color:#66d9ef">if&lt;/span>(authState.signedIn) {
TabView(selection: &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>tabSelection) {
TopicsParentsView()
.tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;Topics&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;house&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;topics&amp;#34;&lt;/span>)
MyRecallsView() .tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;My Recalls&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;person.crop.rectangle&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;myRecalls&amp;#34;&lt;/span>)
RecallsView() .tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;Recalls&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;list.dash&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;recalls&amp;#34;&lt;/span>)
AccountView()
.tabItem {
Label(&lt;span style="color:#e6db74">&amp;#34;My Account&amp;#34;&lt;/span>, systemImage: &lt;span style="color:#e6db74">&amp;#34;person.crop.circle&amp;#34;&lt;/span>)
}
.tag(&lt;span style="color:#e6db74">&amp;#34;account&amp;#34;&lt;/span>)
}
} &lt;span style="color:#66d9ef">else&lt;/span> {
LoginView()
}
}
.onAppear {
authState.signedIn = authState.isSignedIn
}
.onReceive(notificationManager.&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>pageToNavigationTo) {
&lt;span style="color:#66d9ef">guard&lt;/span> &lt;span style="color:#66d9ef">let&lt;/span> notificationSelection = $0 &lt;span style="color:#66d9ef">else&lt;/span> { &lt;span style="color:#66d9ef">return&lt;/span> }
&lt;span style="color:#66d9ef">self&lt;/span>.tabSelection = notificationSelection
}
}
}</code></pre><p>}</p><p><span style="color:#66d9ef">struct</span><span style="color:#a6e22e">HomeView_Previews</span>: PreviewProvider {</p><pre><code>@EnvironmentObject &lt;span style="color:#66d9ef">var&lt;/span> firebaseManager: FirebaseManager
&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> previews: some View {
&lt;span style="color:#66d9ef">let&lt;/span> authState = AuthState()
HomeView().environmentObject(authState)
}</code></pre><p>}</code></pre></div></p></description><tags>swiftui, swift, note2self</tags></item><item><title>Get Fixture Put Fixture Helpers for Laravel</title><link>https://alfrednutile.info/posts/get_put/</link><pubDate>Sat, 25 Dec 2021 06:32:07 -0400</pubDate><guid>https://alfrednutile.info/posts/get_put/</guid><description><p>I do a lot with fixtures when testing. This means I put files in the<code>tests/fixtures</code> folder that represet the JSON of what ever I am testing. For example maybe I hit an
API that returns</p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-json" data-lang="json">{<span style="color:#f92672">"foo"</span>:<span style="color:#e6db74">"bar"</span>
}</code></pre></div><p>And when I mock that API response I want to have that ready for me to use.</p><p>I then save it to the folder<code>tests/fixtures/foo.json</code> and can just use it.</p><p>To do that I just do the following.</p><h2 id="setup-a-helpersphp-file-in-your-app">Setup a helpers.php file in your app</h2><p>Add the file<code>app/helpers.php</code> for now with<code>&lt;?php</code> on top of it.</p><pre><code>&lt;?php</code></pre><p>Not to exciting yet!</p><p>Then add it to<code>composer.json</code></p><pre><code>File: composer.json
38: "autoload-dev": {
39: "psr-4": {
40: "Tests\\": "tests/"
41: },
42: "files": [
43: "app/helpers.php"
44: ]
45: },</code></pre><p>Now run<code>composer dump</code> and you are ready to add helpers to your app.</p><h2 id="add-get-and-put-helpers">Add get and put helpers</h2><p>To that file I add the getter and putter(?):</p><pre><code>&lt;?php<p>use Illuminate\Support\Facades\File;</p><p>if (!function_exists("put_fixture")) {
function put_fixture($file_name, $content = [], $json = true)
{
if ($json) {
$content = json_encode($content, 128);
}
File::put(
base_path(sprintf("tests/fixtures/%s", $file_name)),
$content
);
return true;
}
}</p><p>if (!function_exists("get_fixture")) {
function get_fixture($file_name)
{
$results = File::get(base_path(sprintf(
"tests/fixtures/%s",
$file_name
)));
return json_decode($results, true);
}
}</code></pre><p>and I make the folder<code>tests/fixtures</code></p></p><p>And now in my tests I can do this:</p><pre><code>put_fixture('meta_data.json', $response_from_api_as_array);</code></pre><blockquote><p>NOTE: Many apis have good docs that sometimes show a JSON response I can save. But somtimes I want a real response to save it so I hit the api ONCE from my test
and mock it from then on</p></blockquote><p>and I can use that later just like this</p><pre><code>get_fixture('meta_data.json', $response_from_api_as_array);</code></pre><p>This will simply put a file and get that file<code>tests/fixtures/meta_data.json</code></p><p>And the file will be JSON for example:</p><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-json" data-lang="json">{<span style="color:#f92672">"foo"</span>:<span style="color:#e6db74">"bar"</span>
}</code></pre></div></description><tags>laravel, php, note2self, helpers</tags></item><item><title>Using Python Lambda behind and ALB</title><link>https://alfrednutile.info/posts/266/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/266/</guid><description><p>Just a quick note to self about ALB and Lambda. When using Lambda behind and ALB for routing your response has to be formatted properly else you will get a 502.</p><p><a href="https://pypi.org/project/alb-response">https://pypi.org/project/alb-response/</a> solved this problem.</p><pre><code>from alb_response import alb_response<p>def lambda_handler(event, context):</p><pre><code>response_dict = process_the_event(event)
return alb_response(
http_status=200,
json=response_dict,
is_base64_encoded=False,
)</code></pre><p/></pre><p>The results are easy enough to do by hand but I had a bit of time really finding out the format to respond with other than JavaScript and that casing there was a bit confusing.</p></p></description><tags>aws, serverless, note2self</tags></item><item><title>Lambda Tips</title><link>https://alfrednutile.info/posts/264/</link><pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/264/</guid><description><p>@WIP</p><h2 id="taking-advantage-of-a-running-lambda-function-and-its-state">Taking advantage of a running Lambda function and it&rsquo;s state</h2><p><a href="https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/">https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/</a> under the section<strong>Lambda function</strong> has a nice &ldquo;trick&rdquo; of setting above the class<code>app = None</code></p><p>then later on it will see if that is set</p><pre><code>def lambda_handler(event, context):
global app
# Initialize app if it doesn't yet exist
if app is None:
print("Loading config and creating new MyApp...")
config = load_config(full_config_path)
app = MyApp(config)<pre><code>return &amp;quot;MyApp config is &amp;quot; + str(app.get_config()._sections)</code></pre><p/></pre><p>If it is set it will not try to set it again but take advantage of the state and use it.</p></p><h2 id="keep-warm">Keep Warm</h2><p><a href="https://read.acloud.guru/how-to-keep-your-lambda-functions-warm-9d7e1aa6e2f0">https://read.acloud.guru/how-to-keep-your-lambda-functions-warm-9d7e1aa6e2f0</a></p><p>You can set a bunch of schedulers and your Lambda function can check for the context of the request. If it is a scheduler event then just reply OK otherwise it should do what it normally would do.</p><pre><code>import boto3
from config import Config<p>class KeepAwake:
def<strong>init</strong>(self):
""" keey awake """
self.config = Config()
self.region = self.config.region
self.app_env = self.config.app_env
self.client = boto3.client(&lsquo;lambda&rsquo;, region_name=self.region)
self.functions = [
"foo",
"bar",
]</p><pre><code>def run(self):
&amp;quot;&amp;quot;&amp;quot; interate over lambda functions &amp;quot;&amp;quot;&amp;quot;
for lam in self.functions:
print(&amp;quot;Invoking &amp;quot;, lam)
self.client.invoke(
FunctionName=lam,
InvocationType=&amp;quot;Event&amp;quot;
)
print(&amp;quot;Invoked &amp;quot;, lam)</code></pre><p/></pre><p>Is another way to look around and call those functions.</p></p></description><tags>note2self, aws, python</tags></item><item><title>Laravel Filter Scope on a Model</title><link>https://alfrednutile.info/posts/255/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/255/</guid><description><p>So I find myself writing searchable pages that, via an API or what not, someone can filter the page by different fields on the model.<img src="https://dl.dropboxusercontent.com/s/qm3semea1hzutuk/filter_example.png?dl=0" alt=""/><p>This can end up being a Controller class that does a lot of filters off the Request. Or it can be a Repository class that abstracts the business logic into one place for several related models.</p><p>But in many cases it really is just one Model being filtered. And if I add a Scope<code>scopeFilter</code> and pass in the Request as an array I can iterate over that array and call to other existing scopes on the model.</p><pre><code> /**
* Return only active models
*
* @param object $query
* @param array $filters
* @return Builder
*/
public function scopeFilters($query, $filters)
{
unset($filters['page']);
foreach ($filters as $scope => $value) {
$scope = camel_case($scope);
$query = $this->{$scope}($value);
}
return $query;
}</code></pre><p>This allows me to use those scopes in other places as well.</p><p>For example a request to active policies for repo_name &ldquo;foo&rdquo;:</p><pre><code>curl https://foo.test/api/policies?active=1&amp;repo_name=foo</code></pre><p>The Controller can do something simple like this:</p><pre><code> public function __invoke(Request $request)
{
try {
$results = Subscriber::filters($request->all())->orderBy("repo_name")->paginate(20);
return response()->json($results, 200);
} catch (\Exception $e) {
\Log::error($e);
return response()->json(null, 400);
}
}</code></pre><p>And the model can handle it with these other scopes, that can be used by themselves as well:</p><pre><code> /**
* Scope to get by repo_name
*
* @param object $query
* @param string $repo_name
* @return Builder
*/
public function scopeRepoName($query, $repo_name)
{
return $query->where("repo_name", $repo_name);
}<pre><code> /**
* Return only active models
*
* @param object $query
* @return Builder
*/
public function scopeActive($query, $state = 1)
{
if ($state == 'all') {
$state = [0,1];
}
$state = array_wrap($state);
return $query-&amp;gt;whereIn(&amp;quot;active&amp;quot;, $state);
}</code></pre><p/></pre><p>For some time I kept this logic out of models but recently I been trying to use models as more of a place to store this sort of model related logic.</p></p><p>If two models need to work together then maybe a Business class could help out to glue them together but still something to consider.</p><p>I will show in the next post one model subscribing another model.</p></description><tags>laravel, note2self</tags></item><item><title>Valet Laravel 7.1 and 7.2</title><link>https://alfrednutile.info/posts/253/</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/253/</guid><description>..</description><tags>laravel, note2self</tags></item><item><title>Python3 Fixtures</title><link>https://alfrednutile.info/posts/252/</link><pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/252/</guid><description><p>Just a reminder using pickle I can easily make fixtures for testing.</p><p>When I get results from AWS SDK for example I can just</p><pre><code>import pickle<pre><code>with open(&amp;quot;fixtures/describe_task_defination.pickle&amp;quot;, 'wb') as fixture:
pickle.dump(self.stored_state_to_save, fixture)</code></pre><p/></pre><p>Then when I want to feed it back in my test</p></p><pre><code>import pickle
from unittest import TestCase
from unittest.mock import patch
from unittest import mock
import pickle
from task_image import TaskImage
def getFixture(name):
with open("fixtures/" + name, 'rb') as fixture:
return pickle.load(fixture)
class TestTaskImage(TestCase)
def setUp(self):
self.task_image = TaskImage()
@patch('task_image.TaskImage._getTaskDefinition', return_value=getFixture('describe_task_defination.pickle'))
@patch('task_image.TaskImage._getService', return_value=getFixture('describe_services.pickle'))
def test_gets_service(self, _getService, _getTaskDefinition):
self.results = self.task_image.handle('default', 'cat-teamdocs-production-122')
self.assertEqual('cat-teamdocs:latest', self.results)</code></pre><p>Pretty easy and then I am not hitting the service</p></description><tags>note2self, python3, testing</tags></item><item><title>Vuex External File</title><link>https://alfrednutile.info/posts/250/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/250/</guid><description><p>Setup Vuex with external file<a href="https://vuex.vuejs.org/installation.html">https://vuex.vuejs.org/installation.html</a></p><p>But after this make a file in the<code>resources/assets/js</code> called<code>store.js</code> then set it up as needed
Here I will have one loading state</p><pre><code>export default {
state: {
loading: true,
},
getters: {
loading: state => {
return state.loading;
},
},
mutations: {
loading(state, loading) {
state.loading = loading;
}
}
};</code></pre><p>now import it into your app.js</p><p><code>import store from './store';</code></p><p>and</p><pre><code>var app = new Vue({
mixins: [require('spark')],
store: new Vuex.Store(store),
router
});</code></pre><p>That should do it. I do load some state in my<code>resources/views/layouts/app.blade.php</code></p><pre><code> &lt;script>
window.Laravel = {!! json_encode([
"apiToken" => auth()->user()->api_token ?? null
]) !!};
&lt;/script></code></pre><p>Just to help with some basic stuff</p></description><tags>note2self, vuejs, laravel</tags></item><item><title>Windows Dev Box Try 2 2018</title><link>https://alfrednutile.info/posts/247/</link><pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/247/</guid><description><p>Going to list somethings as I go.</p><p>The Mac, in spite of Apple, is a great developer experience, here is to hoping the Windows, with the help of Microsoft, grows to be better and better as the improve it via user feedback to make it a great development box.</p><h2 id="links">Links</h2><p>This started it all<a href="https://char.gd/blog/2017/how-to-set-up-the-perfect-modern-dev-environment-on-windows">https://char.gd/blog/2017/how-to-set-up-the-perfect-modern-dev-environment-on-windows</a></p><p><a href="https://daverupert.com/2018/04/developing-on-windows-with-wsl-and-visual-studio-code/">Webdev on Windows with WSL and VS Code</a></p><h2 id="npm-and-composer-install-take-a-long-time">NPM and Composer install take a long time</h2><p>Some of this is the Windowsantimalware running. If you go to Windows Security -> Exclusion you can have it not search this folder.
More info<a href="https://blog.emsisoft.com/en/28620/antimalware-service-executable/">https://blog.emsisoft.com/en/28620/antimalware-service-executable/</a></p><h2 id="local-php">Local PHP</h2><p>This one works best for me. I tried Valet etc just go lucky with this one<a href="https://medium.freecodecamp.org/setup-a-php-development-environment-on-windows-subsystem-for-linux-wsl-9193ff28ae83">https://medium.freecodecamp.org/setup-a-php-development-environment-on-windows-subsystem-for-linux-wsl-9193ff28ae83</a></p><p>Simple vhost file:</p><pre><code>&lt;VirtualHost *:80>
ServerName APP_NAME.test
ServerAdmin foo@foo.com
DocumentRoot /var/www/devroot/APP_NAME/public
Redirect permanent / https://APP_NAME.test/
&lt;Directory /var/www/>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
&lt;/Directory><pre><code> ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined</code></pre><p>&lt;/VirtualHost>
&lt;VirtualHost *:443>
ServerName APP_NAME.test
ServerAdmin<a href="mailto:foo@foo.com">foo@foo.com</a>
DocumentRoot /var/www/devroot/APP_NAME/public
SSLEngine on
SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem
SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
&lt;Directory /var/www/>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
&lt;/Directory></p><pre><code> ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined</code></pre><p>&lt;/VirtualHost></code></pre><p>Make sure to run:</p></p><pre><code>sudo a2enmod ssl
sudo a2enmod rewrite
service apache2 restart</code></pre><h2 id="mariadb">MariaDB</h2><p>Get the latest one installed so you have JSON fields etc<a href="https://websiteforstudents.com/upgrading-mariadb-from-10-0-to-10-1-to-10-2-on-ubuntu-16-04-17-10/">here</a></p><p>But see bug in section<code>apt-key</code></p><p>If you get this Linux error<code>INSTALL PLUGIN unix_socket SONAME 'auth_socket';</code> checkout<a href="https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/">https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/</a></p><p>Trouble with root connecting to 127.0.0.1</p><p>Connect to mysql on localhost and run</p><pre><code>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1';
FLUSH PRIVILEGES;</code></pre><p>Then set /etc/mysql/my.cnf to</p><pre><code>skip-name-resolve = 1
bind-address = 0.0.0.0</code></pre><p>service mysql restart</p><h2 id="apt-key">APT-KEY</h2><p>This will not work</p><pre><code>connecting dirmngr at '/tmp/apt-key-gpghome.L0JTeGaLOf/S.dirmngr' failed: IPC connect call failed</code></pre><p>So run this instead</p><pre><code>curl -sL "http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0xF1656F24C74CD1D8" | sudo apt-key add</code></pre><p>Putting the key in the search area. [https://github.com/Microsoft/WSL/issues/3286#issuecomment-395980628](Putting the key in the search area.<a href="">https://github.com/Microsoft/WSL/issues/3286#issuecomment-395980628</a></p><h2 id="npm-errors">NPM Errors</h2><h4 id="linux-error-pngquant-failed-to-build-make-sure-that-libpng-dev-is-installed">linux Error: pngquant failed to build, make sure that libpng-dev is installed</h4><p>Fix is<a href="https://github.com/imagemin/pngquant-bin/issues/78">https://github.com/imagemin/pngquant-bin/issues/78</a></p><h2 id="exclude-wsl-folders-from-virus-scans">Exclude WSL folders from virus scans</h2><p><a href="https://www.howtogeek.com/261383/how-to-access-your-ubuntu-bash-files-in-windows-and-your-windows-system-drive-in-bash/">https://www.howtogeek.com/261383/how-to-access-your-ubuntu-bash-files-in-windows-and-your-windows-system-drive-in-bash/</a></p><p>For me this was more about my code folder</p><h2 id="apps">Apps</h2><h3 id="textexpanderhttpstextexpandercomprivacy-consenturldownload"><a href="https://textexpander.com/privacy-consent?url=https://alfrednutile.info/download/">TextExpander</a></h3><h3 id="1password">1Password</h3><p>Get this in the store to start</p><h3 id="windows-clipboard-historyhttpwwwwoxoneplugin"><a href="http://www.wox.one/plugin">Windows ClipBoard History</a></h3><p>And<strong>Alfred</strong> replacement! The plugin section has the history one</p><h3 id="vpn">VPN</h3><h3 id="screenshots">ScreenShots</h3><p>This is built into Windows and works really well. Using the Pen I can also just make the back button do it on the fly.</p><p><img src="https://previews.dropbox.com/p/thumb/AAYQD1rU0bAoJwCbA0YztAqgxlXYd53Eq9Uj-ipujds86cFrqR0ouT5U41L2B2OIwu6hpbsalFFuy0s5sqDSWtli6gBLpt-EdxeJdquRTrxAvrchaPDiDfXy3DCfe0N9k0-YZGw3HstQW7MtfHgCd7FvREqGF9x8X-VI68qWul32L-lrvAHBwh8qdGKaiSd4r22L6IPi1tEC5NsmOzsomtEqGdet5tqCTsRbKMo-BDBkQE6evcSUfhnJQTd2_OAfQzWFE3GOsgrM1NQGfTSDuBLQFe1dbhskhPQMkvFWIoEWCp4vmf0I9PvtB9IRNH0OqO6oa9PzetGPoXPRRsARpX2T/p.png?size_mode=5" alt=""/><h3 id="record-desktop">Record Desktop</h3><p>???</p><h3 id="mysqlworkbenchhttpsdevmysqlcomgetdownloadsmysqlguitoolsmysql-workbench-community-6310-winx64msi"><a href="https://dev.mysql.com/get/Downloads/MySQLGUITools/mysql-workbench-community-6.3.10-winx64.msi">MySQLWorkbench</a></h3><p>not pretty but does handle things well</p><h3 id="add-wsl-file-path-to-be-ignored-in-the-windows-defender-scanner">Add WSL File path to be ignored in the Windows defender scanner</h3><p><img src="https://dl.dropboxusercontent.com/s/5k1xpc2q7szahtr/exclude.png?dl=0" alt=""/></description><tags>windows, note2self</tags></item><item><title>Laravel Queue Restart and 'Why are my changes not showing up'</title><link>https://alfrednutile.info/posts/246/</link><pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/246/</guid><description><p>Just a note to self and others who have suffered this. If you are running queues locally, for what ever reason, then any changes you make in code you need to restart your queue daemon.</p><pre><code>php artisan queue:restart</code></pre><p>This will cause the daemon to look at a timestamp and restart if that is newer than before &ldquo;e.g. you ran the above. And this will force the in memory process to update itself from the latest code base.</p><p>Good luck!</p></description><tags>laravel, queues, note2self</tags></item><item><title>Query Strings and VueJS</title><link>https://alfrednutile.info/posts/244/</link><pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/244/</guid><description><p>Quick way to make the url reflect the query string so the user can share the url and filters.</p><p>This is component based VueJS building so not an SPA
But I still install<code>"vue-router": "^3.0.1"</code></p><p>And load it</p><pre><code>import VueRouter from 'vue-router';<p>Vue.use(VueRouter);</code></pre><p>The on the component I set a watch on the router.</p></p><pre><code> watch: {
$route(to, from) {
this.setModelFromQueryString();
this.search();
}
},</code></pre><p>In this case it will set the query strings then trigger the &ldquo;search&rdquo; to load the data into the page. This search becomes the go to to get state<p>when the page is loaded (as seen below) or when the users clicks “search”</p></p><p>Created kicks this off the state:</p><pre><code> created: function() {
this.setModelFromQueryString();
this.search();
},</code></pre><p>Here is<code>setModelFromQueryString</code>:</p><pre><code> setModelFromQueryString() {
this.params.forEach(param => {
this[param.model] = this.getParam(param.display_name);
});
},</code></pre><p>Make sure the model matches the state the user wants. The states or filters that I am trying to set are stored in data.</p><p>The data model stores theys keys and related model values that I want to focus on keeping and restoring:</p><pre><code> data() {
return {
params: [
{
model: 'stack_name',
display_name: 'stack_name'
},
{
model: 'project_name',
display_name: 'project_name'
},
{
model: 'current_page',
display_name: 'page'
},
{
model: 'language',
display_name: 'language'
},
{
model: 'search_name',
display_name: 'name'
}
],</code></pre><p>Now that the model is there I can iterate over these in a few other areas I will show below.</p><p>Page load, and search call the method<code>search</code> and this takes care of a few things</p><ul><li>make sure the the query string reflects the latest model, e.g. what the user set on the page form</li><li>updates the api url to have these params<code>this.getParams('/api/libraries')</code></li></ul><p>Here is search plus those methods:</p><pre><code>search() {
this.setQueryString();
this.loading = true;
axios
.get(this.getParams('/api/libraries'))
.then(results => {
this.libraries = results.data;
this.loading = false;
})
.catch(error => {
console.log(error);
$alerts.send('Error', 'Could not get next page', true);
});
},
getParams(prefix) {
let url_string = prefix + '?';
let query = [];
this.params.forEach(param => {
if (this[param.model]) {
let value = this[param.model];
let name = param.display_name;
query.push(`${name}=${value}`);
}
});
query = query.join('&amp;');
return `${url_string}${query}`;
},
getParam(param) {
return this.$router.history.current.query[param];
},
paginateFunction(page) {
this.current_page = page;
this.search();
},
setQueryString() { //This method builds up the url so the user will see the filter on page load based on their search
let items = {};<pre><code> this.params.forEach(param =&amp;gt; {
if (this[param.model] != undefined) {
items[param.display_name] = this[param.model];
}
});
this.$router.push({
query: items
});
},</code></pre><p/></pre><p><img src="https://dl.dropboxusercontent.com/s/lmnyjw7aub0ggb2/filters.gif?dl=0" alt=""/></p></description><tags>vuejs, note2self, laravel</tags></item><item><title>BrowserSync and Laravel</title><link>https://alfrednutile.info/posts/239/</link><pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/239/</guid><description><p>Quick reminder to take advantage of this amazing feature<a href="https://laravel.com/docs/5.6/mix#browsersync-reloading">https://laravel.com/docs/5.6/mix#browsersync-reloading</a></p><p>No more reloading your browser.</p><pre><code>yarn add browser-sync --dev</code></pre><p>then to your<code>webpack.mix.js</code> e.g. the domain of the site you are working on.</p><pre><code> mix.browserSync('foo.test');</code></pre><p>finally</p><pre><code>yarn run watch</code></pre><blockquote><p>Note turn off sourceMaps when running this else it can be kinda slow</p></blockquote></description><tags>laravel, note2self, vuejs</tags></item><item><title>GroupBy not Sorting by latest</title><link>https://alfrednutile.info/posts/240/</link><pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/240/</guid><description><p>Just to make this easy to find. I had a report to write which had numerous daily rows of the same related model data.
So in this cause I was tracking servers and security reports.</p><p>My reports where daily like this</p><table><thead><tr><th>id</th><th style="text-align:center">server_id</th><th style="text-align:right">failed</th><th>type</th></tr></thead><tbody><tr><td>1</td><td style="text-align:center">1</td><td style="text-align:right">1</td><td>security</td></tr><tr><td>2</td><td style="text-align:center">1</td><td style="text-align:right">1</td><td>testing</td></tr><tr><td>3</td><td style="text-align:center">1</td><td style="text-align:right">0</td><td>testing</td></tr></tbody></table><p>But a groupBy here on server_id would return ID 1 so it would appear as if it was still failing.</p><p>Adding</p><pre><code>$results = $results->whereRaw('ID IN ( select MAX(id) from reports GROUP BY server_id)');</code></pre><p>or double group by:</p><pre><code>$results = $results->whereRaw('ID IN ( select MAX(id) from reports GROUP BY server_id, type)');</code></pre><p>Did the trick to sort and group by that latest record, which<code>latest</code> did not do for me.</p></description><tags>laravel, note2self</tags></item><item><title>Troubleshoot Laravel Socialite and Github login</title><link>https://alfrednutile.info/posts/238/</link><pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/238/</guid><description><p>This has driven me mad too many times. Basically you will get very little feedback if there is any issue getting the token from Github.</p><p>The problem is in this method.</p><pre><code> public function user()
{
if ($this->hasInvalidState()) {
throw new InvalidStateException;
}<pre><code> $response = $this-&amp;gt;getAccessTokenResponse($this-&amp;gt;getCode());
$user = $this-&amp;gt;mapUserToObject($this-&amp;gt;getUserByToken(
$token = Arr::get($response, 'access_token')
));
return $user-&amp;gt;setToken($token)
-&amp;gt;setRefreshToken(Arr::get($response, 'refresh_token'))
-&amp;gt;setExpiresIn(Arr::get($response, 'expires_in'));
}</code></pre><p/></pre><p>This is in the<code>vendor/laravel/socialite/src/Two/AbstractProvider.php</code></p></p><p>So for example my real error was:</p><pre><code>array:3 [
"error" => "redirect_uri_mismatch"
"error_description" => "The redirect_uri MUST match the registered callback URL for this application."
"error_uri" => "https://developer.github.com/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/#redirect-uri-mismatch2"
]</code></pre><p>But this shows up overall as a token issue or as<code>GuzzleHttp\Exception\ClientException: Client error:</code>GET<a href="https://api.github.com/user?access_token=%60">https://api.github.com/user?access_token=`</a> resulted in a<code>401 Unauthorized</code> response:` so it is really hard to debug.</p><p>Here is to the next time I get this error to remind me where to<code>dd</code></p><p>Also the url gave it away too but by then it was gone:</p><pre><code>https://foo.te\st/login/github/callback?error=redirect_uri_mismatch&amp;error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application.&amp;error_uri=https%3A%2F%2Fdeveloper.github.com%2Fapps%2Fmanaging-oauth-apps%2Ftroubleshooting-authorization-request-errors%2F%23redirect-uri-mismatch&amp;state=foo</code></pre></description><tags>note2self, laravel</tags></item><item><title>Wrapping Libraries in Services JS</title><link>https://alfrednutile.info/posts/237/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/237/</guid><description><p>Just a note to self that when using libraries like<code>sweetalert</code> for example and then I want to convert to<code>sweetalert2</code>, it would have saved a lot of time to wrap it into a &ldquo;service&rdquo; and import that.</p><p>For example I made this js file</p><p><code>services/Alerts.js</code>:</p><pre><code>import swal from 'sweetalert2';<p>export default {</p><pre><code>send(title, message, error = false) {
swal(
{
type: error ? &amp;quot;error&amp;quot; : &amp;quot;success&amp;quot;,
title: title,
text: message
}
);
}</code></pre><p>}</code></pre><p>Then import it into the app or into the component that needs it.</p></p><pre><code>import Alerts from "./services/alerts.js";
window.$alerts = Alerts;</code></pre><p>And later on in that file</p><pre><code>let message = "Something went wrong with your token, please update it or email for support";
$alerts.alert("Error", message, true);</code></pre><blockquote/></description><tags>note2self</tags></item><item><title>Passing from Blade to VueJs</title><link>https://alfrednutile.info/posts/236/</link><pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/236/</guid><description><p>A lot of posts had<a href="https://medium.com/@m_ramsden/passing-data-from-laravel-to-vue-98b9d2a4bd23">this</a> style.</p><p>I ended up just needing this:</p><p><img src="https://dl.dropboxusercontent.com/s/huucm3vx4uyklq7/Screenshot%202018-02-23%2020.29.22.png?dl=0" alt=""/><p>The controller simply does this:</p><p><img src="https://dl.dropboxusercontent.com/s/qw7x7u7ayr7j441/Screenshot%202018-02-23%2020.29.52.png?dl=0" alt=""/></description><tags>laravel, note2self, vuejs</tags></item><item><title>Docker Laravel and Cron</title><link>https://alfrednutile.info/posts/234/</link><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/234/</guid><description><p>This to this post<a href="https://laracasts.com/discuss/channels/servers/run-the-scheduler-in-a-docker-image/replies/325422">here</a></p><p>for the idea.</p><p>Basically running cron in Docker is easy BUT once the Host had more than one Docker client cron stopped working. No clue why but to solve this I did two things</p><p>One made a script that was on the Docker Client</p><p><code>/scheduler.sh</code></p><pre><code>#!/bin/bash
php /app/artisan schedule:run --verbose --no-interaction >> /dev/null 2>&amp;1
sleep 60</code></pre><p>Then I did this in the<code>Dockerfile</code></p><pre><code>COPY scheduler.sh /
RUN chmod 755 /scheduler.sh</code></pre><p>Finally<code>supervisord</code> manages it:</p><pre><code>[supervisord]
nodaemon=true<p>[program:scheduler]
command=/scheduler.sh
autostart=true
autorestart=true
user=root
startsecs = 0
numprocs=1
redirect_stderr=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr</p><p/></pre><p>the<code>startsecs</code> allows it not to be seen as a failing script</p></p><h3 id="full-dockerfile">Full Dockerfile</h3><pre><code>FROM ubuntu:16.04<p>#https://github.com/shipping-docker/dockerized-app/blob/master/docker/app/Dockerfile
MAINTAINER Alfred Nutile</p><p>RUN apt-get update<br>
&amp;&amp; apt-get install -y locales<br>
&amp;&amp; locale-gen en_US.UTF-8</p><p>ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8</p><h2 id="had-to-leave-both-update-requests">had to leave both update requests</h2><p>RUN apt-get update<br>
&amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install -y cron anacron nginx curl zip unzip git software-properties-common supervisor sqlite3<br>
&amp;&amp; add-apt-repository -y ppa:ondrej/php<br>
&amp;&amp; apt-get update<br>
&amp;&amp; apt-get install -y screen vim php7.1-fpm php7.1-cli php7.1-mcrypt php7.1-gd php7.1-mysql<br>
php7.1-pgsql php7.1-imap php-memcached php7.1-mbstring php7.1-xml php7.1-curl<br>
php7.1-sqlite3 php7.1-xdebug imagemagick php7.1-intl php7.1-zip<br>
&amp;&amp; php -r "readfile(&lsquo;<a href="http://getcomposer.org/installer');">http://getcomposer.org/installer');</a>" | php &ndash; &ndash;install-dir=/usr/bin/ &ndash;filename=composer<br>
&amp;&amp; mkdir /run/php<br>
&amp;&amp; apt-get remove -y &ndash;purge software-properties-common<br>
&amp;&amp; apt-get -y autoremove<br>
&amp;&amp; apt-get clean<br>
&amp;&amp; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*</p><p>RUN mkdir /etc/nginx/ssl
COPY nginx.crt /etc/nginx/ssl/nginx.crt
COPY nginx.key /etc/nginx/ssl/nginx.key
COPY default /etc/nginx/sites-available/default
COPY php-fpm.conf /etc/php/7.1/fpm/php-fpm.conf
COPY xdebug.ini /etc/php/7.1/mods-available/xdebug.ini</p><h1 id="2018-02-16-09-13-39">2018 02 16 09 13 39</h1><p>COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY start-container /usr/local/bin/start-container
RUN chmod +x /usr/local/bin/start-container</p><h2 id="deal-with-cron-issues">Deal with cron issues</h2><p>COPY scheduler.sh /
RUN chmod 755 /scheduler.sh
CMD [ "start-container" ]</code></pre></p></description><tags>laravel, note2self, docker</tags></item><item><title>Pusher and Laravel Updates</title><link>https://alfrednutile.info/posts/233/</link><pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/233/</guid><description><p>Getting error &ldquo;Did you forget to specify the cluster when creating the Pusher instance&rdquo;</p><p>Then need to set<code>config/broadcasting.php</code>:</p><pre><code> 'pusher' => [
'driver' => 'pusher',
'key' => env('PUSHER_KEY'),
'secret' => env('PUSHER_SECRET'),
'app_id' => env('PUSHER_APP_ID'),
'options' => [
//
],
],</code></pre><p>to</p><pre><code> 'pusher' => [
'driver' => 'pusher',
'key' => env('PUSHER_KEY'),
'secret' => env('PUSHER_SECRET'),
'app_id' => env('PUSHER_APP_ID'),
'options' => [
"cluster" => 'us2',
"encrypted" => true
],
],</code></pre><p>And if still calling pusher manually in your js update to be:</p><pre><code> $window.client = new Pusher($window.pusher_key, {
cluster: 'us2',
encrypted: true
});<pre><code> var pusher = $pusher($window.client);</code></pre><p/></pre><p>the above depends on how are you putting the pusher info into $window but make sure to add the cluster and encryption</p></p><blockquote><p>NOTE yours may not be<strong>us2</strong></p></blockquote><p><img src="https://dl.dropboxusercontent.com/s/eu96h23ko3034q2/pusher_cluster.png?dl=0" alt=""/></description><tags>laravel, note2self</tags></item><item><title>Dusk and Production (with Dusk disabled)</title><link>https://alfrednutile.info/posts/232/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/232/</guid><description><pre><code>In DatabaseServiceProvider.php line 78:
Class 'Faker\Factory' not found</code></pre><p>I had a ton if issues getting dusk on production, especially since production would run</p><pre><code>composer install --no-dev --prefer-dist --no-interaction</code></pre><p>To get around this issue I had to do a few things</p><p>One, if you are stuck and can not even run php artisan on the server:</p><pre><code>rm bootstrap/cache/services.php
rm bootstrap/cache/packages.php</code></pre><p>Two, turn off auto discovery for Dusk and just add it to the app/Providers/AppServiceProvider.php</p><pre><code> public function register()
{
if ($this->app->environment('local', 'testing')) {
$this->app->register(DuskServiceProvider::class);
}
}</code></pre><p>and in<code>composer.json</code></p><pre><code> "extra": {
"laravel": {
"dont-discover": [
"laravel/dusk"
]
}
},</code></pre><p>Now if you still get a Faker error as I was let&rsquo;s move that up in our composer file:</p><pre><code> "fzaninotto/faker": "^1.7"
},
"require-dev": {
"mockery/mockery": "0.9.*",</code></pre><p>Okay so now you are ready.</p><p>As far as Travis goes I run this on the before_deploy</p><pre><code>before_deploy:
- rm .env
- export APP_ENV=production
- php artisan clear-compiled
- composer install --no-dev --prefer-dist --no-interaction</code></pre><p>And prevents the error while at the same time cleanup up my code before CodeDeploy bundles it up for deployment.</p></description><tags>laravel, note2self</tags></item><item><title>Testing Laravel API, Spark with Authentication</title><link>https://alfrednutile.info/posts/231/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/231/</guid><description><p>Just a reminder to self, if I want to test an API I made and need to pass and<code>api_token</code></p><pre><code>&lt;?php<p>namespace Tests\Feature;</p><p>use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;
use App\Quote;
use Laravel\Spark\Repositories\TokenRepository;</p><p>class QuoteControllerTest extends TestCase
{</p><pre><code>use RefreshDatabase;
public function testGettingAQuoteUsingToken()
{
$user = factory(\App\User::class)-&amp;gt;create();
$team = factory(\App\Team::class)-&amp;gt;create();
$team-&amp;gt;users()-&amp;gt;attach($user-&amp;gt;id, ['role' =&amp;gt; &amp;quot;member&amp;quot;]);
$quote = factory(\App\Quote::class)-&amp;gt;create([
'team_id' =&amp;gt; $team-&amp;gt;id,
'posted_by' =&amp;gt; $user-&amp;gt;id
]);
$token = new TokenRepository();
$token = $token-&amp;gt;createToken(
$user,
'get_quote',
[]
)-&amp;gt;token;
$this-&amp;gt;json('GET', &amp;quot;/api/teams/{$team-&amp;gt;id}/quotes/random?api_token={$token}&amp;quot;)
-&amp;gt;assertStatus(200)-&amp;gt;assertJson([
'quote' =&amp;gt; $quote-&amp;gt;quote,
'by' =&amp;gt; $quote-&amp;gt;by,
'posted_by' =&amp;gt; [
'email' =&amp;gt; $user-&amp;gt;email,
'name' =&amp;gt; $user-&amp;gt;name,
'avatar' =&amp;gt; $user-&amp;gt;photo_url
]
]);
}</code></pre><p/></pre><p>Also I made a<code>database/factories/TeamFactory.php</code> file:</p></p><pre><code>&lt;?php
use Faker\Generator as Faker;
use App\User;
use App\Team;
$factory->define(Team::class, function (Faker $faker) {
return [
"name" => $faker->word,
"owner_id" => function() {
return factory(User::class)->create()->id;
}
];
});</code></pre><blockquote/></description><tags>laravel, note2self, testing</tags></item><item><title>Example of Making Documentation in Markdown with PDF Output</title><link>https://alfrednutile.info/posts/230/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/230/</guid><description><p>Many of the sites I make have a need for a Support page for staff to know how to do things like add content, manage users etc. This article will cover how I go about writing my help docs in Markdown and then displaying it on the website with an option to print as PDF.</p><h2 id="writing-markdown">Writing MarkDown</h2><p>To begin with, I made the help doc in mine. I made a sample one<a href="https://raw.githubusercontent.com/alnutile/alsblog5/master/docs/help.md">here</a></p><p>I save this to the root of the application<code>docs/help.md</code></p><h2 id="output-the-help-page-markdown-to-html">Output the Help Page Markdown to HTML</h2><p>So there are two things I want out of this, a TOC and the Markdown.</p><p>First I will install the needed libraries.</p><pre><code>composer require cebe/markdown:~1.1.1 laravelista/sherlock</code></pre><p>Then I make a controller<code>php artisan make:controller HelpController</code> and add a method<code>show</code>:</p><pre><code>&lt;?php<p>namespace App\Http\Controllers;</p><p>use Illuminate\Http\Request;
use cebe\markdown\GithubMarkdown;
use Laravelista\Sherlock\Sherlock;</p><p>class HelpController extends Controller
{</p><pre><code>public function show(GithubMarkdown $markdown_writer, Sherlock $sherlock)
{
$path = base_path(&amp;quot;docs/help.md&amp;quot;);
$help = \File::get($path);
$toc = $sherlock-&amp;gt;deduct($help)-&amp;gt;getToc();
$help = $markdown_writer-&amp;gt;parse($help);
$help = $toc . '&amp;lt;hr&amp;gt;' . $help;
return view('help', compact(&amp;quot;help&amp;quot;));
}</code></pre><p>}</code></pre><pre><code>Route::get("help", "HelpController@show")->name("help");</code></pre><p>adding to my<code>web.php</code> file:
And a simple blade template to show the content:</p></p><pre><code>@extends('layouts.app')
&lt;!-- -->
@section('content')
&lt;div class="panel panel-default">
@section('title', 'Example Help')
&lt;div class="panel-heading">Example Help Output&lt;/div>
&lt;div class="panel-body">
{!! $help !!}
&lt;/div>
&lt;/div>
@endsection</code></pre><p>You can see the output<a href="https://alfrednutile.info/help">here</a></p><p>The author of the Sherlock library suggests a different way to inject the info but I opted for this. It will make more sense when I do the PDF output.</p><p>On the top of that page is a PDF link here is how I can provide that as well.</p><h2 id="output-to-pdf">Output to PDF</h2><p>Install the needed library.</p><pre><code>composer require barryvdh/laravel-dompdf</code></pre><blockquote><p>note I did have to install php7.1-gd and php7.1-dom php7.1-opcache</p></blockquote><p>adding to my<code>web.php</code> file:</p><pre><code>Route::get("pdf", "HelpController@pdf")->name("pdf");</code></pre><p>And update the controller to have a pdf method:</p><pre><code> public function pdf(GithubMarkdown $markdown_writer, Sherlock $sherlock)
{
$path = base_path("docs/help.md");
$help = \File::get($path);
$toc = $sherlock->deduct($help)->getToc();<pre><code> $help = $markdown_writer-&amp;gt;parse($help);
$help = $toc . '&amp;lt;hr&amp;gt;' . $help;
return \PDF::loadHTML($help)-&amp;gt;stream();
}</code></pre><p/></pre><blockquote/><p>Note: this is a good time to move the injected Classes into a<code>__costructor</code> since they are using in two methods in the same class</p></blockquote><p>Alright, now when you click the link o the help page it will output an inline PDF.</p></description><tags>laravel, note2self</tags></item><item><title>VueJS Transition Helper</title><link>https://alfrednutile.info/posts/228/</link><pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/228/</guid><description><p>There are docs on how to get a Transition to take effect when an item loads<a href="https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components">https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components</a></p><p>But I was not having much luck with this using<a href="https://uiv.wxsm.space/carousel">https://uiv.wxsm.space/carousel</a>.</p><p>I ended up making a quick helper function to keep it from looking like exploded elements.</p><p>You can see the results of this change here</p><p><img src="https://dl.dropboxusercontent.com/s/osmd4p5zor2jgah/featured_blog.gif?dl=0" alt=""/><p>So the steps followed per the docs above for the most part.</p><p>Add to my scss file:</p><pre><code>
.ibox-content.text-center.carousel {
min-height: 400px;
}<p>.fade-enter-active, .fade-leave-active {
transition: opacity .5s;
}
.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {
opacity: 0;
}</code></pre><p>Make a<code>TransitionHelper.vue</code> componenent:</p></p><pre><code>&lt;template>
&lt;transition name="fade">
&lt;div v-show="show" >
&lt;slot>&lt;/slot>
&lt;/div>
&lt;/transition>
&lt;/template>
&lt;script>
export default {
data() {
return {
show: false
};
},
mounted() {
this.show = true;
}
};
&lt;/script></code></pre><p>Then added to my<code>app.js</code></p><pre><code>Vue.component('transition-helper', require('./components/TransitionHelper.vue'));</code></pre><p>Finally wrapped my blade file output in this helper.</p><pre><code> &lt;transition-helper style="display: none;">
&lt;carousel class="homepage-featured-carousel" :indicators="false" :controls="true" :interval="0">
@foreach($featured_documents->chunk(6) as $chunk)
&lt;slide>
&lt;div class="row-fluid">
@foreach($chunk as $item)
&lt;div class="col-xs-2">
&lt;div class="ibox float-e-margins homepage-featured-item">
&lt;div class="ibox-title">
&lt;img class="img-responsive" src="images/ces/image_placeholder.svg" alt="">
&lt;/div>
&lt;div class="ibox-content"></code></pre><p>You can see the<code>display:none</code> kicking in before the page loads<code>js</code> etc keeping it well hidden.<p>Then once it is all loaded and we are ready I show it and transition it in.</p></p></description><tags>vuejs, note2self</tags></item><item><title>Laravel Asset Notes WIP</title><link>https://alfrednutile.info/posts/227/</link><pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/227/</guid><description><p>This is just a reminder area of all the minor details as I find them that I need to remember</p><h2 id="fontawesome">FontAwesome</h2><pre><code>yarn add font-awesome</code></pre><p>Then in my<code>resources/assets/sass/app.scss</code></p><pre><code>// Fonts
@import url("https://fonts.googleapis.com/css?family=Raleway:300,400,600");
// Variables
@import "variables";
// Bootstrap
@import "~bootstrap-sass/assets/stylesheets/bootstrap";
@import "~font-awesome/css/font-awesome";</code></pre><p>My webpack is the default</p><pre><code>mix.js('resources/assets/js/app.js', 'public/js')
.sass('resources/assets/sass/app.scss', 'public/css');</code></pre><p>set to go!</p><p>If using Less</p><pre><code>#resources/assets/less/app.less
@import "./../../../node_modules/font-awesome/less/font-awesome";</code></pre></description><tags>note2self, laravel, assets, wip</tags></item><item><title>PostMark SMTP for sending Notifications and Password Resets</title><link>https://alfrednutile.info/posts/226/</link><pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/226/</guid><description><p>I have been using PostMark for years<a href="https://postmarkapp.com">https://postmarkapp.com</a>
for sending emails, e.g. password reset and more.</p><p>They have an API but to get going with SMTP all the info is<a href="https://postmarkapp.com/developer/user-guide/sending-email/sending-with-smtp">here</a></p><p>Basically get your KEY and use it in your .env like this:</p><pre><code>MAIL_DRIVER=smtp
MAIL_HOST=smtp.postmarkapp.com
MAIL_PORT=587
MAIL_USERNAME=foo
MAIL_PASSWORD=foo
MAIL_ENCRYPTION=tls</code></pre><p>And all should work. Just make sure to</p><ul><li>Register the domain in their domain ui</li><li>Set the from info in Laravel</li></ul></description><tags>laravel, note2self</tags></item><item><title>Dusk Notes</title><link>https://alfrednutile.info/posts/225/</link><pubDate>Sun, 10 Dec 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/225/</guid><description><p>Just keeping a list of gotchas around dusk.</p><h2 id="use-refreshdatabase-not-working">use RefreshDatabase not working</h2><p>Cost: 1 hour lost</p><p>Basically I had to go back to the slower &ldquo;use DatabaseMigrations;&rdquo; otherwise it would not work. The user was null.</p><p>Links:<a href="https://laracasts.com/discuss/channels/testing/dusk-problem-databasetransactions">This thread helped</a></p><h2 id="headless-or-not">Headless or not</h2><p>Cost: 1 hour lost or less</p><p>For some odd reasons my tests started coming up blank.</p><p>I turned off headless in this class<code>DuskTestCase</code></p><pre><code> protected function driver()
{
$args = [
'--disable-gpu',
'--headless'
];
if (env("HEADLESS_OFF")) {
$args = [
'--disable-gpu'
];
}
$options = (new ChromeOptions)->addArguments($args);<pre><code> return RemoteWebDriver::create(
'http://localhost:9515',
DesiredCapabilities::chrome()-&amp;gt;setCapability(
ChromeOptions::CAPABILITY,
$options
)
);
}</code></pre><p/></pre><p>And this way it still works on travis.</p></p></description><tags>note2self, laravel, dusk</tags></item><item><title>Laravel Shift and Your Day Job</title><link>https://alfrednutile.info/posts/223/</link><pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/223/</guid><description><p>** UPDATED November 22 2017 **</p><p>The service<a href="https://laravelshift.com/shifts">Laravel Shift</a> is a great way to save a ton of time and keep your Laravel application up to date.</p><p>But sometimes you may not be allowed to share access to your company Github account for this process since it is hard to limit access at the repo level.</p><p>In this case I have a quick way to get your work done and back into the company repo IF that is okay with your boss.</p><p>Here are the steps:</p><p>Make a new branch since this is a huge update</p><p>Then make a repo on your account the is PRIVATE</p><p>Then in the same folder of the exiting repository type :</p><pre><code>git remote add shift git@github.com:alnutile/planner.git</code></pre><p>The tricky part here is that if there are private dependencies.</p><p>There is no easy answer, yes since this is a branch you could:</p><ol><li><p>remove those dependencies from composer and<code>config/app.php</code></p></li><li><p>then run<code>composer install</code> again to clean out the lock file (UPDATE: just delete the composer.lock file once you know the install is working)</p></li></ol><p>Then push to your repo:</p><pre><code>git push shift 5.5</code></pre><p>Now go to the Shift website and start the process pointing to the repo you just made. Once paid then in moments you will get a PR.
Merge that in and start the process of fixing any files it noted as missing.
I typically will pull this work down locally.</p><pre><code>git pull --rebase shift 5.5</code></pre><p>Then run your tests to make sure all is well</p><p>When done with any manual fixes and if you need to run Shift again:</p><pre><code>git push shift 5.5</code></pre><p>Now rinse and repeat till you are 5.5</p><blockquote><p>NOTE: After each merge I tend to clean out vendor and composer.lock:</p></blockquote><pre><code>rm -rf composer.lock vendor</code></pre><p>This just seems to be a lot faster of a process.</p></description><tags>laravel, note2self</tags></item><item><title>Wrapping JSONEditor in Vue as Well as Laravel Blade</title><link>https://alfrednutile.info/posts/222/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/222/</guid><description><p><strong>UPDATED November 05 2017</strong></p><p>This will cover how to make a<a href="https://github.com/josdejong/jsoneditor">JSONEditor</a> component that I can then use in a Blade template and listen to events.</p><p>You will end up with this:</p><p><img src="https://dl.dropboxusercontent.com/s/g8n5brbtjom1ulp/Screenshot%202017-11-02%2013.17.32.png?dl=0" alt=""/><p>First making sure I have all the packages I need:</p><pre><code> //package.json
"devDependencies": {
"axios": "^0.17",
"bootstrap-sass": "^3.3.7",
"cross-env": "^5.0.1",
"jquery": "^3.2",
"laravel-mix": "^1.0",
"lodash": "^4.17.4",
"vue": "^2.1.10"
},
"dependencies": {
"select2": "^4.0.5",
"jsoneditor": "^5.9.6"
}</code></pre><p>And to load it into my bootstrap file:</p><pre><code>//resources/assets/js/bootstrap.js
try {
window.$ = window.jQuery = require('jquery');
require('bootstrap-sass');
require("select2");
require("jsoneditor");
} catch (e) {
console.log("Error loading jquery");
}</code></pre><p>Which gets pulled in by my app.js which I also register the global component:</p><pre><code>//resources/assets/js/app.js
require('./bootstrap');<p>window.Vue = require(&lsquo;vue&rsquo;);</p><p>/**</p><ul><li>Using this as a globle event emmitter for components to easily talk to other components
*/
window.EventBus = new Vue();</li></ul><p>Vue.component(&lsquo;cat-json-editor&rsquo;, require('./components/JSONEditor'));</p><p>Vue.component(&lsquo;cat-config-field&rsquo;, require('./components/ConfigField'));
//end of file</code></pre><blockquote/><p>The app.js and bootstrap.js are default workflows of Laravel</p></blockquote><p>Then I will make the component:</p><pre><code>//resources/assets/js/components/JSONEditor.vue
&lt;template>
&lt;div>
&lt;div id="jsoneditor">&lt;/div>
&lt;/div>
&lt;/template><p>&lt;script></p><pre><code>import JSONEditor from 'jsoneditor';
export default Vue.extend({
props: ['config'],
mounted: function () {
let self = this;
let container = document.getElementById('jsoneditor');
let options = {
onChange: function() {
EventBus.$emit('config-updated', editor.get());
},
modes: [&amp;quot;tree&amp;quot;, &amp;quot;text&amp;quot;],
};
let editor = (container) ? new JSONEditor(container, options) : null;
if(container) { editor.set(window.config); }
}
});</code></pre><p>&lt;/script></p><p>&lt;style type="text/css">
#jsoneditor {
width: 800px;
height: 600px;
}
&lt;/style></code></pre><p>Here I register the props and I setup some config using code I placed into window from my controller. You can use<a href="https://github.com/laracasts/PHP-Vars-To-Js-Transformer">this tool</a> for this process.
I could have passed it into the component but chose not to.</p></p><p>So now when there is a change it will emit the change to the global<code>EventBus</code></p><p>Now for the<code>ConfigField</code> component:</p><pre><code>&lt;&lt;template>
&lt;div>
&lt;input type="hidden" id="config" name="config" class="form-control" rows="30" v-model="config">
&lt;/div>
&lt;/template><p>&lt;script></p><pre><code>export default Vue.extend({
data() {
return {
'config': JSON.stringify(window.config)
}
},
methods: {
configUpdated: function(json) {
this.config = JSON.stringify(json);
}
},
created() {
EventBus.$on(&amp;quot;config-updated&amp;quot;, this.configUpdated);
}
});</code></pre><p>&lt;/script></code></pre><p>With these two components in place I now need to add the components to the HTML template.</p></p><p>After this is setup my Blade file has the needed Vue listener etc to update the form (non-ajax) as needed:</p><pre><code>@push('scripts')
&lt;script>
new Vue({
el: '#config_form',<pre><code> })
&amp;lt;/script&amp;gt;</code></pre><p>@endpush
&lt;!&ndash; Form above this that is doing all the form submission work &ndash;>
&lt;div id="config_form">
&lt;label for="config">Config&lt;/label>
&lt;cat-json-editor>&lt;/cat-json-editor>
&lt;cat-config-field>&lt;/at-config-field>
&lt;/div></p><p/></pre><p>In this case I am taking advantage of Blades<a href="https://laravel.com/docs/5.5/blade#stacks">stack feature</a></p></p><p>And the minor amount of work here just mounts Vue onto the<code>#config_form</code></p><p>Then I use Vue to listen to the event &ldquo;config-updated&rdquo;. From there, since this is not about Ajax requests, I update the hidden field on the form.
I could have done this with JQuery but just wanted to get use to this Vue workflow. Also I could see sending this over Ajax sooner than later even if just for validation notices etc.</p><p>Here is a quick look at the Scope of the objects:</p><p><img src="https://dl.dropboxusercontent.com/s/nc1yn0hci05mtq4/events.png?dl=0" alt=""/></description><tags>vue, vue2, laravel, blade, note2self</tags></item><item><title>Laravel, Dusk and Valet</title><link>https://alfrednutile.info/posts/221/</link><pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/221/</guid><description><p>By default I set my<code>phpunit.xml</code> to use<code>test</code> as my database:</p><pre><code> &lt;php>
&lt;env name="APP_ENV" value="testing"/>
&lt;env name="CACHE_DRIVER" value="array"/>
&lt;env name="SESSION_DRIVER" value="array"/>
&lt;env name="MAIL_DRIVER" value="log"/>
&lt;env name="QUEUE_DRIVER" value="sync"/>
&lt;env name="DB_DATABASE" value="test"/> &lt;-- this line here
&lt;/php></code></pre><p>But with<a href="https://laravel.com/docs/5.5/valet">Valet</a> and<a href="https://laravel.com/docs/5.5/dusk">Dusk</a> this led to the browser using my default database and not<code>test</code>
but the PHPUnit test itself was using<code>test</code> so the user I created and logged in as was not available in the browser.</p><p>I tried to set<code>.env.dusk.local</code> and I tried<code>phpuni.dusk.xml</code> none of it worked so I had to remove<code>&lt;env name="DB_DATABASE" value="test"/></code></p><p>This is a bummer and I am sure I am missing something. What this means and my tests reset my database for my local app which ideally it would not since it is really nice to keep state.</p></description><tags>note2self, laravel, testing</tags></item><item><title>WIP AWS Batch and Workers with Laravel</title><link>https://alfrednutile.info/posts/220/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/220/</guid><description><h1 id="sending-docker-commands-to-get-a-task-done">Sending Docker Commands to Get A Task Done</h1><p>This article will show how to get started with AWS Batch and Docker to spin up a &ldquo;worker&rdquo;</p><p>By the time you are done reading it you will:</p><ol><li>Have a Docker image to run your command in.</li><li>Deploy the Docker image to AWS ECR</li><li>And Run a Task on the AWS Batch system, or a 100 tasks, does not matter.</li><li>Finally you will have the scripts needed to fully build AWS Batch with CloudFormation, e.g. super simple</li></ol><h2 id="building-the-laravel-worker">Building the Laravel Worker</h2><p>This can be any language you want, any framework or none! I will focus on Laravel.</p><p>Either way we need a git repo, so later we can push this and do a Docker build on the CI via the deploy scripts.</p><p>Note the 2 Commands</p><ul><li>One to manage all the Tasks and then stitch the results together</li><li>One to just covert the image to PDF
&ndash; depend on?</li></ul><p>Install SDK</p><h3 id="the-command">The Command</h3><p>Before you get going install<a href="https://aws.amazon.com/cli/">AWS CLI</a> on your machine.</p><p>Make sure you have your credentials and profiles setup per the docs<a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html">here</a></p><p>Then the rest will work off those credentials as we make new ones per application and you just place them into your profile via<code>~/.aws/credentials</code> and<code>~/.aws/config</code></p><h3 id="installing-incomings">Installing Incomings</h3><h2 id="building-the-docker-container-to-run-this-work">Building the Docker container to run this work</h2><pre><code>docker-compose build //this will be needed locally
docker-compose run --rm -w /app app php artisan
docker-compose run app php artisan security:scan --git-repo=https://github.com/alnutile/security-scanner-show-error-poc
docker-compose run -w /app app php artisan batch:convert_image_to_pdf --image-url=https://dl.dropboxusercontent.com/s/d2sx0wjheb7dk0p/example_batch.jpg --destination=batch-example/foo</code></pre><h2 id="setting-up-aws-to-run-the-work-on">Setting up AWS to run the work on.</h2><h3 id="compute-environment">Compute Environment</h3><p>For starters there is the Compute Environment (CE). This is what manages the scaling of the EC2 instances.</p><p>The script is HERE. But this is only needed once. I will Explain in a moment.</p><h3 id="job-definition">Job Definition</h3><p>Then there is the JobDefinitions. This is where we can define the Job we want to run and the Compute Environment to run it on. Let the CE figure out the scaling, and hence we can just build one and share it with every one.
So if you have a CE already build try putting your JobDefinition on that before making another one for your Worker.</p><p>The script is HERE.</p><p>Open the scripts, they are just JSON. Good docs are<strong>HERE</strong> on how to make, or read these scripts.</p><p>Once those are all setup take the AWS KEY and Secret it gave you and use it to setup you local AWS CLI.</p><p>This is key for a sane workflow. Here is a link [<strong>HERE</strong>] get your profile right.</p><p>Once you have this setup all the rest will fall into place.</p><h2 id="deploying-to-ci">Deploying to CI</h2><p>Before we push let&rsquo;s make sure that<code>.gitignore</code> has:</p><pre><code>docker/app/packaged/*
!docker/app/packaged/.gitkeep</code></pre><p>Plus all the default Laravel ignores including<code>.env</code></p><p>Deploy Script
Now we need to get this work to CI</p><h2 id="going-to-aws-ui-to-run">Going to AWS UI to run</h2><p>This is annoying lets make a command for this&hellip;</p><h3 id="the-testing-command">The Testing Command</h3><p>More import that is how a &ldquo;requesting&rdquo; app will call this.</p><p><strong>DIAGRAM HERE</strong></p><h2 id="putting-it-all-together">Putting it all together</h2><p>Show running 10 jobs via the command</p><h2 id="now-taking-it-a-bit-further">Now Taking it a bit further</h2><p>The command did a lot</p><ul><li>Got Image</li><li>Made into PDF</li><li>Stitched them all together</li></ul><p>But now let&rsquo;s take this a bit further. I am going to make 2 JobDefinitions.</p><p>One will kick off an orchestrate the work by creating a job per image, tracking the progress of those jobs, and
When all those jobs are done knit them together!</p><p>Here is how it will look.</p><h2 id="summary-of-install">Summary of Install</h2><p>Get Docker file in place docker/app/DockerFile
Get Packaged file in place
Setup Core CloudFormation</p><ul><li>ECR</li><li>JobDefinition</li><li>User Key/Secret
Get docker-compose inlace
Get Travis.yml in place and docker/deploy.bash
See diagram on how this all comes together</li></ul></description><tags>laravel, note2self, aws, wip</tags></item><item><title>Mocking Models OutSide of Laravel</title><link>https://alfrednutile.info/posts/219/</link><pubDate>Thu, 24 Aug 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/219/</guid><description><p>This all comes down to me using<a href="https://github.com/orchestral/testbench">https://github.com/orchestral/testbench</a></p><p>With this in place I can work on an external library as if it is in Laravel.</p><p>The one place I ran into trouble on though was mocking model related methods like<code>all</code> for example a model<code>Foo</code> being called as<code>\App\Foo::all()</code> was hard to mock cause all is stacic:</p><pre><code>//\Illuminate\Database\Eloquent\Model::all
public static function all($columns = ['*'])
{
return (new static)->newQuery()->get(
is_array($columns) ? $columns : func_get_args()
);
}</code></pre><p>But once I did this to my test:</p><pre><code> public function testGetWithNoResults()
{
$mock = \Mockery::mock("alias:AlfredNutileInc\LaravelFeatureFlags\FeatureFlag");
$mock->shouldReceive('all')->once()->andReturn([]);<pre><code> App::instance(FeatureFlag::class, $mock);
$fjs = new FeatureFlagsForJavascript();
$this-&amp;gt;assertEmpty($fjs-&amp;gt;get());
}</code></pre><p/></pre><p>It was mocked!</p></p></description><tags>laravel, note2self</tags></item><item><title>Versions and Branching a Library</title><link>https://alfrednutile.info/posts/218/</link><pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/218/</guid><description><p>At work<a href="https://twitter.com/cavanaghacea">Andrew Cavanagh</a> and I had to, using many examples on of libraries we use, to finalize how to branch and version our libraries.</p><p>There should be one branch for each major version (<code>1.0</code>,<code>2.0</code>, etc).</p><p>These should be the only branches besides<code>master</code>.</p><p>Releases within these versions should be tagged following semantic<a href="http://semver.org/">versioning guidlines</a> (<code>v1.2.3</code> for example).</p><p>In general, all work should be done via pr from the<code>master</code> branch and then merged into whatever the current branch is.</p><p>The only exception is when you are making minor or patch version changes to a previous version.</p><p>For example, if the most current version is<code>2.0</code>, then any changes to master via pr and then merged in to the<code>2.0</code> branch. However, at that point any changes required by the<code>1.0</code> branch would be made via pr off of the<code>1.0</code> branch. See fig.1 for an example.</p><p><img src="https://www.dropbox.com/s/wzn4loxi3u7vzck/Branching%20Libraries%20and%20Packages.png?raw=1" alt="">
figure 1</p><p>When creating a new version, the package&rsquo;s<code>composer.json</code> should alias<code>dev-master</code> to the latest version:</p><pre><code>"extra": {
"branch-alias": {
"dev-master": "3.0-dev"
}
},</code></pre></description><tags>laravel, versioning, note2self</tags></item><item><title>Setting Up My Mac</title><link>https://alfrednutile.info/posts/215/</link><pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/215/</guid><description><p>Great videos here:</p><ul><li><a href="https://laracasts.com/lessons/dev-machine-setup">https://laracasts.com/lessons/dev-machine-setup</a></li><li><a href="https://laracasts.com/lessons/dev-machine-setup-phpstorm">https://laracasts.com/lessons/dev-machine-setup-phpstorm</a></li></ul><h2 id="items">Items</h2><ul><li>MindNode</li><li>EverNote</li><li>TextExpander</li><li>Dropbox</li><li>1Password</li><li>Alfred<ul><li>Extensions<ul><li>DND<a href="https://github.com/mlantz/DND-Alfred-Workflow">https://github.com/mlantz/DND-Alfred-Workflow</a><ul><li>Clipboard History which seems to be part of it but needs to be put on</li></ul></li></ul></li></ul></li><li>Misc</li><li>Napkin</li><li>Scanner</li><li>Moom</li><li>SequelPro</li><li>iTerm</li><li>SSH Keys</li><li>Bartender</li><li>Brew</li><li>PHP7 (using brew<a href="https://developerjack.com/blog/2016/installing-php71-with-homebrew/">https://developerjack.com/blog/2016/installing-php71-with-homebrew/</a>)</li><li>Composer</li><li>Python</li></ul><h2 id="setup-composer-global-path">Setup Composer Global path</h2><p><code>touch ~/.bashrc</code></p><p>Then</p><pre><code>export PATH=~/.composer/vendor/bin:$PATH</code></pre><p>then<code>source ~/.bashrc</code></p><h2 id="zshell">Zshell</h2><pre><code>chsh -s /bin/zsh</code></pre><p>Make sure to add alias to it:</p><pre><code>vim ~/.zshrc</code></pre><p>Add</p><pre><code>. ~/.aliases</code></pre><p>then</p><pre><code>touch ~/.aliases</code></pre><p>That file right now looks like this for me</p><pre><code>alias pickle="~/Code/gherkin5.4/workbench/alfred-nutile-inc/gd/pickle"
alias vssh="cd ~/Homestead &amp;&amp; vagrant ssh"
alias vp="cd ~/Homestead &amp;&amp; vagrant provision"
alias vhalt="cd ~/Homestead &amp;&amp; vagrant halt"
alias hedit="subl ~/.homestead/Homestead.yaml"
alias vup="cd ~/Homestead &amp;&amp; vagrant up"
alias docker-composer="docker-compose"</code></pre><p>then</p><pre><code>source ~/.zshrc</code></pre><h2 id="sublime-shortcut">Sublime shortcut</h2><pre><code>cd /usr/local/bin
ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" subl</code></pre></description><tags>note2self</tags></item><item><title>IronFunctions and PHP</title><link>https://alfrednutile.info/posts/213/</link><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/213/</guid><description><p>A colleague of mine<a href="https://twitter.com/skwashd">Dave Hall</a> poing out<a href="https://github.com/iron-io/functions">IronFunctions</a>. And being in the pursuit of serverless options especially ones that even have examples of PHP I had to give it a try. This post is a note2self in that the intro<a href="https://github.com/iron-io/functions/tree/master/examples/hello/php">here</a> has some bits that need fixing BUT I think it is close and I hope to add more updates here about the tool.</p><p>All the steps below will only work once you take on the initial hello world<a href="https://github.com/iron-io/functions/blob/master/README.md">here</a>. After that you have the<code>fn</code> cli tool installed and a running local iron-functions server.</p><p>For one I needed to apply each patch seen<a href="https://github.com/iron-io/functions/pull/444/files">here</a></p><p>Once I had all that in place I re-reran the<code>fn</code> install command from the folder where I download the<code>iron-io/functions</code> repo into</p><pre><code>cd ../functions
curl -LSs https://goo.gl/VZrL8t | sh</code></pre><p>Then I restarted the service</p><pre><code>docker run --rm -it --name functions -v ${PWD}/data:/app/data -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 iron/functions</code></pre><blockquote><p>btw you need to have Docker working on your machine. This is so easy now that, for example<a href="https://docs.docker.com/docker-for-mac/install/">mac</a>, it should be a gui install.</p></blockquote><p>Ok now back to my example project</p><pre><code>cd ../example_php</code></pre><p>In here I have several files since the above fix</p><pre><code>worker.php
func.yml
Dockerfile</code></pre><blockquote><p>the cat hello.payload.php in the example docs did not work so I used curl and POST instead but this is not what I want to do
I want to test this from the CLI first so will come back to that later</p></blockquote><p>This folder has a<code>composer.json</code> file. Just run<code>composer init</code> since it just needs to be a basic install of PHP.</p><p><strong>worker.php</strong></p><pre><code>&lt;?php
require 'vendor/autoload.php';
stream_set_blocking(STDIN, 0);
$payload = json_decode(file_get_contents("php://stdin"), true);
if (isset($payload['name'])) {
var_dump($payload);
echo "Hello 2 ", $payload['name'],"!\n\n";
} else {
var_dump($payload);
echo "Hello World 2!\n\n";
}</code></pre><p><strong>func.yml</strong></p><pre><code>name: alnutile/hello
version: 0.0.7
runtime: php
entrypoint: ./func
build:
- docker run --rm -v "$PWD":/worker -w /worker iron/php:dev composer install</code></pre><p><strong>Dockerfile</strong></p><pre><code>FROM iron/php<p>WORKDIR /app
ADD . /app</p><p>ENTRYPOINT ["php", "worker.php"]</code></pre><p>Then as the docs note<a href="https://github.com/iron-io/functions/tree/master/examples/hello/php"><a href="https://github.com/iron-io/functions/tree/master/examples/hello/php">https://github.com/iron-io/functions/tree/master/examples/hello/php</a></a> I do all the install steps.</p></p><p>Once those are done ran<code>curl</code> to see it work:</p><pre><code>>curl -X POST http://localhost:8080/r/phpapp1/hello -d '{ "name": "bar" }'</code></pre><p>Which results in:</p><pre><code>array(1) {
["name"]=>
string(3) "bar"
}
Hello 2 bar!</code></pre><p>For updates I added one more file<code>update.sh</code></p><pre><code>#!/bin/sh
# update a function with a new version and push it
fn bump &amp;&amp; fn build &amp;&amp; fn push
# then update the route
fn routes update phpapp1 /hello</code></pre><p>just to save some time there.</p><p>More soon on using this with Lumen and other options. I tried this but some PHP items are missing on the Alpine docker image to make this work.</p></description><tags>php, ironfunctions, note2self</tags></item><item><title>Meetings and Cross TimeZone Teams</title><link>https://alfrednutile.info/posts/210/</link><pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/210/</guid><description><p>Wrote and article<a href="https://medium.com/@alnutile/meetings-and-cross-timezone-teams-c9b833c43bfb">https://medium.com/@alnutile/meetings-and-cross-timezone-teams-c9b833c43bfb</a> on trying to find the blanance of meetings and focus time.</p><p>Saved here as well for when they go out of business :)</p><h2 id="meetings-and-cross-timezone-teams">Meetings and Cross TimeZone Teams</h2><p>Meetings are needed, most of them at least, and when I worked with a team that was all in the same timezone I was easily able to say, “Between 1–4 I am coding/focusing” or “Between 6am and 9am” I am coding. Then the rest of the day was for meetings, interruptions and just helping out on things.</p><blockquote><p>Blocking out time to Code/Focus and get the work done is key and without that it is hard to not find yourself working after hours when it is “quiet”</p></blockquote><p>One book that pointed this out to me was REWORK by the people at 37 Signals.</p><p>But now being in different timezones things get much harder. My “coding time” now does not overlap with someone else who is leaving soon since they are UTC+1 for example. And to top it off there is Slack :( Slack.</p><blockquote><p>Group chat is like being in an all-day meeting with random participants and no agenda. — Jason Fried Is group chat making you sweat?
Al: Okay so I do not agree with this 100% :)</p></blockquote><p>Overall when I start having to work at night to get my coding work done, that is when I know I have not managed my work day well with meetings and distractions. Yes for some their job is meetings. And for some Lead Developers meeting times increase but there still needs to be time to code/focus.</p><blockquote><p>If you’re a technical lead, you need to be coding. — Martin Fowler</p></blockquote><h2 id="slack">Slack</h2><p>First Slack. Well this is just hard. New rooms showing up every day, new ideas going into “action” every moment, it truly becomes FOMO. But not so much a social FOMO as much as just falling behind in all that is going on etc. Just when I feel like I have a handle on Email, e.g I read it in the morning, lunch and end of work day and the expectations are different, then comes Slack and Chat in general. This form of communication is really all about right now or asap. Or at least I feel it is.</p><p>So during the day I started using<a href="https://github.com/mlantz/DND-Alfred-Workflow">https://github.com/mlantz/DND-Alfred-Workflow</a> as a Pomodoro like tool to close down notifications. If I close them down manually I too often find myself forgetting to turn it on again.</p><p>This allows me to focus on what I am doing for nth minutes and coming out again to see if there are any actions or threads to take on.</p><p>So during the part of the day I am open for interruptions I can set it to “dnd 25” for 25 minutes of focus etc.</p><p>I can do this through out the day, but during the “coding time” or “focus time” I might just set “dnd 180” so 3 hours for example.</p><blockquote><p>Giving you self enough time to get into the zone but not in too deep that you lose focus of the bigger picture is a good balance.</p></blockquote><h2 id="coding-or-focus-time">Coding or Focus Time</h2><p>Since I can not section off a day for 3–4 hours since someone in UTC higher or lower than mine may need to meet with me I set aside days and expectations for the day.</p><blockquote><p>Setting expectations for a day no longer leaves me feeling like I got nothing (coding) done. For example at the end of Monday I feel like I got a lot done if the meetings went well and planning for the week went well.</p></blockquote><h3 id="monday-tuesday">Monday, Tuesday</h3><p>Are meetings days, free to be chopped up, free to NOT get large tasks done that need focus time.
These two are great days to work on organizing the week, getting all your tickets in place, pinging people in Slack about meetings and what not.</p><h3 id="wednesday">Wednesday</h3><p>I start protecting my day after 11am. That is when I start to take on a large task. Before that time I have time for meetings and interruptions. The last of my planning should be done by now.</p><h3 id="thursday-and-friday">Thursday and Friday</h3><p>These are the days for getting the work done that is on the list of items to get done. Make a realistic list for yourself. Track them using ideas like this one. And go at it.
But with that said I still need to keep an eye on Slack. But as noted above how often? And let people know your cycle of focus and reply, set your status so people know you are in a Pomodoro (tomato icon?) or just tell your team when they see that you may not get back to them asap.
But these two days should be not chopped into bits by meetings, slack and other context changes. StandUp? Fine maybe one quick one that is focused, but StandUps? That brings you out. So maybe limit to a Slack Standup.
For these StandUps stick to the guidelines</p><hr><ol><li>What did you do yesterday</li><li>What is your task(s) for today</li><li>Any blockers</li></ol><hr><p>Point being the doing of the work needs to get done and the planning time if done properly has had it’s chance to be laid down and hopefully done well. In this case giving it almost 50% of a chance to create a work load and expectations. (for me this is okay but for a developer maybe meetings should be 20% of your week)</p><p>And with these patterns in place, then ideally I find myself less feeling like I did not get enough done at the end of the day, or trying to do the “real work” after hours.</p></description><tags>developers, note2self</tags></item><item><title>Dusk and Homestead</title><link>https://alfrednutile.info/posts/209/</link><pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/209/</guid><description><p>Working on learning<a href="https://laravel.com/docs/5.4/dusk#introduction">Dusk</a> and really excited to get going with it.</p><p>But running it in homestead proved to be a bit tricky.</p><p>After following the docs and running<code>php artisan dusk</code> not much happened. Sure if I ran it on my Mac and it just worked but my tests needed to do migrations and what not and I want to keep my work in Homestead.</p><p>So a few steps later and it worked thanks to this post<a href="https://github.com/laravel/dusk/issues/50#issuecomment-275155974">https://github.com/laravel/dusk/issues/50#issuecomment-275155974</a></p><h2 id="local-host-file">Local host file</h2><p>Make sure to edit<code>sudo vim /etc/hosts</code> and add the APP_URL there as well</p><pre><code>127.0.0.1 webforms.dev</code></pre><p>Then make sure you can hit it from inside homestead as well.</p><p><code>curl -X GET http://webforms.dev</code></p><p>All set?</p><h2 id="then-run-xvfb">Then run xvfb</h2><p>This is a virtual frame buffer that Chrome runs in. Pretty cool really<a href="https://en.wikipedia.org/wiki/Xvfb">https://en.wikipedia.org/wiki/Xvfb</a></p><p>So I like to use screen to start a new session</p><p><code>screen -S running_xvfb</code></p><p>and then in there run</p><p><code>Xvfb :0 -screen 0 1280x8000x24 &amp;</code></p><p>Now we want to swap back to our default session<code>CTRL+A</code> then still holding CTRL let go of A and press D.</p><p>You are back at your default terminal</p><p>Type:</p><pre><code>vagrant@homestead:~/Code/webforms$ screen -ls
There is a screen on:
16315.running_xvfb (04/24/2017 12:34:09 AM) (Detached)
1 Socket in /var/run/screen/S-vagrant.</code></pre><p>Now it all just worked!</p></description><tags>note2self, laravel</tags></item><item><title>Instantiate Request for Testing</title><link>https://alfrednutile.info/posts/206/</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/206/</guid><description><p>When I need to make a request for a test in which the Class is expecting a<code>\Illuminate\Http\Request</code> I can do this for a file based or non file based request.</p><pre><code> /**
* @Then I should be able to upload an image file
*/
public function iShouldBeAbleToUploadAnImageFile()
{
$request = new \Illuminate\Http\Request();
$file = new \Symfony\Component\HttpFoundation\FileBag();
$path = base_path('tests/fixtures/example_profile.jpg');
$originalName = 'example_profile.jpg';
$upload = new \Illuminate\Http\UploadedFile($path, $originalName, null, null, null, true);
$file->set('profile_image', $upload);
$request->files = $file;<pre><code> $this-&amp;gt;repo = new \App\Repositories\ProfileRepository();
$results = $this-&amp;gt;repo-&amp;gt;uploadUserProfileImage($request);
PHPUnit::assertTrue($results, &amp;quot;Repo did not return true&amp;quot;);
PHPUnit::assertTrue(File::exists(public_path('storage/' . $this-&amp;gt;user-&amp;gt;id . '/example_profile.jpg')), &amp;quot;File Not found&amp;quot;);
}</code></pre><p/></pre><p>Or just Mocked</p></p><pre><code> $fixture = File::get(base_path('tests/fixtures/slack_incoming_run_report.json'));
$fixture = json_decode($fixture, true);
//$request = new \Illuminate\Http\Request([], [], $fixture,[], [], [], false);
$request = Mockery::mock(\Illuminate\Http\Request::class);
$request->shouldReceive('all')->andReturn($fixture);
/** @var \App\PlannerSlackReport $report */
$report = new \App\PlannerSlackReport();
$report->handle($request);</code></pre><blockquote/></description><tags>laravel, note2self, php, testing</tags></item><item><title>Example Job Format for Queue</title><link>https://alfrednutile.info/posts/204/</link><pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/204/</guid><description><p>Sometimes I just need this info to remind myself what a job looks like in a queue and how to mock it etc.</p><p>In this case I have a simple class that will be used to dispatch the job.</p><pre><code>&lt;?php<p>namespace App\Jobs;</p><p>use Illuminate\Bus\Queueable;
use Illuminate\Queue\SerializesModels;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Support\Facades\Log;</p><p>class RandomWordJob implements ShouldQueue
{
use InteractsWithQueue, Queueable, SerializesModels;</p><pre><code>public $payload = [];
public function __construct($payload)
{
$this-&amp;gt;payload = $payload;
}
/**
* Execute the job.
*
* @return void
*/
public function handle()
{
Log::debug(&amp;quot;Here&amp;quot;, [var_dump($this-&amp;gt;payload)]);
dd($this-&amp;gt;payload);
}</code></pre><p>}</code></pre><p>Notice, in this case I put an array payload into the constructor. And it is<strong>public</strong> because I want to be passed into the queue.</p></p><p>What the payload in the queue will look like is this</p><pre><code>{"job":"Illuminate\\Queue\\CallQueuedHandler@call","data":{"commandName":"App\\Jobs\\RandomWordJob","command":"O:22:\"App\\Jobs\\RandomWordJob\":5:{s:7:\"payload\";a:2:{s:11:\"word_number\";i:28;s:17:\"destination_queue\";s:20:\"docker-words-private\";}s:6:\"\u0000*\u0000job\";N;s:10:\"connection\";s:8:\"requests\";s:5:\"queue\";N;s:5:\"delay\";N;}"}}</code></pre><p>Serialized data.</p><p>For a quick example of making this happen I made an Artisan command just to put job(s) into the queue so I can see this and maybe for fun just see the whole process through (but honestly it is best to mock the queue and know your class will work if the payload is right) more on that in a moment.</p><pre><code>&lt;?php<p>namespace App\Console\Commands;</p><p>use App\Jobs\RandomWordJob;
use Illuminate\Console\Command;</p><p>class PutSampleRequestInQueue extends Command
{
/**
* The name and signature of the console command.
*
* @var string
*/
protected $signature = &lsquo;docker-work:sample-request&rsquo;;</p><pre><code>/**
* The console command description.
*
* @var string
*/
protected $description = 'Put a sample request into the right queue';
/**
* Create a new command instance.
*
* @return void
*/
public function __construct()
{
parent::__construct();
}
/**
* Execute the console command.
*
* @return mixed
*/
public function handle()
{
$payload = [
'word_number' =&amp;gt; random_int(1, 100),
'destination_queue' =&amp;gt; &amp;quot;docker-words-private&amp;quot;
];
$job = (new RandomWordJob($payload))-&amp;gt;onConnection('requests');
dispatch($job);
}</code></pre><p>}</p><p/></pre><p>From here I can now run<code>php artisan queue:work requests &ndash;once</code> to see my class get this job and “process it”</p></p><p><img src="https://dl.dropboxusercontent.com/s/t5nhb2gyich2hfy/example_get_job.png?dl=0" alt=""/><h2 id="testing">Testing</h2><p>But now for ease of testing this Job Class I can just do this.</p><pre><code> /**
* @test
*/
public function process_payload_make_word_count_and_destination_in_payload()
{<pre><code> //Should get the number
//make a word
//make a payload to put back into the queue
$payload = [
'word_number' =&amp;gt; random_int(1, 100),
'destination_queue' =&amp;gt; &amp;quot;docker-words-private&amp;quot;
];
$job = new \App\Jobs\RandomWordJob($payload);
$job-&amp;gt;handle();
PHPUnit_Framework_Assert::assertNotNull($job-&amp;gt;getResults());
}</code></pre><p/></pre><p>In this case I will store some results of the process, since it is not saved in a databse for this example, in the object and then in my test prove the class did what it was suppose to do.</p></p><p>Basically I know Laravel works, I know SQS works, and I know how the data will be handed to the class as it is instantiated so I am just testing the Class and how it handles the request.</p><p>Note too like a Controller it is really key to handle inside a Try/Catch</p><pre><code> public function handle()
{
try {
Log::debug("Here", [var_dump($this->payload)]);
dd($this->payload);
} catch (\Exception $e) {
Log::debug(sprintf("Failed to work :( %s", $e->getMessage()));
}
}</code></pre></description><tags>note2self, laravel</tags></item><item><title>Pusher and PHP 'Error Failed to connect to Pusher'</title><link>https://alfrednutile.info/posts/201/</link><pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/201/</guid><description><p>Note to self. Getting this error &ldquo;Error Failed to connect to Pusher&rdquo; but the front end is working. And you know your credentials are correct, AND it was working just a day ago check the date and time on your machine/vm.</p><p>Mine had drift and since it was behind by 20 minutes I would end up with this error.</p><p>Oy what a waste or time x 2 :(</p></description><tags>php, note2self, laravel</tags></item><item><title>Model Boot Events</title><link>https://alfrednutile.info/posts/200/</link><pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/200/</guid><description><p>Just a quick not to modify model data upon an event. Laravel docs talk about it<a href="https://laravel.com/docs/5.3/eloquent#events">here</a></p><p>But putting it in another class can get kinda confusing when you are trying to debug or update the code.</p><p>In this example I have a model<code>Board</code> and I want to, upon saving, make sure it has some key data.</p><pre><code> protected static function boot()
{
static::bootTraits();<pre><code> /** @var \App\Board $model */
static::creating(function ($model) {
if (!$model-&amp;gt;id) {
$model-&amp;gt;id = Uuid::uuid4()-&amp;gt;toString();
}
});
}</code></pre><p/></pre><p>So now my<code>\App\Board</code> class will trigger this addition of UUID if the ID is not set upon<code>creation</code>.</p></p></description><tags>laravel, note2self</tags></item><item><title>Queue onConnection</title><link>https://alfrednutile.info/posts/199/</link><pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/199/</guid><description><p>If you look here<a href="https://laravel.com/docs/5.3/queues#customizing-the-queue-and-connection">https://laravel.com/docs/5.3/queues#customizing-the-queue-and-connection</a></p><p>Under &ldquo;Dispatching To A Particular Connection&rdquo;</p><p>But if running test and local where I just want<code>sync</code> or<code>database</code></p><pre><code> if(env('QUEUE_DRIVER') != 'sync' &amp;&amp; env('QUEUE_DRIVER') != 'database') {
$concentration_curve = (new ImportDataColumnWorker($this->job_notice->model, $this->job_notice->payload))
->onConnection('columns');
} else {
$concentration_curve = (new ImportDataColumnWorker($this->job_notice->model, $this->job_notice->payload));
}<pre><code> $this-&amp;gt;dispatch($concentration_curve);</code></pre><p/></pre></p></description><tags>laravel, note2self</tags></item><item><title>Guzzle 5 or 6 or ????</title><link>https://alfrednutile.info/posts/198/</link><pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/198/</guid><description><p>Sometimes Guzzle can be a real pain to use in an library. You choose 5.x and then some other library needed 6.x and heck you really did not care either way.</p><p>One interesting package example is<a href="https://packagist.org/packages/aws/aws-sdk-php">aws/aws-sdk-php</a></p><p>If you look in it&rsquo;s composer.json you will see this</p><pre><code> "require": {
"php": ">=5.5",
"guzzlehttp/guzzle": "~5.3|~6.0.1|~6.1",
"guzzlehttp/psr7": "~1.0",
"guzzlehttp/promises": "~1.0",
"mtdowling/jmespath.php": "~2.2"
},</code></pre><p>So it allows for other libraries to choose as needed and it will deal with the different versions as needed.</p><p><code>vendor/aws/aws-sdk-php/src/functions.php:263</code></p><pre><code>function default_http_handler()
{
$version = (string) ClientInterface::VERSION;
if ($version[0] === '5') {
return new \Aws\Handler\GuzzleV5\GuzzleHandler();
} elseif ($version[0] === '6') {
return new \Aws\Handler\GuzzleV6\GuzzleHandler();
} else {
throw new \RuntimeException('Unknown Guzzle version: ' . $version);
}
}</code></pre><p>Then each class deals with instantiating the<code>GuzzleHttp\Client</code> as needed.</p></description><tags>php, note2self</tags></item><item><title>Chrome update equals Behat Fail</title><link>https://alfrednutile.info/posts/197/</link><pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/197/</guid><description><p>Had trouble running behat after I ran updates on Chrome</p><p>My typical install<a href="https://www.npmjs.com/package/selenium-standalone">https://www.npmjs.com/package/selenium-standalone</a></p><p>did not fix it, even try<code>brew</code> but no luck.</p><p>All I needed to do was go<a href="https://chromedriver.storage.googleapis.com/index.html?path=2.25/">here</a> and grab the lastest one for my Mac. For me this was the 32 bit.</p><p>Then after running</p><pre><code>selenium-standalone install</code></pre><p>to see where the old one was installed I used that path to unzip this file and move it there<code> /usr/local/lib/node_modules/selenium-standalone/.selenium/chromedriver/2.21-x64-chromedriver</code></p><p>Then started things backup again and it was fine.</p><pre><code>curl -O https://chromedriver.storage.googleapis.com/2.25/chromedriver_mac64.zip
unzip chromedriver_mac64.zip
mv chromedriver /usr/local/lib/node_modules/selenium-standalone/.selenium/chromedriver/2.21-x64-chromedriver</code></pre></description><tags>note2self, behat</tags></item><item><title>Laravel and Casting 'JSON_UNESCAPED_UNICODE' Data</title><link>https://alfrednutile.info/posts/196/</link><pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/196/</guid><description><p>Had a interesting issue with Laravel and the<a href="https://laravel.com/docs/5.2/eloquent-mutators">cast feature</a></p><p>Basically a Chinese set of characters would be converted to their unicode counterpart<a href="http://php.net/manual/en/json.constants.php">http://php.net/manual/en/json.constants.php</a></p><p>So saving &ldquo;你好，世界&rdquo; would become &ldquo;\u4f60\u597d\uff0c\u4e16\u754c&rdquo; in the database.</p><p>Making it hard to search for &ldquo;你好，世界&rdquo;</p><p>But I just wanted this data as it was, so later I could query the data and interact with it in it&rsquo;s default character state.</p><p>Digging into the Model class<code>vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:3044</code> I found that this method would<code>json_encode</code> but with no options.</p><p>So on my model I had to override that</p><pre><code> protected function asJson($value)
{
/**
* Alter Cast
* Default is altering unicode
*/
return json_encode($value, JSON_UNESCAPED_UNICODE);
}<p/></pre><p>And now “你好，世界” would save that way to the database and not “\u4f60\u597d\uff0c\u4e16\u754c”</p></p></description><tags>laravel, json, note2self</tags></item><item><title>Amazon Machine Learning</title><link>https://alfrednutile.info/posts/191/</link><pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/191/</guid><description><p>This is mostly a note2self.</p><p>Amazon Machine learning is one way to dig into things. For me it mean not getting bogged down in Python or tons of formulas for now.</p><p>Basically I watched their main video<a href="https://aws.amazon.com/machine-learning/getting-started/">here</a> to get a view of how things worked.</p><p>Then I read their docs<a href="http://docs.aws.amazon.com/machine-learning/latest/dg/what-is-amazon-machine-learning.html">here</a> and follow<a href="http://docs.aws.amazon.com/machine-learning/latest/dg/tutorial.html">this</a> tutorial.</p><p>After that I took a moment to watch another video of how they used ML to help process messages from Twitter<a href="https://www.youtube.com/watch?v=GRRX9amYsyM">https://www.youtube.com/watch?v=GRRX9amYsyM</a></p><p>From there I tried a few of my own datasets one I used on a not ready for prime time product<a href="https://incomings.io/blogs/3">here</a></p><p>Anyways it was just fun to play around. Their API is super easy to use, even to the point of having a PHP client I could plug in for AWS or MicroSoft<a href="https://alfrednutile.info/projects/57">https://alfrednutile.info/projects/57</a></p><p>Have a number of other ideas as well looking forward to making them happen here or with other services.</p></description><tags>note2self</tags></item><item><title>Adding Basic Auth to Forge</title><link>https://alfrednutile.info/posts/189/</link><pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/189/</guid><description><p>make the username and password<a href="http://www.htaccesstools.com/htpasswd-generator/">http://www.htaccesstools.com/htpasswd-generator/</a></p><pre><code>admin:$apr1$wLiZDI74$/D64sfIdn74kHc6F.76Qv/</code></pre><p>And save it in a file called, for example,<code>htpass</code></p><p>Now<code>scp -v htpass forge@your_server:~/</code></p><p>Go to forge and find the site and click &ldquo;Edit Nginx Configuration&rdquo;</p><p><img src="https://dl.dropboxusercontent.com/s/l10cxnvgoekvdo8/edit_nginx.png?dl=0" alt=""/><p>Now in there just add these lines</p><pre><code> auth_basic "Restricted Area";
auth_basic_user_file /home/forge/htpass;</code></pre><p>As seen below</p><p><img src="https://dl.dropboxusercontent.com/s/oxuo4vw6rvfnrnv/nginx_conf.png?dl=0" alt=""/><p>I think that will restart/reload Nginx, if does not go to the page that list your &ldquo;Server Details&rdquo; and restart there</p><p><img src="https://dl.dropboxusercontent.com/s/hp1p1v9nkv684r8/restart_nginx.png?dl=0" alt=""/></description><tags>note2self</tags></item><item><title>Behat and Uploading Files to a Form Even on Remote Selenium2 Servers</title><link>https://alfrednutile.info/posts/179/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/179/</guid><description><p>Just had to tackle this issue so making some notes for later here :)</p><p><strong>Updated and more detailed<a href="https://alfrednutile.info/posts/188">here</a></strong></p><p>I run selenium on my Windows PC and before that my Mac, either one would have had this issue since my test is running side my VM. This meant when I needed to run a test to interact with a form to upload an image that image path was relative to the machine (VM) that I started the test on and not the Browser that was being manipulated by Selenium2.</p><p>The solution was &ldquo;easy&rdquo; thanks to this<a href="https://github.com/minkphp/MinkSelenium2Driver/issues/187#issuecomment-112106857">thread</a></p><p>After that my step just looked like this and I was done</p><pre><code> /**
* @Then I should be able to upload an image file
*/
public function iShouldBeAbleToUploadAnImageFile()
{
$localFile = base_path('features/assets/profile.jpg');
$tempZip = tempnam('', 'WebDriverZip');
$zip = new \ZipArchive();
$zip->open($tempZip, \ZipArchive::CREATE);
$zip->addFile($localFile, basename($localFile));
$zip->close();<pre><code> $remotePath = $this-&amp;gt;getSession()-&amp;gt;getDriver()-&amp;gt;getWebDriverSession()-&amp;gt;file([
'file' =&amp;gt; base64_encode(file_get_contents($tempZip))
]);
$this-&amp;gt;attachFileToField('profile_image', $remotePath);
unlink($tempZip);
$this-&amp;gt;pressButton('Save');
}</code></pre><p/></pre><p>I also had to add<code>@javascript</code> to the test to allow this WebDriver feature to work.</p></p><p>That was it, saved me a ton of time suffering through this gotcha moment.</p></description><tags>behat, bdd, php, note2self</tags></item><item><title>Laravel, PHPUnit, Require_Once on Routes</title><link>https://alfrednutile.info/posts/178/</link><pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/178/</guid><description><p>Going crazy running PHPUnit all and getting fail but you run the one route and it works!</p><p>The difference is<code>require</code> versus<code>require_once</code> in PHPUnit tests.</p><p>For example</p><pre><code>require __DIR__ . '/../ConfigurationExamples/routes.php';<p>Route::get('/', function () {
return view(&lsquo;welcome&rsquo;);
});</p><p/></pre><p>Now when I run my tests I get 100% pass</p></p><pre><code>/**
* @test
*/
public function should_auth_user()
{
$user = factory(\App\User::class)->create();
$results = $this->call('GET', sprintf("/example/auth_token?api_token=%s", $user->api_token));
$this->assertEquals(200, $results->status());
$this->assertEquals("foo", $results->getContent());
}
/**
* @test
*/
public function should_fail_user()
{
$results = $this->call('GET', '/example/auth_token');
$this->assertEquals(302, $results->status());
}
/**
* @test
*/
public function should_pass_auth_with_no_token()
{
$user = factory(\App\User::class)->create();
$this->be($user);
$results = $this->call('GET', '/example/auth_token');
$this->assertEquals(200, $results->status());
$this->assertEquals("foo", $results->getContent());
}</code></pre><p>The moment I change it to<code>require_once</code> I get fails on the last or second to last one, it is not consistant except that it will fail. I immediately run that one and it passes.</p><p>It is not the database and I can change the order of these tests to have the bottom one fail.</p><p>So<code>require</code> is your friend!!</p></description><tags>note2self, php, laravel</tags></item><item><title>Install Webdriver to get testing with Behat and Javascript</title><link>https://alfrednutile.info/posts/174/</link><pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/174/</guid><description><p>This is so I do not forget!</p><p><strong>UPDATED: go here instead<a href="https://www.npmjs.com/package/selenium-standalone">https://www.npmjs.com/package/selenium-standalone</a></strong></p><h2 id="1-sudo-npm--g-install-webdriver-manager">1) sudo npm -g install webdriver-manager</h2><h2 id="2-sudo-webdriver-manager-update---chrome">2) sudo webdriver-manager update &ndash;chrome</h2><h2 id="3-get-java-for-the-mac">3) Get Java for the Mac</h2><p>Googled El Capitan Java and takes me to Apples site to get the right version of java</p><p><a href="https://support.apple.com/kb/dl1572?locale=en_US">https://support.apple.com/kb/dl1572?locale=en_US</a></p><h2 id="4-webdriver-manager-start">4) webdriver-manager start</h2><p>That is it!</p></description><tags>behat, note2self</tags></item><item><title>Multi Domain Nginx Redirect</title><link>https://alfrednutile.info/posts/135/</link><pubDate>Sat, 28 Feb 2015 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/135/</guid><description><p><a href="http://wordpress.stackexchange.com/questions/106445/multisite-redirect-loop-for-a-single-www-domain">http://wordpress.stackexchange.com/questions/106445/multisite-redirect-loop-for-a-single-www-domain</a></p><p>Basically the site went from foo-prod.stagingarea.us to wearelive.com but since it was an internal app I wanted to make sure the old url still worked and redirected as needed to the new url</p><pre><code>server {
listen 80;
server_name foo-prod.stagingarea.us;
return 301 https://$host$request_uri;
}<p>server {
listen 443;
server_name foo-prod.stagingarea.us;
if ($host ~* ^foo-prod.stagingarea.us) {
rewrite ^(.*)$<a href="https://wearelive.com">https://wearelive.com</a>$1 permanent;
}</code></pre><p>Interesting note is server_name does not contain the primary name wearlive.com</p></p></description><tags>note2self</tags></item><item><title>Linux, Behat and installing ChromeDriver</title><link>https://alfrednutile.info/posts/129/</link><pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/129/</guid><description><p>Setting up Chrome driver with Behat and Selenium2</p><h2 id="side-note-for-mac">Side note for Mac</h2><pre><code>brew install chromedriver</code></pre><h2 id="chromedriver">ChromeDriver</h2><p>Once you find the path Chrome was installed you place the driver in there. For Ubuntu 14.04 it was</p><pre><code>/opt/google/chrome/chromedriver</code></pre><p>I got the driver from<a href="https://code.google.com/p/selenium/wiki/ChromeDriver#Overriding_the_Chrome_binary_location">https://code.google.com/p/selenium/wiki/ChromeDriver#Overriding_the_Chrome_binary_location</a></p><h2 id="starting-selenium">Starting Selenium</h2><p>I still need to look up and try setting this in the behat.yml for now I just ran it this way</p><pre><code>java -jar selenium-server-standalone-2.0rc2.jar -Dwebdriver.chrome.driver=/opt/google/chrome/chromedriver</code></pre><p>That is it. Now it should work with Chrome when you behat.yml is set like this</p><pre><code>default:
formatter:
name: pretty
parameters:
decorated: true
verbose: false
time: true
language: en
output_path: null
multiline_arguments: true
paths:
features: app/tests/acceptance/features
bootstrap: app/tests/acceptance/contexts
context:
parameters:
base_url: http://thehub.dev
extensions:
Behat\MinkExtension\Extension:
goutte: null
selenium2:
wd_host: "http://192.168.10.1:4444/wd/hub"
base_url: 'http://thehub.dev:8000/'
browser_name: chrome</code></pre></description><tags>note2self</tags></item><item><title>Laravel Blade and Angular brackets</title><link>https://alfrednutile.info/posts/124/</link><pubDate>Fri, 19 Dec 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/124/</guid><description><p>I use one AngularController.php to render main.blade.php file that then renders angular. The only other blade file is the login page.
I could have done this in the routes.php file but since the routes file has the login page I decided to place it in this controller.</p><pre><code>&lt;?php namespace App\Http\Controllers;<p>use Illuminate\Support\Facades\Blade;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\View;
use Laracasts\Utilities\JavaScript\Facades\JavaScript;</p><p>/**</p><ul><li><p>@Middleware("auth")
*/
class AngularController extends BaseController {</p><p>use UserHelper;</p><p>/**</p><ul><li>@var UserService
*/
private $userService;</li></ul><p>public function __construct(UserService $userService)
{
$this->userService = $userService;
}</p><p>/**</p><ul><li><p>@Get("behat", as="behat.dash")
*/
public function index()
{</p><p>Blade::setContentTags('&lt;%', &lsquo;%>'); // for variables and all things Blade
Blade::setEscapedContentTags('&lt;%%&rsquo;, &lsquo;%%>'); // for escaped data
$user_id = $this->getUserId();
$profile = $this->userService->getPerson($user_id);
$token = csrf_token();
$chat_on = Config::get(&lsquo;app.chat_on&rsquo;, true);
JavaScript::put(
[
&lsquo;pusher_public_key&rsquo; => $_ENV[&lsquo;PUSHER_PUBLIC&rsquo;],
&lsquo;sauce_key&rsquo; => $_ENV[&lsquo;SAUCE_TOKEN&rsquo;],
&lsquo;sauce_user&rsquo; => $_ENV[&lsquo;SAUCE_USER&rsquo;],
&lsquo;profile&rsquo; => $profile,
&lsquo;token&rsquo; => $token,
&lsquo;debug&rsquo; => Config::get(&lsquo;app.debug&rsquo;),
]
);
return View::make(&lsquo;layouts.main&rsquo;, compact(&lsquo;chat_on&rsquo;));
}</p></li></ul></li></ul><p>}</code></pre><p>Thanks to<a href="http://scotch.io/bar-talk/quick-tip-using-laravel-blade-with-angularjs"><a href="http://scotch.io/bar-talk/quick-tip-using-laravel-blade-with-angularjs">http://scotch.io/bar-talk/quick-tip-using-laravel-blade-with-angularjs</a></a> for the tip</p></p></description><tags>note2self, angularjs, laravel</tags></item><item><title>Multi Threaded Queue Processing</title><link>https://alfrednutile.info/posts/106/</link><pubDate>Wed, 10 Sep 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/106/</guid><description><p>I needed a way to run a bunch of jobs in parallel and I am use to using the Symfony Process Component for that.</p><p>So this post will show how I did this in Laravel 4.3 via the Queue so I can remember next time.</p><p>What will come out of this is a workflow as seen here</p><div markdown=0><img src="ttps://dl.dropboxusercontent.com/s/url0i1ibk40u5o7/Screenshot%202014-09-10%2007.59.23.png?dl=" width="0"/><p>We will create two Artisan Commands. This allows us to use Symfony Process to run numerous<strong>console commands</strong> in the background.</p><p>I will not go over how to add a job to the queue there is plenty on that. I will show the class I used for the Queue and it&rsquo;s attributes.</p><pre><code>{
"job":"Foo\\\\Reporting\\\\RequestsCommandQueueRunner",
"data":{
"results_uuid":"4a13aaee-4289-4f95-afe5-ea5abaaed869"
}
}</code></pre><p>This gets pushed into the Queue. It is the &ldquo;Parent&rdquo; that will run x number of children commands. The x is defined in my .env.local.php or .env.production.php files. This way I can increase or decrease the number of threads it will run as needed.</p><p>The results_uuid is the data I need to get the children. In this case the children have that uuid in their table as belongsTo that parent.</p><h2 id="requestscommandqueuerunner">RequestsCommandQueueRunner</h2><p>This Artisan command is quite simple</p><pre><code>&lt;?php<p>#app/Foo/RequestsCommandQueueRunner.php</p><p>namespace Foo\Reporting;</p><p>use Foo\Models\ReportingOverviewBatchRequestJob;
use Foo\QueueServices\QueueInterface;</p><p>class RequestsCommandQueueRunner implements QueueInterface {</p><pre><code>protected $job_limit;
protected $results_uuid;
public function __construct()
{
$this-&amp;gt;job_limit = $_ENV['RESULTS_QUEUE_LIMIT'];
}
public function fire($job, $params)
{
$this-&amp;gt;results_uuid = $params['results_uuid'];
exec(&amp;quot;php artisan request:trigger $this-&amp;gt;results_uuid&amp;quot;, $results);
$job-&amp;gt;delete(); //@TODO make delete if all goes well catch error though and fail it
}</code></pre><p>}</code></pre><p>All it does is passes the parent id to the trigger command. Below is the trigger command.</p></p><p>Note too I am not using the job limit yet. Later I will make x number of Queue jobs as I divide the number of children that parent has by the limit set.</p><h2 id="requestsqueuecommand">RequestsQueueCommand</h2><pre><code>&lt;?php namespace Foo\Console;<p>#app/Foo/Console/RequestsQueueCommand.php</p><p>use Foo\Models\ReportingOverviewBatchRequestJob;
use Illuminate\Console\Command;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Process\Process;</p><p>class RequestsQueueCommand extends Command {</p><pre><code>protected $name = 'request:trigger';
protected $run = [];
protected $description = 'Trigger the running of related jobs';
protected $request_uuid;
protected $projects;
/**
* @var \Foo\Models\ReportingOverviewBatchRequestJob
*/
private $reporting_overview_batch_request_jobs;
public function __construct(
ReportingOverviewBatchRequestJob $reporting_overview_batch_request_jobs
)
{
parent::__construct();
$this-&amp;gt;reporting_overview_batch_request_jobs = $reporting_overview_batch_request_jobs;
}
public function fire()
{
$this-&amp;gt;request_uuid = $this-&amp;gt;argument('request_uuid');
$this-&amp;gt;setRelatedProjects();
$this-&amp;gt;setRun();
$this-&amp;gt;runRelatedProjectsCommand();
return &amp;quot;Fired&amp;quot;;
}
protected function getArguments()
{
return array(
array('request_uuid', InputArgument::REQUIRED, 'The uuid of the Request to trigger the jobs for'),
);
}
protected function setRelatedProjects()
{
$projects =
$this-&amp;gt;reporting_overview_batch_request_jobs-&amp;gt;getAllJobsForReportOverviewBatchRequestUuid($this-&amp;gt;request_uuid);
$this-&amp;gt;projects = $projects-&amp;gt;toArray();
return $this-&amp;gt;projects;
}
protected function setRun()
{
foreach($this-&amp;gt;projects as $project)
{
$this-&amp;gt;addToRun($project['id']);
}
}
protected function runRelatedProjectsCommand()
{
foreach($this-&amp;gt;run as $process)
{
$process-&amp;gt;start();
}
while(count($this-&amp;gt;run) &amp;gt; 0)
{
foreach($this-&amp;gt;run as $key =&amp;gt; $process)
{
if(!$process-&amp;gt;isRunning())
{
\Log::info(&amp;quot;Done running process&amp;quot;);
unset($this-&amp;gt;run[$key]);
}
}
}
}
protected function addToRun($project_id)
{
$this-&amp;gt;run[] = new Process(&amp;quot;php artisan request:run $project_id&amp;quot;);
}</code></pre><p>}</p><p/></pre><p>Here is where things get interesting. I begin the work of finding the children Ids then making an array of<strong>console commands</strong> to run using the children id as the argument I pass.</p></p><p>The Process Component allows me to<strong>start them in the background</strong> and then check on them while they are running.</p><p>Now for the command it runs &ldquo;php artisan request:run $project_id&rdquo;</p><h2 id="requestsjobruncommand">RequestsJobRunCommand</h2><p>This is the process that does the long running work. In this case logs into Github, get some info and reports on it.</p><pre><code>&lt;?php namespace Foo\Console;<p>use Foo\Models\ReportingOverviewBatchRequestJob;
use Foo\Services\RequestJobRunService;
use Illuminate\Console\Command;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputArgument;</p><p>class RequestsJobRunCommand extends Command {</p><pre><code>protected $name = 'request:run';
protected $description = 'Run the related job';
protected $job_uuid;
/**
* @var RequestJobRunService
*/
private $requestJobRunService;
/**
* Id of the job we will run
* @var
*/
protected $related_job;
public function __construct(RequestJobRunService $requestJobRunService)
{
parent::__construct();
$this-&amp;gt;requestJobRunService = $requestJobRunService;
}
public function fire()
{
$this-&amp;gt;job_uuid = $this-&amp;gt;argument('job_uuid');
$this-&amp;gt;loadTheJobsInfo();
$this-&amp;gt;requestJobRunService-&amp;gt;getGithubApi()-&amp;gt;authenticate();
$this-&amp;gt;getJobsAndCount();
return &amp;quot;Fired&amp;quot;;
}
protected function getJobsAndCount()
{
try {
$tests = $this-&amp;gt;getRelatedTests();
$tests_count = count($tests);
\Log::info(sprintf(&amp;quot;Updating ReportingOverviewRequest with uuid %s&amp;quot;, $this-&amp;gt;job_uuid));
$this-&amp;gt;related_job-&amp;gt;status = 1;
$this-&amp;gt;related_job-&amp;gt;number_of_tests = $tests_count;
$this-&amp;gt;related_job-&amp;gt;save();
} catch(\Exception $e) {
$this-&amp;gt;related_job-&amp;gt;status = 1; // mark done for now though a fail noted in message box
$this-&amp;gt;related_job-&amp;gt;message = $e-&amp;gt;getMessage();
$this-&amp;gt;related_job-&amp;gt;save();
\Log::error(sprintf(&amp;quot;Error processing job %s for request job request parent uuid %s error &amp;quot;, $this-&amp;gt;related_job-&amp;gt;id, $this-&amp;gt;related_job-&amp;gt;reporting_overview_batch_request_id, $e-&amp;gt;getMessage()));
}
}
protected function getRelatedTests()
{
try {
return $this-&amp;gt;requestJobRunService-&amp;gt;getGithubApi()
-&amp;gt;setReponame($this-&amp;gt;related_job-&amp;gt;repo_name)
-&amp;gt;setAccountName($this-&amp;gt;related_job-&amp;gt;account_name)
-&amp;gt;setBranch($this-&amp;gt;related_job-&amp;gt;branch)
-&amp;gt;index($this-&amp;gt;related_job-&amp;gt;folder);
}
catch(\Exception $e)
{
throw new \Exception(&amp;quot;Error getting index of github &amp;quot; . $e-&amp;gt;getMessage());
}
}
protected function loadTheJobsInfo()
{
$this-&amp;gt;related_job = $this-&amp;gt;requestJobRunService-&amp;gt;getReportingOverviewBatchRepository()-&amp;gt;getReportingOverviewBatchRequestJobsModelInterface()
-&amp;gt;findOrFail($this-&amp;gt;job_uuid);
}
protected function getArguments()
{
return array(
array('job_uuid', InputArgument::REQUIRED, 'The uuid of the related request job to run'),
);
}</code></pre><p>}</code></pre><p>There still is some work to do. I have to set the limit so my initial run does not timeout. I also need to clean up some code so that these classes are digging so deep into the other classes.</p></p><p>But this was just to show how to use Symfony Process Component, Laravel Queue, and Laravel Artisan to run a multi threaded task.</p></description><tags>laravel, php, note2self, 4.3</tags></item><item><title>Sorting related models in Laravel</title><link>https://alfrednutile.info/posts/104/</link><pubDate>Fri, 15 Aug 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/104/</guid><description><p>There are a number of related models to this one model that I store in the Models $relations property</p><pre><code> protected static $relations = [
'owner',
'apns',
'zoning_urls',
'structures.address',
'structures.comments.user.profiles',
'listings',
'attachments',
'structures.structure_type',
'property_owner',
'primary_property_type',
'address',
'property_specialist.profiles',
'listings.team'
];</code></pre><p>This allows me to easily reuse this for each query</p><pre><code>$found = $found->load(static::$relations);</code></pre><p>But there is one model I removed from that list to do a dynamic query/sorting on it</p><pre><code> $found = $this->property->with([
'verifiers' => function($query) {
$query->with('user.profiles')->orderBy('id', 'DESC');
},
])->findOrFail($id);
$found = $found->load(static::$relations);</code></pre><p>veifiers was part of the protected static $relations list but I moved it out since, for each query, I need to sort them from last to first.</p></description><tags>laravel, php, note2self</tags></item><item><title>Polymorphic relationship Laravel</title><link>https://alfrednutile.info/posts/99/</link><pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/99/</guid><description><p>This example will show a typical &ldquo;Attachment&rdquo; need. The Laravel docs really do cover alot as seen<a href="http://laravel.com/docs/eloquent#polymorphic-relations">here</a> especially<strong>&ldquo;Polymorphic Relation Table Structure”</strong>. I cover many to many polymorphic relationships<a href="http://www.alfrednutile.info/posts/95">here</a></p><p>I will cover an example of an Attachment that has some fields. And it is related to a model, in this example &ldquo;Post&rdquo;</p><p>Using the<a href="https://github.com/JeffreyWay/Laravel-4-Generators">Way Generators</a> to make this resource.</p><pre><code>php artisan generate:resource attachment --fields="attachable_type:string, attachable_id:integer, name:string, file_name:string, note:text, tag:string”</code></pre><p>As noted in the laravel docs our table for Attachments would look something like this</p><pre><code>post
id - integer
name - string
body - text<p>attachments
id - integer
file_name - string
attachable_id - integer
attachable_type - string</code></pre><p>So we are making a table/model Attachment. The model will use the “attachable” syntax to dynamically reference another model and model id.</p></p><p>In the Post model I set that this relationship exists</p><pre><code>#app/models/Post.php
public function attachments()
{
return $this->morphTo("Attachment", "attachable");
}</code></pre><p>The Attachment model file is this</p><pre><code>
&lt;?php
#app/models/Attachment.php
class Attachment extends \Eloquent {
protected $fillable = [
"attachable_type",
"attachable_id",
"name”,
“file_name”,
"note",
"tag"
];<pre><code>public function attachable()
{
return $this-&amp;gt;morphTo();
}</code></pre><p>}</code></pre><p>Finally if we where to seed the db or add content the table for Attachments would look like this</p></p><p><img src="https://photos-1.dropbox.com/t/0/AADRAfBTNcMG8puEahtElixkH6F6rsoCXD1zgM_aFoUiRQ/12/54803135/png/1024x768/3/1405868400/0/2/Screenshot%202014-07-20%2009.12.12.png/bA938wfNJbWkPlOIKMlD5gJKsBGGGJCH-RTweCGQqwk" alt="example"/><p>the attachable_type is the model class so if the namespace was Acme\Post then that would be &ldquo;Acme\Post</p><p>That is it. As long as you include it in your results you will see it in your output.</p></description><tags>laravel, php, note2self</tags></item><item><title>Quick way to traverse a nested php arrray</title><link>https://alfrednutile.info/posts/98/</link><pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/98/</guid><description><p>The<a href="http://php.net/manual/en/class.recursiveiteratoriterator.php">RecursiveIteratorIterator</a> makes it super easy to traverse a nested array.</p><p>Here is an example though the docs are pretty clear there. For me it was in a class so I defined the array keys at the top of the Class</p><pre><code> protected $merged_profile_options = [];
protected $data_values = [
'browser' => null,
'name' => null,
'version' => null,
'platform' => null,
'base_url' => null,
'repo' => null,
'filename' => null,
'branch' => null,
'status' => null,
'user_uuid' => null,
'remote_job_id' => null,
'job_id' => null,
];<p/></pre><p>Then later on iterated over that array.</p></p><pre><code> protected function setAllDataValues() {
$traverse = new \RecursiveIteratorIterator(
new \RecursiveArrayIterator($this->merged_profile_options));
foreach($traverse as $key=>$value)
{
if(array_key_exists($key, $this->data_values))
{
$this->setDataValues($key, $value);
}
}
}
public function setDataValues($key, $value)
{
$this->data_values[$key] = $value;
}</code></pre><p>Super easy. This array was 4 levels deep.</p></description><tags>php, note2self</tags></item><item><title>Restangular and nested responses</title><link>https://alfrednutile.info/posts/91/</link><pubDate>Sat, 21 Jun 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/91/</guid><description><p><a href="https://github.com/mgonto/restangular#my-response-is-actually-wrapped-with-some-metadata-how-do-i-get-the-data-in-that-case">this was key</a> to dealing with this type of results</p><pre><code>{
"data": {
"name": "Foo"
},
"message": {
"Post Updated"
}
}</code></pre><p>So I had to set this in a app.js config area</p><pre><code>//app,js
app.config(function(RestangularProvider) {<pre><code>// add a response intereceptor
RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {
var extractedData;
extractedData = data.data;
return extractedData;
});</code></pre><p>});</code></pre></p></description><tags>angular.js, note2self</tags></item><item><title>Showing nested relationships details</title><link>https://alfrednutile.info/posts/87/</link><pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/87/</guid><description><p>This is soooo easy but this is always something this easy can be missed.
In this example we have a Property Model with Buildings that have an address.</p><p>So the model files look like this</p><pre><code>//Property.php<pre><code>//structures = buildings
public function structures()
{
return $this-&amp;gt;hasMany('Structure');
}</code></pre><p/></pre><pre><code>//Structure.php
public function address()
{
return $this->belongsTo("Address");
}</code></pre><p>So when I query a property I now get</p></p><pre><code> {
"id": 1,
"structures": [
{
"id": 6,
"address_id": 9,
"address": {
"id": 9,
"city": "Melvinport",
"state": "MT",
"zip": "75182",
"lat": -18.370000839233,
"lng": 36.270000457764,
"created_at": "2014-06-09 16:18:40",
"updated_at": "2014-06-09 16:18:40"
}</code></pre><p>Then in my query for properties I just included this with statement.</p><pre><code>
public function search($args)
{
$term = $args['terms'];
$found = $this->property->with('structures.address')
->where("name", "LIKE", "%{$term}%")
->get();
return $found;
}</code></pre><p>the dot notation basically showing load Structures and the Address data related to those.</p></description><tags>laravel, php, note2self</tags></item><item><title>Laravel and non email authentication</title><link>https://alfrednutile.info/posts/84/</link><pubDate>Tue, 20 May 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/84/</guid><description><p>Note to self. The Laravel docs are here that cover Authentication. But when it came time to use a filter and a non email based user name I had to modify the auth.basic filter, or any filter you want to use.</p><p>It ended up looking like this since I wanted user_account and not email to be the username for authentication.</p><pre><code>//app/filters.php
Route::filter('auth.basic', function()
{
return Auth::basic('user_account');
});</code></pre><p>You can see this option here</p><pre><code>//vendor/laravel/framework/src/Illuminate/Auth/Guard.php
public function basic($field = 'email', Request $request = null)</code></pre></description><tags>laravel, php, note2self</tags></item><item><title>Using Dot Env files to manage settings</title><link>https://alfrednutile.info/posts/76/</link><pubDate>Sun, 18 May 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/76/</guid><description><p>Wow. Included in Laravel<a href="http://laravel.com/docs/configuration#protecting-sensitive-configuration">http://laravel.com/docs/configuration#protecting-sensitive-configuration</a></p><ol><li><p>removed due to old news</p></li><li><p><a href="http://mattstauffer.co/blog/laravel-forge-using-environment-variables-for-environment-detection/">http://mattstauffer.co/blog/laravel-forge-using-environment-variables-for-environment-detection/</a></p></li></ol><h2 id="update">Update</h2><p>I really like the second link and how it sets up a .env file first to just return a simple string. After that you can have the .env.production.php or .env.local.php that laravel can look for.</p><pre><code>//bootstrap/start.php
$env = $app->detectEnvironment(function()
{
if (file_exists(__DIR__ . '/../.env')) {
return include(__DIR__ . '/../.env');
} else {
return 'production';
}
});</code></pre><p>Quite simple at that point to separate all of the environments.</p></description><tags>laravel, php, note2self</tags></item><item><title>Using Scopes in Laravel</title><link>https://alfrednutile.info/posts/69/</link><pubDate>Fri, 16 May 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/69/</guid><description><p>I have about 4 models that all share 2 common queries. I want all of them that are &ldquo;Published&rdquo; and or Ordered by a field called Order.</p><p>This does help with some<a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a> goals, but you could easily change or add to a scope as needed to update all the queries involved etc. Especially if at a later point you break this out into a Repository Patter to use a different ORM.</p><p>So using<a href="http://laravel.com/docs/eloquent#query-scopes">Scopes</a> I can make one shared query. All my Model classes extend a BaseModel class I made that looks like this</p><pre><code>//app/models/BaseModel.php
&lt;?php<p>class BaseModel extends \Eloquent {</p><pre><code>public function scopePublished($query)
{
return $query-&amp;gt;where(&amp;quot;published&amp;quot;, &amp;quot;=&amp;quot;, 1);
}
public function scopeOrderByOrder($query)
{
return $query-&amp;gt;orderBy('order');
}</code></pre><p>}</code></pre><p>So with any of the three class all I have to do is use these scopes.</p></p><pre><code>//app/controllers/PortfoliosController.php
public function adminIndex()
{
$portfolios = Portfolio::OrderByOrder()->get();
return View::make('portfolios.admin_index', compact('portfolios'));
}</code></pre><p>or even a Models relationships</p><pre><code>//app/models/Portfolio.php
public function projects()
{
return $this->hasMany('Project')->Published()->OrderByOrder();
}</code></pre><blockquote/></description><tags>laravel, php, note2self</tags></item><item><title>Mink Assertions</title><link>https://alfrednutile.info/posts/66/</link><pubDate>Tue, 06 May 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/66/</guid><description><p>Just a reminder this file as a good list of steps I can use. (will post more here shortly)</p><h3 id="mink-13">Mink 1.3</h3><pre><code>[behat/mink-extension/src/Behat/MinkExtension/Context/MinkDictionary.php](https://github.com/Behat/MinkExtension/blob/1.3/src/Behat/MinkExtension/Context/MinkDictionary.php)</code></pre></description><tags>note2self, behat</tags></item><item><title>Adding Column using sqlite caused error 'Cannot add a NOT NULL column with default value NULL'</title><link>https://alfrednutile.info/posts/64/</link><pubDate>Sun, 04 May 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/64/</guid><description><p>After the<a href="http://laravel.com/docs/upgrade#upgrade-4.1.26">security update</a> I had to add a remember_token to my user table.<a href="">security update</a></p><p>Since I am using sqllite locally I ended up with this error</p><pre><code>>php artisan migrate<p>[Illuminate\Database\QueryException]
SQLSTATE[HY000]: General error: 1 Cannot add a NOT NULL column with default value NULL (SQL: alter table "users" add column "remember_token" text not null)</code></pre><p>Finally<a href="http://forumsarchive.laravel.io/viewtopic.php?id=13320">this post</a> made it clear I had to make this nullable</p></p><pre><code>//migration file
/**
* Run the migrations.
*
* @return void
*/
public function up()
{
Schema::table('users', function(Blueprint $table)
{
$table->text('remember_token')->nullable();
});
}</code></pre><blockquote/></description><tags>laravel, php, note2self</tags></item><item><title>Angular and Scope - or - How not to waste time figuring out why a scope value is not 'working'</title><link>https://alfrednutile.info/posts/62/</link><pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/62/</guid><description><p>The creator of Angular notes it in this<a href="https://www.youtube.com/watch?v=ZhfUv0spHCY&amp;list=FLZa3QWzy1z1G9FIw02pytdA&amp;index=2">video</a> which is well worth the watch.</p><p>Basically when using includes or directives etc you may not be getting a scope value as easily because it is child scope and you may be looking in the parent scope.</p><h3 id="for-example">For example</h3><p>This include if I have an include and it references a model attribute like this</p><pre><code>//Some include
&lt;input ng-model="firstname"></code></pre><p>I may not get the results from that input that I expect. I may not get any. So to be safe it is best to make an Object for your data that then has keys to get the value from. For example</p><pre><code>//Some controller
$scope.person = {};
$scope.person.firstname = "Bob"</code></pre><p>Then back in that include</p><pre><code>//Some include
&lt;input ng-model="person.firstname"></code></pre><p>Tends to work better than fighting with $parent prefixes as such</p><pre><code>//Some include
&lt;input ng-model="$parent.firstname"></code></pre><p>Anyways glad I watched the video which meant I only wasted under an hour one this head scratcher.</p></description><tags>angular.js, note2self</tags></item><item><title>Behat Checkbox</title><link>https://alfrednutile.info/posts/61/</link><pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/61/</guid><description><p>Just a reminder to check if a checkbox is checked or not.</p><pre><code>Feature: Behat bug<p>Scenario:
Given I am on "/bug.html"
When I check "foo"
Then the "foo" checkbox should be checked</code></pre><p>or</p></p><pre><code>Feature: Behat bug
Scenario:
Given I am on "/bug.html"
When I check "foo"
Then the "foo" checkbox should not be checked</code></pre><p><a href="https://github.com/Behat/Behat/issues/298">https://github.com/Behat/Behat/issues/298</a></p></description><tags>behat, note2self</tags></item><item><title>Ng-if and Scope</title><link>https://alfrednutile.info/posts/47/</link><pubDate>Sat, 26 Apr 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/47/</guid><description><p>Scratched my head on this one for a few.</p><p>Inside of ng-if is a new scope. So a model on $scope.modelName will have to be referenced as $parent.modelName in the view.</p><p><img alt="" src="https://dl.dropboxusercontent.com/s/3rkj4et733pha3x/Screenshot%202014-04-26%2009.01.58.png" style="width: 869px; height: 262px;"/></p><p>Basically it worked on another page so I knew it should work here. When I moved it out of ng-if it worked so it had to be related to that. Finally this<a href="http://stackoverflow.com/questions/18342917/angularjs-ng-model-doesnt-work-inside-ng-if" target="_blank">post</a> made some sense of it</p><p>So now my filter works.</p><p><img alt="" src="https://photos-3.dropbox.com/t/0/AADIDwZp5vivK9ZGPUjRqT9-x6kuPteqCYXMRz_CfqRKLA/12/54803135/png/1024x768/3/1398657600/0/2/Screenshot%202014-04-26%2009.06.02.png/6qNuz9X5KcY5BZxJgTousavMbnCnmA755dLXMGaNdM0" style="width: 955px; height: 67px;"/></p></description><tags>note2self</tags></item><item><title>Drupal Services and Instantiating a Class</title><link>https://alfrednutile.info/posts/52/</link><pubDate>Tue, 04 Feb 2014 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/52/</guid><description><p>Been using Drupal Services on a project and there are some docs on how to use a Class with this. But to instantiate it I was using a function per class method. Instead I now I have one function that can instantiate the Class and method based on the 'callback' and the path 0 arg. Later I would like to just use the $_REQUEST type.</p><p>&nbsp;</p><p>You can see the service below starting on line 4</p><p>Note the callback then calls to this function on line 127 which then just instantiates the class for me and calls the method.</p><p>&nbsp;</p><p>&nbsp;</p><script src="https://gist.github.com/alnutile/8844092.js"/></description><tags>note2self</tags></item><item><title>PHPSH</title><link>https://alfrednutile.info/posts/35/</link><pubDate>Mon, 21 Oct 2013 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/35/</guid><description><p>Interactive command line on a Mac. So far this helped out</p><div style="background:#eee;border:1px solid #ccc;padding:5px 10px;">brew tap josegonzalez/php</div><div style="background:#eee;border:1px solid #ccc;padding:5px 10px;">brew install phpsh</div><p>and finally add this to the ~/.bash_profile</p><div style="background:#eee;border:1px solid #ccc;padding:5px 10px;">export PYTHONPATH=/usr/local/lib/python2.7/site-packages&nbsp;</div><p>and then re source your .bash_profile</p><div style="background:#eee;border:1px solid #ccc;padding:5px 10px;">souce ~/.bash_profile</div><p><span style="line-height: 1.6em;">now phpsh at the command line will give you an interactive shell&nbsp;</span></p></description><tags>note2self</tags></item><item><title>Installing mysql2 on a mac</title><link>https://alfrednutile.info/posts/22/</link><pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/22/</guid><description><a href="http://stackoverflow.com/questions/5919727/bundle-install-problem-mysql-h-is-missing" target="" rel=""><a href="http://stackoverflow.com/questions/5919727/bundle-install-problem-mysql-h-is-missing">http://stackoverflow.com/questions/5919727/bundle-install-problem-mysql-h-is-missing</a></a><br><br>This was key to get this install done.</description><tags>note2self</tags></item><item><title>Questions that may come in handy when interviewing</title><link>https://alfrednutile.info/posts/12/</link><pubDate>Sun, 09 Jun 2013 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/12/</guid><description><ol><li><p>Can you clearly define the roles and responsibilities you need me to fill?<br/></li><li><p>What would you need consider my hire a success in the next 6 months? In the next year?<br/></li><li><p>GitHub has a 0% employee turn over rate. How does your company try to prevent turnover?<br/></li><li><p>Using the past few years of your organization financial records do you have a sense of growth and constant revenue increase for this year?<br/></li><li><p>Is there a good amount of jobs or internal products in the hopper to make a new hire profitable?<br/></li><li><p>Considering a project that went well what do you think where some keys to it&rsquo;s success and vice verse for a project that did not go well?<br/></li><li><p>What are some long term goals of the company? Growth or stay the same size? SaSS products? etc<br/></li><li><p>How will your company look in 10 years?<br/></li><li><p>Technology is always changing and new needs come and old needs go or are less profitable. What do you see to be the next &ldquo;big thing&rdquo; for you company to focus on?<br/></li><li><p>What is your Marketing Strategy? Word of mouth? Conferences? Magazine and Radio adds or? Is this a focus in your company?<br/></li><li><p>Some companies enable / allow time during the week for staff to further their skills, give back to the community or build better tools and workflows for the company. This can at times be called 10% time etc. Just wondering if there is anything like that in place?<br/></li><li><p>What are the health benefits? How much, if available, is a family health plan, dental?<br/></li><li><p>Is there a retirement plan in effect?<br/></li><li><p>Where can I read or learn about the company polices for sick days, personal time etc.<br/></li><li><p>What is the yearly salary growth rate?<br/></li><li><p>As a manager and owner how to do grow to understand your employees strengths and weaknesses?<br/></li><li><p>What is most important to you, for an employee to grow in their strengths or fix their weaknesses?<br/></li><li><p>What are some ways your company allows the employee to grow in their role(s)?<br/></li></ol></description><tags>note2self</tags></item></channel></rss>