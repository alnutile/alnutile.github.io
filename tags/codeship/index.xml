<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>codeship on Alfred Nutile</title><link>https://alfrednutile.info/tags/codeship/</link><description>Recent content in codeship on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://alfrednutile.info/tags/codeship/index.xml" rel="self" type="application/rss+xml"/><item><title>Troubleshooting a Failed Build with Codeship and SauceLabs</title><link>https://alfrednutile.info/posts/192/</link><pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/192/</guid><description>In this article, I will continue where I left off with my previous post, Laravel and Behat Using Selenium and Headless Chrome, and explain what you can do when troubleshooting a failed build.
Checkout the article on CodeShip https://blog.codeship.com/troubleshooting-a-failed-build-with-codeship-and-saucelabs/</description></item><item><title>Codeship and Laravel for Continuous Integration</title><link>https://alfrednutile.info/posts/148/</link><pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate><guid>https://alfrednutile.info/posts/148/</guid><description>Getting going on Codeship and Laravel is pretty easy.
Once you setup codeship to work with your github account just pull in your repo and set your Testing scripts as follows. (they have a ui for ENV variables as well)
Codeship Testing Settings [easier copy paste bottom of article] You can do this in their UI as well. But at this point I am
Setting up the composer token for any private repos that application might have Setting up .</description></item></channel></rss>