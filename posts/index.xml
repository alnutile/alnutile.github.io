<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Alfred Nutile</title><link>https://alnutile.github.io/posts/</link><description>Recent content in Posts on Alfred Nutile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 25 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://alnutile.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows Dev Box Try 3 2020</title><link>https://alnutile.github.io/posts/267/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/267/</guid><description>Yes this is try number 3. See here for the first 2 goes at it.
With WSL2 out and a great laptop I wanted to give this another try.
MariaDB Even though the install is super simple see onnectondemand.pfizer.com/pfizermfa/sslvpn/pfizercontrollerlogin.jsp?profile=pfizerprofile&amp;amp;flowname=aidauth#no-back-button
I still end up having to do:
$ sudo mysql -u root # I had to use &amp;quot;sudo&amp;quot; since is new installation
mysql&amp;gt; USE mysql;
mysql&amp;gt; UPDATE user SET plugin='mysql_native_password' WHERE User='root';
mysql&amp;gt; FLUSH PRIVILEGES;
mysql&amp;gt; exit;
$ service mysql restart
To allow me to then use this command, for example maraidb -uroot -proot otherwise I have &amp;ldquo;Error connecting on localhost&amp;rdquo; type errors.</description></item><item><title>Using Python Lambda behind and ALB</title><link>https://alnutile.github.io/posts/266/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/266/</guid><description>Just a quick note to self about ALB and Lambda. When using Lambda behind and ALB for routing your response has to be formatted properly else you will get a 502.
https://pypi.org/project/alb-response/ solved this problem.
from alb_response import alb_response
def lambda_handler(event, context):
response_dict = process_the_event(event)
return alb_response(
http_status=200,
json=response_dict,
is_base64_encoded=False,
)
The results are easy enough to do by hand but I had a bit of time really finding out the format to respond with other than JavaScript and that casing there was a bit confusing.</description></item><item><title>Suggestions Around Building a Good Development Team in Parallel to Building a Good Product</title><link>https://alnutile.github.io/posts/265/</link><pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/265/</guid><description>I&amp;rsquo;m not a great programmer; I&amp;rsquo;m just a good programmer with great habits - Kent Beck.
Behind any project there has to be a processes in place to build a culture of good coding habits for developers and a process to help &amp;ldquo;enforce&amp;rdquo; it. Without such a foundation in place the product will never result into a long term sustainable solution. Below are some items I would like to highlight that I believe can help make a solid application and grow a solid team.</description></item><item><title>Lambda Tips</title><link>https://alnutile.github.io/posts/264/</link><pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/264/</guid><description>@WIP
Taking advantage of a running Lambda function and it&amp;rsquo;s state https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/ under the section Lambda function has a nice &amp;ldquo;trick&amp;rdquo; of setting above the class app = None
then later on it will see if that is set
def lambda_handler(event, context):
global app
# Initialize app if it doesn't yet exist
if app is None:
print(&amp;quot;Loading config and creating new MyApp...&amp;quot;)
config = load_config(full_config_path)
app = MyApp(config)
return &amp;quot;MyApp config is &amp;quot; + str(app.</description></item><item><title>Mocking in Python</title><link>https://alnutile.github.io/posts/263/</link><pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/263/</guid><description>Serious note to self.
I wanted to mock the Github module for python.
My simple class will get the ID of the team.
from github import Github, Team
from dotenv import load_dotenv
import os
import sys
import json
class GetTeamId:
def __init__(self):
load_dotenv()
self.team_id = 5555
self.token = os.environ.get(&amp;quot;GITHUB_TOKEN&amp;quot;)
self.client = Github(self.token)
self.org = self.client.get_organization('FooBar')
def handle(self, team_name):
teams = self.org.get_teams()
for team in teams:
if team_name == team.name:
print(&amp;quot;Team id&amp;quot;, team.</description></item><item><title>PHP Xdebug Visual Code</title><link>https://alnutile.github.io/posts/262/</link><pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/262/</guid><description>UPDATE: PHP 7.4 Every time I do value use php I then lose my xdebug setup :( here is me taking a moment to stop having that happen
vim /usr/local/etc/php/7.4/php.ini
Then add this
[PHP]
zend_extension=&amp;quot;xdebug.so&amp;quot;
xdebug.remote_enable = 1
xdebug.remote_autostart = 1
xdebug.remote_handler = dbgp
xdebug.remote_host = 127.0.0.1
xdebug.remote_port = 9000
xdebug.remote_mode = req
And then I am set again! Notice I am using 9000 above my insanity of using 9005 below has passed</description></item><item><title>Cognito and OAuth</title><link>https://alnutile.github.io/posts/261/</link><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/261/</guid><description>make your App Client
Make sure to check
Make some scopes uner Resource Server
Then &amp;ldquo;App Client Settings&amp;rdquo;
Connect it to &amp;ldquo;Cognito User Pool&amp;rdquo;
And choose &amp;ldquo;Client Credentials&amp;rdquo; from &amp;ldquo;Allowed OAuth Flow&amp;rdquo; choosing some scopes</description></item><item><title>PHPUnit CodeCoverage</title><link>https://alnutile.github.io/posts/260/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/260/</guid><description>PHPUnit CodeCoverage PHPUnit CodeCoverage
There is a ton of information about your code PHPUNit CodeCoverage can provide. At the root just making sure your coverage is at a certain level and if not where is it lacking.
With it&amp;rsquo;s xml output I use a script found here to check during our TravisCI builds if the code is meeting a required level.
Here is a gist of that script here and here is the .</description></item><item><title>Deploying Fargate</title><link>https://alnutile.github.io/posts/259/</link><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/259/</guid><description>Just some notes on the process. This will show how to deploy both a Staging build and then Production.
Staging Staging is done by TravisCI after all tests pass
Here is the gist of it the deploy step calls to a bash file.
deploy:
skip_cleanup: true
provider: script
script: bash deploy/travis_deploy.sh
on:
branch: mainline
Then
#!/usr/bin/env bash
# Bail out on first error
set -e
## Get the directory of the build script
DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;
## Get the current git commit sha
HASH=$(git rev-parse HEAD)
## Get any secret files
aws s3 cp s3://foo/environments/$STACK_ENV_FILE $DIR/app/packaged/.</description></item><item><title>How to Troubleshoot and Issue</title><link>https://alnutile.github.io/posts/258/</link><pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/258/</guid><description>&amp;hellip;</description></item><item><title>Bitbucket Pipeline</title><link>https://alnutile.github.io/posts/257/</link><pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/257/</guid><description>BitBucket has a nice feature call Pipelines https://bitbucket.org/product/features/pipelines for $0 you can, even for private repos have a decent CI flow.
Private repos CI Pipeline $0!!
It took a bit to get going though since the docs do not talk about PHP and MySQL in enough details. Here is what I ended up with for a bitbucket-pipelines.yml
# This is a sample build configuration for PHP.
# Check our guides at https://confluence.</description></item><item><title>JSONEditor, Vue and Vuex</title><link>https://alnutile.github.io/posts/256/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/256/</guid><description>As I post here I wanted to use JSONEditor as a component. But with Vuex I was able to reduce the work quite a ton. Here is my store for the json_field:
export default {
state: {
json_field: null,
},
getters: {
json_field: state =&amp;gt; {
return state.json_field;
}
},
mutations: {
jsonField(state, json_field) {
state.json_field = json_field;
}
},
};
Then my JSONEditor.vue component:
&amp;lt;template&amp;gt;
&amp;lt;div id=&amp;quot;jsoneditor&amp;quot; ref=&amp;quot;editor&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&amp;lt;script&amp;gt;
import JSONEditor from 'jsoneditor';
import { mapGetters } from 'vuex'
export default Vue.</description></item><item><title>Laravel Filter Scope on a Model</title><link>https://alnutile.github.io/posts/255/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/255/</guid><description>So I find myself writing searchable pages that, via an API or what not, someone can filter the page by different fields on the model. This can end up being a Controller class that does a lot of filters off the Request. Or it can be a Repository class that abstracts the business logic into one place for several related models.
But in many cases it really is just one Model being filtered.</description></item><item><title>Query Strings, Vue and Bootstrap Active Tab</title><link>https://alnutile.github.io/posts/254/</link><pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/254/</guid><description>In order to have the tabs and URL change as needed when the user lands on the page or clicks the tab I had to setup a few things.
First I setup the Vue.js router as seen here
Then my component will work out the rest.
Using BV
I have tabs and then I set those tabs as needed.
&amp;lt;b-tabs v-model=&amp;quot;activeTab&amp;quot;&amp;gt;
&amp;lt;b-tab title=&amp;quot;Settings&amp;quot; active &amp;gt;
&amp;lt;div class=&amp;quot;mt-4 alert alert-info&amp;quot;&amp;gt;
Manage related policies by clicking on the Tabs.</description></item><item><title>Valet Laravel 7.1 and 7.2</title><link>https://alnutile.github.io/posts/253/</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/253/</guid><description>..</description></item><item><title>Python3 Fixtures</title><link>https://alnutile.github.io/posts/252/</link><pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/252/</guid><description>Just a reminder using pickle I can easily make fixtures for testing.
When I get results from AWS SDK for example I can just
import pickle
with open(&amp;quot;fixtures/describe_task_defination.pickle&amp;quot;, 'wb') as fixture:
pickle.dump(self.stored_state_to_save, fixture)
Then when I want to feed it back in my test
import pickle
from unittest import TestCase
from unittest.mock import patch
from unittest import mock
import pickle
from task_image import TaskImage
def getFixture(name):
with open(&amp;quot;fixtures/&amp;quot; + name, 'rb') as fixture:
return pickle.</description></item><item><title>PHPStan Setup</title><link>https://alnutile.github.io/posts/251/</link><pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/251/</guid><description>There is a good episode here https://www.phproundtable.com/episode/using-static-analyzers-to-improve-our-php-codebases that talks about this.
The short of it is that it can easily catch some issues that your tests or IDE did not. For example I had a class name overlap due to a typo and it found it. From there it will output tons of other info that may just help guide you in your work.
The install is super easy as seen in the docs https://github.</description></item><item><title>Vuex External File</title><link>https://alnutile.github.io/posts/250/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/250/</guid><description>Setup Vuex with external file https://vuex.vuejs.org/installation.html
But after this make a file in the resources/assets/js called store.js then set it up as needed Here I will have one loading state
export default {
state: {
loading: true,
},
getters: {
loading: state =&amp;gt; {
return state.loading;
},
},
mutations: {
loading(state, loading) {
state.loading = loading;
}
}
};
now import it into your app.js
import store from './store';
and</description></item><item><title>Simple API_Token Auth for VueJS Components and Laravel</title><link>https://alnutile.github.io/posts/249/</link><pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/249/</guid><description>For those non Passport moments just a simple site that has VueJS Components that need to access routes with authentication in place.
Thanks to
https://pineco.de/vue-components-laravel-based-apis/ https://andrew.cool/blog/64/How-to-use-API-tokens-for-authentication-in-Laravel-5-2 Route File routes/api.php
Route::get('/trigger_contacts', function (Request $request) {
\Log::info(&amp;quot;Triggering Contacts&amp;quot;);
return response()-&amp;gt;json(null, 200);
})-&amp;gt;middleware('auth:api');
This will not work out of the box, you will get a 401. Let&amp;rsquo;s plug some things in.
Blade My main resources/views/layouts/app.blade.php
&amp;lt;script&amp;gt;
window.Laravel = {!! json_encode([
&amp;quot;apiToken&amp;quot; =&amp;gt; auth()-&amp;gt;user()-&amp;gt;api_token ?</description></item><item><title>Dusk Screenshots to S3 of Failing tests</title><link>https://alnutile.github.io/posts/248/</link><pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/248/</guid><description>I can be really annoying to troubleshoot a failed test in Dusk when using CI systems. What I ended up doing was setting up my project to send these files to S3 on fail.
Here are the steps
Setup You App This is just S3 storage so make sure you have a bucket and a folder in the bucket to write to. Basically for AWS you make an IAM with a key and secret and let it read/write to this folder.</description></item><item><title>Windows Dev Box Try 2 2018</title><link>https://alnutile.github.io/posts/247/</link><pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/247/</guid><description>Going to list somethings as I go.
The Mac, in spite of Apple, is a great developer experience, here is to hoping the Windows, with the help of Microsoft, grows to be better and better as the improve it via user feedback to make it a great development box.
Links This started it all https://char.gd/blog/2017/how-to-set-up-the-perfect-modern-dev-environment-on-windows
Webdev on Windows with WSL and VS Code
NPM and Composer install take a long time Some of this is the Windowsantimalware running.</description></item><item><title>Laravel Queue Restart and 'Why are my changes not showing up'</title><link>https://alnutile.github.io/posts/246/</link><pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/246/</guid><description>Just a note to self and others who have suffered this. If you are running queues locally, for what ever reason, then any changes you make in code you need to restart your queue daemon.
php artisan queue:restart
This will cause the daemon to look at a timestamp and restart if that is newer than before &amp;ldquo;e.g. you ran the above. And this will force the in memory process to update itself from the latest code base.</description></item><item><title>Lambda and Github Webhooks</title><link>https://alnutile.github.io/posts/245/</link><pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/245/</guid><description>Related to https://developer.github.com/webhooks/ and pushing data to Lambda AWS.
I can check the token by just having this check in my handler.
const crypto = require('crypto');
exports.handler = (event, context, callback) =&amp;gt; {
let headers = event.headers;
let body = event.body;
if (typeof body === 'object') {
body = JSON.stringify(event.body);
}
let github_event = headers['X-GitHub-Event'];
if (
github_event === undefined ||
typeof github_event !== 'string' ||
github_event.length &amp;lt; 1
) {
callback(null, {
statusCode: 400,
body: 'Missing X-GitHub-Event'
});
return;
}
let github_signature = headers['X-Hub-Signature'];
if (
github_signature === undefined ||
typeof github_signature !</description></item><item><title>Query Strings and VueJS</title><link>https://alnutile.github.io/posts/244/</link><pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/244/</guid><description>Quick way to make the url reflect the query string so the user can share the url and filters.
This is component based VueJS building so not an SPA But I still install &amp;quot;vue-router&amp;quot;: &amp;quot;^3.0.1&amp;quot;
And load it
import VueRouter from 'vue-router';
Vue.use(VueRouter);
The on the component I set a watch on the router.
watch: {
$route(to, from) {
this.setModelFromQueryString();
this.search();
}
},
In this case it will set the query strings then trigger the &amp;ldquo;search&amp;rdquo; to load the data into the page.</description></item><item><title>Debugging AWS SAM</title><link>https://alnutile.github.io/posts/243/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/243/</guid><description>This took a few to get just right, for one the command needs to be in the correct order
sam local invoke --event fixtures/latest_not_working.json -d 5858 GithubPushes
From here it gave me the output I was looking for:
sam local invoke --event fixtures/latest_not_working.json -d 5858 GithubPushes
2018/05/07 06:49:46 Successfully parsed template.yaml
2018/05/07 06:49:46 Connected to Docker 1.37
2018/05/07 06:49:46 Fetching lambci/lambda:nodejs8.10 image for nodejs8.10 runtime...
nodejs8.10: Pulling from lambci/lambda
Digest: sha256:a53fceb64e2339332dbc4117be8ec270f46fbe28d564499f1cf73035a1c5854e
Status: Image is up to date for lambci/lambda:nodejs8.</description></item><item><title>wip Fargate and Laravel</title><link>https://alnutile.github.io/posts/242/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/242/</guid><description>&amp;hellip;&amp;hellip;</description></item><item><title>Getting Started with Orchestra Testbench for Laravel Package Development</title><link>https://alnutile.github.io/posts/241/</link><pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/241/</guid><description>The goal of this article will allow one to setup a stand alone package working with it&amp;rsquo;s own tests and has access to all of the normal Laravel workflows outside of Laravel. So you can build it using the easier conventions and helpers Laravel offers.
Since my work will include database usage I will grab both packages:
composer require --dev &amp;quot;orchestra/testbench:&amp;lt;=3.5&amp;quot; &amp;quot;orchestra/database:v3.5.0&amp;quot;
I will setup my composer.json after this as such:</description></item><item><title>BrowserSync and Laravel</title><link>https://alnutile.github.io/posts/239/</link><pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/239/</guid><description>Quick reminder to take advantage of this amazing feature https://laravel.com/docs/5.6/mix#browsersync-reloading
No more reloading your browser.
yarn add browser-sync --dev
then to your webpack.mix.js e.g. the domain of the site you are working on.
mix.browserSync('foo.test');
finally
yarn run watch
Note turn off sourceMaps when running this else it can be kinda slow</description></item><item><title>GroupBy not Sorting by latest</title><link>https://alnutile.github.io/posts/240/</link><pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/240/</guid><description>Just to make this easy to find. I had a report to write which had numerous daily rows of the same related model data. So in this cause I was tracking servers and security reports.
My reports where daily like this
id server_id failed type 1 1 1 security 2 1 1 testing 3 1 0 testing But a groupBy here on server_id would return ID 1 so it would appear as if it was still failing.</description></item><item><title>Troubleshoot Laravel Socialite and Github login</title><link>https://alnutile.github.io/posts/238/</link><pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/238/</guid><description>This has driven me mad too many times. Basically you will get very little feedback if there is any issue getting the token from Github.
The problem is in this method.
public function user()
{
if ($this-&amp;gt;hasInvalidState()) {
throw new InvalidStateException;
}
$response = $this-&amp;gt;getAccessTokenResponse($this-&amp;gt;getCode());
$user = $this-&amp;gt;mapUserToObject($this-&amp;gt;getUserByToken(
$token = Arr::get($response, 'access_token')
));
return $user-&amp;gt;setToken($token)
-&amp;gt;setRefreshToken(Arr::get($response, 'refresh_token'))
-&amp;gt;setExpiresIn(Arr::get($response, 'expires_in'));
}
This is in the vendor/laravel/socialite/src/Two/AbstractProvider.php
So for example my real error was:</description></item><item><title>Wrapping Libraries in Services JS</title><link>https://alnutile.github.io/posts/237/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/237/</guid><description>Just a note to self that when using libraries like sweetalert for example and then I want to convert to sweetalert2, it would have saved a lot of time to wrap it into a &amp;ldquo;service&amp;rdquo; and import that.
For example I made this js file
services/Alerts.js:
import swal from 'sweetalert2';
export default {
send(title, message, error = false) {
swal(
{
type: error ? &amp;quot;error&amp;quot; : &amp;quot;success&amp;quot;,
title: title,
text: message
}
);
}
}
Then import it into the app or into the component that needs it.</description></item><item><title>Passing from Blade to VueJs</title><link>https://alnutile.github.io/posts/236/</link><pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/236/</guid><description>A lot of posts had this style.
I ended up just needing this:
The controller simply does this:</description></item><item><title>Docker Laravel and Cron</title><link>https://alnutile.github.io/posts/234/</link><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/234/</guid><description>This to this post here
for the idea.
Basically running cron in Docker is easy BUT once the Host had more than one Docker client cron stopped working. No clue why but to solve this I did two things
One made a script that was on the Docker Client
/scheduler.sh
#!/bin/bash
php /app/artisan schedule:run --verbose --no-interaction &amp;gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1
sleep 60
Then I did this in the Dockerfile
COPY scheduler.sh /
RUN chmod 755 /scheduler.</description></item><item><title>Laravel and AWS Rekognition</title><link>https://alnutile.github.io/posts/235/</link><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/235/</guid><description>&amp;hellip;.</description></item><item><title>Pusher and Laravel Updates</title><link>https://alnutile.github.io/posts/233/</link><pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/233/</guid><description>Getting error &amp;ldquo;Did you forget to specify the cluster when creating the Pusher instance&amp;rdquo;
Then need to set config/broadcasting.php:
'pusher' =&amp;gt; [
'driver' =&amp;gt; 'pusher',
'key' =&amp;gt; env('PUSHER_KEY'),
'secret' =&amp;gt; env('PUSHER_SECRET'),
'app_id' =&amp;gt; env('PUSHER_APP_ID'),
'options' =&amp;gt; [
//
],
],
to
'pusher' =&amp;gt; [
'driver' =&amp;gt; 'pusher',
'key' =&amp;gt; env('PUSHER_KEY'),
'secret' =&amp;gt; env('PUSHER_SECRET'),
'app_id' =&amp;gt; env('PUSHER_APP_ID'),
'options' =&amp;gt; [
&amp;quot;cluster&amp;quot; =&amp;gt; 'us2',
&amp;quot;encrypted&amp;quot; =&amp;gt; true
],
],
And if still calling pusher manually in your js update to be:</description></item><item><title>Dusk and Production (with Dusk disabled)</title><link>https://alnutile.github.io/posts/232/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/232/</guid><description>In DatabaseServiceProvider.php line 78:
Class 'Faker\Factory' not found
I had a ton if issues getting dusk on production, especially since production would run
composer install --no-dev --prefer-dist --no-interaction
To get around this issue I had to do a few things
One, if you are stuck and can not even run php artisan on the server:
rm bootstrap/cache/services.php
rm bootstrap/cache/packages.php
Two, turn off auto discovery for Dusk and just add it to the app/Providers/AppServiceProvider.</description></item><item><title>Testing Laravel API, Spark with Authentication</title><link>https://alnutile.github.io/posts/231/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/231/</guid><description>Just a reminder to self, if I want to test an API I made and need to pass and api_token
&amp;lt;?php
namespace Tests\Feature;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;
use App\Quote;
use Laravel\Spark\Repositories\TokenRepository;
class QuoteControllerTest extends TestCase
{
use RefreshDatabase;
public function testGettingAQuoteUsingToken()
{
$user = factory(\App\User::class)-&amp;gt;create();
$team = factory(\App\Team::class)-&amp;gt;create();
$team-&amp;gt;users()-&amp;gt;attach($user-&amp;gt;id, ['role' =&amp;gt; &amp;quot;member&amp;quot;]);
$quote = factory(\App\Quote::class)-&amp;gt;create([
'team_id' =&amp;gt; $team-&amp;gt;id,
'posted_by' =&amp;gt; $user-&amp;gt;id
]);
$token = new TokenRepository();
$token = $token-&amp;gt;createToken(
$user,
'get_quote',
[]
)-&amp;gt;token;
$this-&amp;gt;json('GET', &amp;quot;/api/teams/{$team-&amp;gt;id}/quotes/random?</description></item><item><title>Example of Making Documentation in Markdown with PDF Output</title><link>https://alnutile.github.io/posts/230/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/230/</guid><description>Many of the sites I make have a need for a Support page for staff to know how to do things like add content, manage users etc. This article will cover how I go about writing my help docs in Markdown and then displaying it on the website with an option to print as PDF.
Writing MarkDown To begin with, I made the help doc in mine. I made a sample one here</description></item><item><title>Serverless Python and Example App WIP</title><link>https://alnutile.github.io/posts/229/</link><pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/229/</guid><description>There are good docs on this http://serverless.com platform. For Python
https://serverless.com/framework/docs/providers/aws/examples/hello-world/python/#hello-world-python-example https://github.com/serverless/examples I will cover some items here I need to do time after time.
Tagging ENV settings Testing Testing Example file test_cf_backuper.py:
import unittest
import mock
from mock import MagicMock
from get_buckets import GetBuckets
import boto3
real_client = boto3.client('cloudformation')
import logging
import json
from CFBackuper import CFBackuper
logging.basicConfig()
log = logging.getLogger()
log.setLevel(logging.DEBUG)
class TestHandler(unittest.TestCase):
def test_get_one_template(self):
client = CFBackuper()
results = client.</description></item><item><title>VueJS Transition Helper</title><link>https://alnutile.github.io/posts/228/</link><pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/228/</guid><description>There are docs on how to get a Transition to take effect when an item loads https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components
But I was not having much luck with this using https://uiv.wxsm.space/carousel.
I ended up making a quick helper function to keep it from looking like exploded elements.
You can see the results of this change here
So the steps followed per the docs above for the most part.
Add to my scss file:</description></item><item><title>Laravel Asset Notes WIP</title><link>https://alnutile.github.io/posts/227/</link><pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/227/</guid><description>This is just a reminder area of all the minor details as I find them that I need to remember
FontAwesome yarn add font-awesome
Then in my resources/assets/sass/app.scss
// Fonts
@import url(&amp;quot;https://fonts.googleapis.com/css?family=Raleway:300,400,600&amp;quot;);
// Variables
@import &amp;quot;variables&amp;quot;;
// Bootstrap
@import &amp;quot;~bootstrap-sass/assets/stylesheets/bootstrap&amp;quot;;
@import &amp;quot;~font-awesome/css/font-awesome&amp;quot;; My webpack is the default
mix.js('resources/assets/js/app.js', 'public/js')
.sass('resources/assets/sass/app.scss', 'public/css');
set to go!
If using Less
#resources/assets/less/app.less
@import &amp;quot;./../../../node_modules/font-awesome/less/font-awesome&amp;quot;;</description></item><item><title>PostMark SMTP for sending Notifications and Password Resets</title><link>https://alnutile.github.io/posts/226/</link><pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/226/</guid><description>I have been using PostMark for years https://postmarkapp.com for sending emails, e.g. password reset and more.
They have an API but to get going with SMTP all the info is here
Basically get your KEY and use it in your .env like this:
MAIL_DRIVER=smtp
MAIL_HOST=smtp.postmarkapp.com
MAIL_PORT=587
MAIL_USERNAME=foo
MAIL_PASSWORD=foo
MAIL_ENCRYPTION=tls
And all should work. Just make sure to
Register the domain in their domain ui Set the from info in Laravel</description></item><item><title>Dusk Notes</title><link>https://alnutile.github.io/posts/225/</link><pubDate>Sun, 10 Dec 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/225/</guid><description>Just keeping a list of gotchas around dusk.
use RefreshDatabase not working Cost: 1 hour lost
Basically I had to go back to the slower &amp;ldquo;use DatabaseMigrations;&amp;rdquo; otherwise it would not work. The user was null.
Links: This thread helped
Headless or not Cost: 1 hour lost or less
For some odd reasons my tests started coming up blank.
I turned off headless in this class DuskTestCase
protected function driver()
{
$args = [
'--disable-gpu',
'--headless'
];
if (env(&amp;quot;HEADLESS_OFF&amp;quot;)) {
$args = [
'--disable-gpu'
];
}
$options = (new ChromeOptions)-&amp;gt;addArguments($args);
return RemoteWebDriver::create(
'http://localhost:9515',
DesiredCapabilities::chrome()-&amp;gt;setCapability(
ChromeOptions::CAPABILITY,
$options
)
);
}
And this way it still works on travis.</description></item><item><title>Continuous Delivery in a NutShell</title><link>https://alnutile.github.io/posts/224/</link><pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/224/</guid><description>Mainline Workflow &amp;ldquo;Once you achieve a certain frequency of releases, around once a week or so, it no longer makes sense to branch for release.&amp;rdquo; - Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
tl;dr I want to do a tl;dr of a workflow, that two years ago seemed insane, but now would seem impossible for me to work without and still feel efficient. The topic of Continuous Delivery and Mainline workflow.</description></item><item><title>Laravel Shift and Your Day Job</title><link>https://alnutile.github.io/posts/223/</link><pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/223/</guid><description>** UPDATED November 22 2017 **
The service Laravel Shift is a great way to save a ton of time and keep your Laravel application up to date.
But sometimes you may not be allowed to share access to your company Github account for this process since it is hard to limit access at the repo level.
In this case I have a quick way to get your work done and back into the company repo IF that is okay with your boss.</description></item><item><title>Wrapping JSONEditor in Vue as Well as Laravel Blade</title><link>https://alnutile.github.io/posts/222/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/222/</guid><description>UPDATED November 05 2017
This will cover how to make a JSONEditor component that I can then use in a Blade template and listen to events.
You will end up with this:
First making sure I have all the packages I need:
//package.json
&amp;quot;devDependencies&amp;quot;: {
&amp;quot;axios&amp;quot;: &amp;quot;^0.17&amp;quot;,
&amp;quot;bootstrap-sass&amp;quot;: &amp;quot;^3.3.7&amp;quot;,
&amp;quot;cross-env&amp;quot;: &amp;quot;^5.0.1&amp;quot;,
&amp;quot;jquery&amp;quot;: &amp;quot;^3.2&amp;quot;,
&amp;quot;laravel-mix&amp;quot;: &amp;quot;^1.0&amp;quot;,
&amp;quot;lodash&amp;quot;: &amp;quot;^4.17.4&amp;quot;,
&amp;quot;vue&amp;quot;: &amp;quot;^2.1.10&amp;quot;
},
&amp;quot;dependencies&amp;quot;: {
&amp;quot;select2&amp;quot;: &amp;quot;^4.0.5&amp;quot;,
&amp;quot;jsoneditor&amp;quot;: &amp;quot;^5.9.6&amp;quot;
}
And to load it into my bootstrap file:</description></item><item><title>Laravel, Dusk and Valet</title><link>https://alnutile.github.io/posts/221/</link><pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/221/</guid><description>By default I set my phpunit.xml to use test as my database:
&amp;lt;php&amp;gt;
&amp;lt;env name=&amp;quot;APP_ENV&amp;quot; value=&amp;quot;testing&amp;quot;/&amp;gt;
&amp;lt;env name=&amp;quot;CACHE_DRIVER&amp;quot; value=&amp;quot;array&amp;quot;/&amp;gt;
&amp;lt;env name=&amp;quot;SESSION_DRIVER&amp;quot; value=&amp;quot;array&amp;quot;/&amp;gt;
&amp;lt;env name=&amp;quot;MAIL_DRIVER&amp;quot; value=&amp;quot;log&amp;quot;/&amp;gt;
&amp;lt;env name=&amp;quot;QUEUE_DRIVER&amp;quot; value=&amp;quot;sync&amp;quot;/&amp;gt;
&amp;lt;env name=&amp;quot;DB_DATABASE&amp;quot; value=&amp;quot;test&amp;quot;/&amp;gt; &amp;lt;-- this line here &amp;lt;/php&amp;gt;
But with Valet and Dusk this led to the browser using my default database and not test but the PHPUnit test itself was using test so the user I created and logged in as was not available in the browser.</description></item><item><title>WIP AWS Batch and Workers with Laravel</title><link>https://alnutile.github.io/posts/220/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/220/</guid><description>Sending Docker Commands to Get A Task Done This article will show how to get started with AWS Batch and Docker to spin up a &amp;ldquo;worker&amp;rdquo;
By the time you are done reading it you will:
Have a Docker image to run your command in. Deploy the Docker image to AWS ECR And Run a Task on the AWS Batch system, or a 100 tasks, does not matter. Finally you will have the scripts needed to fully build AWS Batch with CloudFormation, e.</description></item><item><title>Mocking Models OutSide of Laravel</title><link>https://alnutile.github.io/posts/219/</link><pubDate>Thu, 24 Aug 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/219/</guid><description>This all comes down to me using https://github.com/orchestral/testbench
With this in place I can work on an external library as if it is in Laravel.
The one place I ran into trouble on though was mocking model related methods like all for example a model Foo being called as \App\Foo::all() was hard to mock cause all is stacic:
//\Illuminate\Database\Eloquent\Model::all
public static function all($columns = ['*'])
{
return (new static)-&amp;gt;newQuery()-&amp;gt;get(
is_array($columns) ?</description></item><item><title>Serverless and Custom Tags for Resources</title><link>https://alnutile.github.io/posts/217/</link><pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/217/</guid><description>Because much of serveless.com is CloudFormation based, you can easily update existing resources. They talk about this feature here
For me this was required for adding tags
# you can add CloudFormation resource templates here
resources:
Resources:
ServerlessDeploymentBucket:
Properties:
Tags:
- { Key: &amp;quot;project&amp;quot;, Value: &amp;quot;${self:provider.project}&amp;quot; }
- { Key: &amp;quot;environment&amp;quot;, Value: &amp;quot;${opt:stage, self:provider.stage}&amp;quot; }
- { Key: &amp;quot;parent_project&amp;quot;, Value: &amp;quot;${self:custom.parent}&amp;quot; }
- { Key: &amp;quot;key_contact&amp;quot;, Value: &amp;quot;${self:custom.contact}&amp;quot; }
- { Key: &amp;quot;billing_ref&amp;quot;, Value: &amp;quot;${self:custom.</description></item><item><title>Versions and Branching a Library</title><link>https://alnutile.github.io/posts/218/</link><pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/218/</guid><description>At work Andrew Cavanagh and I had to, using many examples on of libraries we use, to finalize how to branch and version our libraries.
There should be one branch for each major version (1.0, 2.0, etc).
These should be the only branches besides master.
Releases within these versions should be tagged following semantic versioning guidlines (v1.2.3 for example).
In general, all work should be done via pr from the master branch and then merged into whatever the current branch is.</description></item><item><title>Setting Up My Mac</title><link>https://alnutile.github.io/posts/215/</link><pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/215/</guid><description>Great videos here:
https://laracasts.com/lessons/dev-machine-setup https://laracasts.com/lessons/dev-machine-setup-phpstorm Items MindNode EverNote TextExpander Dropbox 1Password Alfred Extensions DND https://github.com/mlantz/DND-Alfred-Workflow Clipboard History which seems to be part of it but needs to be put on Misc Napkin Scanner Moom SequelPro iTerm SSH Keys Bartender Brew PHP7 (using brew https://developerjack.com/blog/2016/installing-php71-with-homebrew/) Composer Python Setup Composer Global path touch ~/.bashrc
Then
export PATH=~/.composer/vendor/bin:$PATH
then source ~/.</description></item><item><title>Serverless, AWS API Gateway and Authentication</title><link>https://alnutile.github.io/posts/214/</link><pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/214/</guid><description>Just a note2self really.
Setting up Auth was super easy
As seen below I had to add to my serverless.yml authorizer
addQuote:
handler: quote/handler.add
events:
- http:
path: quote
method: post
cors: true
authorizer: aws_iam
authorizer: aws_iam
From here I then needed, in this case Postman, to pass an AWS KEY and SECRET made for this app.
When making the user I attached this Policy to the user
{
&amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
&amp;quot;Statement&amp;quot;: [
{
&amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
&amp;quot;Action&amp;quot;: [
&amp;quot;execute-api:Invoke&amp;quot;
],
&amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:execute-api:us-east-1:AWS_ID:*/dev/POST/quote&amp;quot;
}
]
}
I an easily make this in the serverless.</description></item><item><title>IronFunctions and PHP</title><link>https://alnutile.github.io/posts/213/</link><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/213/</guid><description>A colleague of mine Dave Hall poing out IronFunctions. And being in the pursuit of serverless options especially ones that even have examples of PHP I had to give it a try. This post is a note2self in that the intro here has some bits that need fixing BUT I think it is close and I hope to add more updates here about the tool.
All the steps below will only work once you take on the initial hello world here.</description></item><item><title>Testing a trait with PHPUnit</title><link>https://alnutile.github.io/posts/212/</link><pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/212/</guid><description>In an effort to start recording test coverage using vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover I had some issues with traits being seen.
I tried numerous approaches my default being just to Use the trait in the test class. I ended up with this as I found some online info about trait testing here that references a now missing post by Sebastian Bergman the maker of PHPUnit
&amp;lt;?php
use Symfony\Component\Yaml\Yaml;
/**
* Test class for {@see PfawsYaml}.</description></item><item><title>Machine to Machine Laravel Passport</title><link>https://alnutile.github.io/posts/211/</link><pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/211/</guid><description>Recently I needed to create an OAuth around Machine to Machine authentication here
The docs are good but I must have missed something obvious or maybe I just well missed something obvious.
Basically I just kept getting Unauthenticated. and this makes sense since I received the token using
grant_type:client_credentials
client_id:1
client_secret:foobar
So after following the docs I had to then to the following
Route::middleware('auth:api')-&amp;gt;get('/user', function (Request $request) {
return $request;
});
with</description></item><item><title>Meetings and Cross TimeZone Teams</title><link>https://alnutile.github.io/posts/210/</link><pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/210/</guid><description>Wrote and article https://medium.com/@alnutile/meetings-and-cross-timezone-teams-c9b833c43bfb on trying to find the blanance of meetings and focus time.
Saved here as well for when they go out of business :)
Meetings and Cross TimeZone Teams Meetings are needed, most of them at least, and when I worked with a team that was all in the same timezone I was easily able to say, “Between 1–4 I am coding/focusing” or “Between 6am and 9am” I am coding.</description></item><item><title>Dusk and Homestead</title><link>https://alnutile.github.io/posts/209/</link><pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/209/</guid><description>Working on learning Dusk and really excited to get going with it.
But running it in homestead proved to be a bit tricky.
After following the docs and running php artisan dusk not much happened. Sure if I ran it on my Mac and it just worked but my tests needed to do migrations and what not and I want to keep my work in Homestead.
So a few steps later and it worked thanks to this post https://github.</description></item><item><title>Simple Slack Trait Get Request and return Response</title><link>https://alnutile.github.io/posts/208/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/208/</guid><description>In this example I get a message from Slack (but this can be any message) and then send results back to Slack.
One thing to keep in mind you really want to get your code working out side of Slack since you cannot easily do a push, test, fix, push, test as we normally do when working locally with a browser.
Get your PHPUnit working for a class that will handle the payload, then you know when you plug it in to the Slack Route it will &amp;ldquo;just work&amp;rdquo;.</description></item><item><title>We Code in the Context of our Quoting</title><link>https://alnutile.github.io/posts/207/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/207/</guid><description>This article can be listened too here or in your favorite podcast player
Whether you are working Waterfall, or Agile we still need to quote out the time it will take for new features . We still need to give the product owners, or the people with the money, a sense of timing. And it is this skill or lack thereof that drives the experience we are going to have when we code.</description></item><item><title>Instantiate Request for Testing</title><link>https://alnutile.github.io/posts/206/</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/206/</guid><description>When I need to make a request for a test in which the Class is expecting a \Illuminate\Http\Request I can do this for a file based or non file based request.
/**
* @Then I should be able to upload an image file
*/
public function iShouldBeAbleToUploadAnImageFile()
{
$request = new \Illuminate\Http\Request();
$file = new \Symfony\Component\HttpFoundation\FileBag();
$path = base_path('tests/fixtures/example_profile.jpg');
$originalName = 'example_profile.jpg';
$upload = new \Illuminate\Http\UploadedFile($path, $originalName, null, null, null, true);
$file-&amp;gt;set('profile_image', $upload);
$request-&amp;gt;files = $file;
$this-&amp;gt;repo = new \App\Repositories\ProfileRepository();
$results = $this-&amp;gt;repo-&amp;gt;uploadUserProfileImage($request);
PHPUnit::assertTrue($results, &amp;quot;Repo did not return true&amp;quot;);
PHPUnit::assertTrue(File::exists(public_path('storage/' .</description></item><item><title>Load Testing With Behat</title><link>https://alnutile.github.io/posts/205/</link><pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/205/</guid><description>The team I am a part of write our tests using Behat for the most part as we try to practice BDD and take advantage of how writing in Gherkin can lead our code to be more inline with the language of the business.
In this case I wanted to replicate some file upload and processing that the system will be doing during a training that will happen next week as 4 users are uploading files and going through the entire process.</description></item><item><title>Example Job Format for Queue</title><link>https://alnutile.github.io/posts/204/</link><pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/204/</guid><description>Sometimes I just need this info to remind myself what a job looks like in a queue and how to mock it etc.
In this case I have a simple class that will be used to dispatch the job.
&amp;lt;?php
namespace App\Jobs;
use Illuminate\Bus\Queueable;
use Illuminate\Queue\SerializesModels;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Support\Facades\Log;
class RandomWordJob implements ShouldQueue
{
use InteractsWithQueue, Queueable, SerializesModels;
public $payload = [];
public function __construct($payload)
{
$this-&amp;gt;payload = $payload;
}
/**
* Execute the job.</description></item><item><title>LarScanner simple foundation for building a good Laravel Security Scanner</title><link>https://alnutile.github.io/posts/203/</link><pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/203/</guid><description>Just the start to a new library that I hope others will help out on https://github.com/alfred-nutile-inc/larscanner
There is a roadmap in the readme.md but basically how to start adding more and more features on this to protect our applications built in Laravel.</description></item><item><title>Super Simple Sending Messages to Slack from Laravel</title><link>https://alnutile.github.io/posts/202/</link><pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/202/</guid><description>Laravel 5.3 has this feature. But for those not using that version or who just want to see how easy this is, I will show here how I been doing this for some time now.
Here is the main Class I call to send a message. As you can see I am using Guzzle, in this case &amp;quot;guzzlehttp/guzzle&amp;quot;: &amp;quot;^6.1&amp;quot; but others versions can work.
&amp;lt;?php
namespace App\Services;
use Illuminate\Support\Facades\Log;
use GuzzleHttp\Client;
class SlackWrapper
{
/**
* @var Client $client
*/
protected $client;
protected $slack_url = false;
public function __construct(Client $client)
{
$this-&amp;gt;client = $client;
}
public function sendMessageToSlack($message)
{
try {
$this-&amp;gt;client-&amp;gt;request(
'POST',
$this-&amp;gt;getSlackUrl(),
[
'body' =&amp;gt; $this-&amp;gt;message($message)
]
);
} catch (\Exception $e) {
Log::debug(sprintf(&amp;quot;Error sending to Slack %s&amp;quot;, $e-&amp;gt;getMessage()));
}
}
protected function message($message)
{
return json_encode(
[
'text' =&amp;gt; $message
]
);
}
public function getSlackUrl()
{
if (!</description></item><item><title>Pusher and PHP 'Error Failed to connect to Pusher'</title><link>https://alnutile.github.io/posts/201/</link><pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/201/</guid><description>Note to self. Getting this error &amp;ldquo;Error Failed to connect to Pusher&amp;rdquo; but the front end is working. And you know your credentials are correct, AND it was working just a day ago check the date and time on your machine/vm.
Mine had drift and since it was behind by 20 minutes I would end up with this error.
Oy what a waste or time x 2 :(</description></item><item><title>Model Boot Events</title><link>https://alnutile.github.io/posts/200/</link><pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/200/</guid><description>Just a quick not to modify model data upon an event. Laravel docs talk about it here
But putting it in another class can get kinda confusing when you are trying to debug or update the code.
In this example I have a model Board and I want to, upon saving, make sure it has some key data.
protected static function boot()
{
static::bootTraits();
/** @var \App\Board $model */
static::creating(function ($model) {
if (!</description></item><item><title>Queue onConnection</title><link>https://alnutile.github.io/posts/199/</link><pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/199/</guid><description>If you look here https://laravel.com/docs/5.3/queues#customizing-the-queue-and-connection
Under &amp;ldquo;Dispatching To A Particular Connection&amp;rdquo;
But if running test and local where I just want sync or database
if(env('QUEUE_DRIVER') != 'sync' &amp;amp;&amp;amp; env('QUEUE_DRIVER') != 'database') {
$concentration_curve = (new ImportDataColumnWorker($this-&amp;gt;job_notice-&amp;gt;model, $this-&amp;gt;job_notice-&amp;gt;payload))
-&amp;gt;onConnection('columns');
} else {
$concentration_curve = (new ImportDataColumnWorker($this-&amp;gt;job_notice-&amp;gt;model, $this-&amp;gt;job_notice-&amp;gt;payload));
}
$this-&amp;gt;dispatch($concentration_curve);</description></item><item><title>Guzzle 5 or 6 or ????</title><link>https://alnutile.github.io/posts/198/</link><pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/198/</guid><description>Sometimes Guzzle can be a real pain to use in an library. You choose 5.x and then some other library needed 6.x and heck you really did not care either way.
One interesting package example is aws/aws-sdk-php
If you look in it&amp;rsquo;s composer.json you will see this
&amp;quot;require&amp;quot;: {
&amp;quot;php&amp;quot;: &amp;quot;&amp;gt;=5.5&amp;quot;,
&amp;quot;guzzlehttp/guzzle&amp;quot;: &amp;quot;~5.3|~6.0.1|~6.1&amp;quot;,
&amp;quot;guzzlehttp/psr7&amp;quot;: &amp;quot;~1.0&amp;quot;,
&amp;quot;guzzlehttp/promises&amp;quot;: &amp;quot;~1.0&amp;quot;,
&amp;quot;mtdowling/jmespath.php&amp;quot;: &amp;quot;~2.2&amp;quot;
},
So it allows for other libraries to choose as needed and it will deal with the different versions as needed.</description></item><item><title>Chrome update equals Behat Fail</title><link>https://alnutile.github.io/posts/197/</link><pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/197/</guid><description>Had trouble running behat after I ran updates on Chrome
My typical install https://www.npmjs.com/package/selenium-standalone
did not fix it, even try brew but no luck.
All I needed to do was go here and grab the lastest one for my Mac. For me this was the 32 bit.
Then after running
selenium-standalone install
to see where the old one was installed I used that path to unzip this file and move it there /usr/local/lib/node_modules/selenium-standalone/.</description></item><item><title>Laravel and Casting 'JSON_UNESCAPED_UNICODE' Data</title><link>https://alnutile.github.io/posts/196/</link><pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/196/</guid><description>Had a interesting issue with Laravel and the cast feature
Basically a Chinese set of characters would be converted to their unicode counterpart http://php.net/manual/en/json.constants.php
So saving &amp;ldquo;你好，世界&amp;rdquo; would become &amp;ldquo;\u4f60\u597d\uff0c\u4e16\u754c&amp;rdquo; in the database.
Making it hard to search for &amp;ldquo;你好，世界&amp;rdquo;
But I just wanted this data as it was, so later I could query the data and interact with it in it&amp;rsquo;s default character state.
Digging into the Model class vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.</description></item><item><title>Laravel 5.x Cookbook Chat Area</title><link>https://alnutile.github.io/posts/195/</link><pubDate>Thu, 20 Oct 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/195/</guid><description>Topics Events Questions ComicClientInterface But there is no mention about layout file Just wanted to make a place to centralize some comments and feedback around the book Laravel Cookbook
I will do my best to reply and help with the book as needed.
The main repo for this book is here btw
Just add comments below and I will get them.
Events Wednesday October 26th 2pm EST Will host a live hangout for all to join and ask question.</description></item><item><title>Laravel Throttle Feature using IP address as Key</title><link>https://alnutile.github.io/posts/193/</link><pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/193/</guid><description>NOTE: 5.3, for 5.2 see ending update
The Laravel Throttle feature here is a great addition to the framework. By default it uses the username and the IP for the key to count attempts.
But I want to cover how to switch that to use an IP only and not the username. A good example of why is a hacker running through a list of emails and passwords just trying to break into sites where that user would use the same password as the site the got the list from.</description></item><item><title>Throttle Password Reset</title><link>https://alnutile.github.io/posts/194/</link><pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/194/</guid><description>Laravel Throttle works on failed auth attempts but how about password resets?
Here is what I made my app/Http/Controllers/Auth/PasswordController.php look like
5.3 &amp;lt;?php
namespace App\Http\Controllers\Auth;
use App\Http\Controllers\Controller;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use Illuminate\Foundation\Auth\ResetsPasswords;
use Illuminate\Foundation\Auth\ThrottlesLogins;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Validator;
class PasswordController extends Controller
{
/*
|--------------------------------------------------------------------------
| Password Reset Controller
|--------------------------------------------------------------------------
|
| This controller is responsible for handling password reset requests
| and uses a simple trait to include this behavior.</description></item><item><title>Troubleshooting a Failed Build with Codeship and SauceLabs</title><link>https://alnutile.github.io/posts/192/</link><pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/192/</guid><description>In this article, I will continue where I left off with my previous post, Laravel and Behat Using Selenium and Headless Chrome, and explain what you can do when troubleshooting a failed build.
Checkout the article on CodeShip https://blog.codeship.com/troubleshooting-a-failed-build-with-codeship-and-saucelabs/</description></item><item><title>Amazon Machine Learning</title><link>https://alnutile.github.io/posts/191/</link><pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/191/</guid><description>This is mostly a note2self.
Amazon Machine learning is one way to dig into things. For me it mean not getting bogged down in Python or tons of formulas for now.
Basically I watched their main video here to get a view of how things worked.
Then I read their docs here and follow this tutorial.
After that I took a moment to watch another video of how they used ML to help process messages from Twitter https://www.</description></item><item><title>Mockery Behat and Laravel</title><link>https://alnutile.github.io/posts/190/</link><pubDate>Wed, 31 Aug 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/190/</guid><description>This is a quick view of using this library https://github.com/laracasts/Behat-Laravel-Extension and a Mockery Trait (should be included soon but for now put the below in your features/bootstrap folder and run composer dump).
The example here is a method that looks like this
features/bootstrap/ExampleContext.php
$partial = Mockery::mock(\App\Broadcasts\ColumnsAndRowsDoneProcessingEmail::class, [$this-&amp;gt;segment])-&amp;gt;makePartial();
$partial-&amp;gt;shouldReceive('sendEmail')-&amp;gt;never();
$repo = App::make(\App\JobsRepository::class);
$partial-&amp;gt;handle($repo);
When this is done running I would get pass BUT if I change it never to once and run it again I still get green :(</description></item><item><title>Adding Basic Auth to Forge</title><link>https://alnutile.github.io/posts/189/</link><pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/189/</guid><description>make the username and password http://www.htaccesstools.com/htpasswd-generator/
admin:$apr1$wLiZDI74$/D64sfIdn74kHc6F.76Qv/
And save it in a file called, for example, htpass
Now scp -v htpass forge@your_server:~/
Go to forge and find the site and click &amp;ldquo;Edit Nginx Configuration&amp;rdquo;
Now in there just add these lines
auth_basic &amp;quot;Restricted Area&amp;quot;;
auth_basic_user_file /home/forge/htpass;
As seen below
I think that will restart/reload Nginx, if does not go to the page that list your &amp;ldquo;Server Details&amp;rdquo; and restart there</description></item><item><title>Uploading Images in Behat both at Domain Level and UI Level</title><link>https://alnutile.github.io/posts/188/</link><pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/188/</guid><description>The goal here is as follows
@fileCleanup @javascript
Scenario: Uploading File
Given I already made a Segmentation and am editing it
Then I add file and the system will process it
And I can not add another file till it is done
And when the system is done I can add another file
In this case they are large files and I want to get an MVP for the users to interact with so one file at a time is enough for now.</description></item><item><title>Behat Laravel Domain Testing Inside Out</title><link>https://alnutile.github.io/posts/187/</link><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/187/</guid><description>I will cover the use of FormRequest, Mockery, Behat and more in this article.
The article will show how to test your Domain code, in this case I mean testing how the code will work outside of the Routing and Controller layer of your Application. But what this will lead to is a &amp;ldquo;lego&amp;rdquo; like moment of plugging in these parts to your Controller so you know it will work. Of course it will be tested as well during the UI testing.</description></item><item><title>Example of Mixing it up Behat BDD and PHPUnit</title><link>https://alnutile.github.io/posts/185/</link><pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/185/</guid><description>Just wanted to show two things here. One is how sometimes I end up in PHPUnit to work out some ideas. And two how awesome it is to refactor thanks to PHPUnit.
In this example I had a Class responsible for saving data, we&amp;rsquo;ll call FooSaveData. But before that save it has to process some incoming information against another set of data to save the results of that. So I made another class we&amp;rsquo;ll call FooProcessData.</description></item><item><title>Keeping a Controller Method Simple</title><link>https://alnutile.github.io/posts/186/</link><pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/186/</guid><description>When I am done with a controller, done mocking up ideas and ready for some long term code, then I think this is the most information a Controller method should have.
public function updateFoor($id, $foo) {
try {
$results = $this-&amp;gt;someRepoOrServiceClass($Id, $foo); return Response::json(['data' =&amp;gt; [], 'message' =&amp;gt; &amp;quot;Success doing something&amp;quot;], 202);
} catch (\Exception $e) {
$message = sprintf(&amp;quot;Error doing something %s&amp;quot;, $e-&amp;gt;getMessage());
Log::debug($message);
return Response::json(['data' =&amp;gt; [], 'message' =&amp;gt; $message], 400);
}
}
At this point I have someRepoOrServiceClass well tested outside of this Controller.</description></item><item><title>Homestead and Auto Setup Hosts File</title><link>https://alnutile.github.io/posts/184/</link><pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/184/</guid><description>I discovered this Vagrant Plugin https://github.com/cogitatio/vagrant-hostsupdater thanks to https://github.com/cogitatio/vagrant-hostsupdater when setting up Windows and thought why can&amp;rsquo;t I use it on my Mac?
Just like the docs say on their github site
vagrant plugin install vagrant-hostsupdater
Then update your ruby file that setups up homestead
subl ~/Homestead/scripts/homestead.rb
This will look like Then
subl ~/.homestead/Homestead.yaml
And make that like this
Then run provision
cd ~/Homestead
vagrant provision
That is it now your /etc/hosts file will look like this</description></item><item><title>API Token Based Access Laravel 5.1 (Yet another article on this)</title><link>https://alnutile.github.io/posts/183/</link><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/183/</guid><description>API Token Laravel 5.2 introduces the auth token guard setup which is way simpler than Oauth. Also it does not assume a certain level of complexity in needs like Scopes and expirations of tokens that we do not need for our internal app to app communications.
We are using 5.1 so this will implement it.
See some docs here https://gistlog.co/JacobBennett/090369fbab0b31130b51
For creating a user the AppServiceProvider boots the user record and if no api_token is present it will set one.</description></item><item><title>Contract Testing</title><link>https://alnutile.github.io/posts/182/</link><pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/182/</guid><description>Sometimes we need to make sure external APIs have not changed. Some of those we have control over some of those we do not.
Either way we can run tests daily, weekly or as needed, outside of our tests we run with every push to Github, that will make sure this API is still delivering what we expect.
This video gave me some good tips on this one being to keep your Contract tests outside of your Domain Logic.</description></item><item><title>Getting Going Quickly Windows, Behat and Selenium</title><link>https://alnutile.github.io/posts/181/</link><pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/181/</guid><description>Quick Install Steps
Vagrant and Homestead This was easy I just followed these steps here and I was done. For me I used Vmware but Virtualbox is fine.
Windows in Selenium Two easy steps
Step 1 Install Node.js SUPER EASY https://nodejs.org/en/download/
Install the .exe, restart your console and you have node!
Step 2 Install Selenium Just go here and you are done! https://www.npmjs.com/package/selenium-standalone
After those steps I run it in a powershell and the server is running and I am set to use it.</description></item><item><title>AWS, S3 Storage and limited Visibility</title><link>https://alnutile.github.io/posts/180/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/180/</guid><description>Storing files on S3 is great. And many times those files are private so I only want to give temporary access to them. Using Laravel Storage I can interact with the file-system quite easily and seamlessly especially between Cloud and Local.
In this case I want to return a file only for 10 minutes
public function getSignedUrl($filename_and_path, $expires_minutes = '10')
{
$client = Storage::disk('s3')-&amp;gt;getDriver()-&amp;gt;getAdapter()-&amp;gt;getClient();
$bucket = env('BUCKET');
$command = $client-&amp;gt;getCommand('GetObject', [
'Bucket' =&amp;gt; $bucket,
'Key' =&amp;gt; $filename_and_path
]);
$request = $client-&amp;gt;createPresignedRequest($command, Carbon::now()-&amp;gt;addMinutes($expires_minutes));
return (string) $request-&amp;gt;getUri();
}
That is it!</description></item><item><title>Behat and Uploading Files to a Form Even on Remote Selenium2 Servers</title><link>https://alnutile.github.io/posts/179/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/179/</guid><description>Just had to tackle this issue so making some notes for later here :)
Updated and more detailed here
I run selenium on my Windows PC and before that my Mac, either one would have had this issue since my test is running side my VM. This meant when I needed to run a test to interact with a form to upload an image that image path was relative to the machine (VM) that I started the test on and not the Browser that was being manipulated by Selenium2.</description></item><item><title>Laravel, PHPUnit, Require_Once on Routes</title><link>https://alnutile.github.io/posts/178/</link><pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/178/</guid><description>Going crazy running PHPUnit all and getting fail but you run the one route and it works!
The difference is require versus require_once in PHPUnit tests.
For example
require __DIR__ . '/../ConfigurationExamples/routes.php';
Route::get('/', function () {
return view('welcome');
});
Now when I run my tests I get 100% pass
/**
* @test
*/
public function should_auth_user()
{
$user = factory(\App\User::class)-&amp;gt;create();
$results = $this-&amp;gt;call('GET', sprintf(&amp;quot;/example/auth_token?api_token=%s&amp;quot;, $user-&amp;gt;api_token));
$this-&amp;gt;assertEquals(200, $results-&amp;gt;status());
$this-&amp;gt;assertEquals(&amp;quot;foo&amp;quot;, $results-&amp;gt;getContent());
}
/**
* @test
*/
public function should_fail_user()
{
$results = $this-&amp;gt;call('GET', '/example/auth_token');
$this-&amp;gt;assertEquals(302, $results-&amp;gt;status());
}
/**
* @test
*/
public function should_pass_auth_with_no_token()
{
$user = factory(\App\User::class)-&amp;gt;create();
$this-&amp;gt;be($user);
$results = $this-&amp;gt;call('GET', '/example/auth_token');
$this-&amp;gt;assertEquals(200, $results-&amp;gt;status());
$this-&amp;gt;assertEquals(&amp;quot;foo&amp;quot;, $results-&amp;gt;getContent());
}
The moment I change it to require_once I get fails on the last or second to last one, it is not consistant except that it will fail.</description></item><item><title>Remote Behat Testing with Laravel</title><link>https://alnutile.github.io/posts/177/</link><pubDate>Wed, 03 Feb 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/177/</guid><description>Listen Here
This document will cover how to use a Behat specific API to setup a site for testing. What this includes is setting up a Scenario so that it has the data you need to run a test. This makes it possible not to rely on Seed data for this. This will allow us to run behat tests from remote machines as well as run tests in parallel.
Why not seed data?</description></item><item><title>CMS or NOT CMS</title><link>https://alnutile.github.io/posts/176/</link><pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/176/</guid><description>This video just shows and example of a NOT CMS we built for a client. Sure they can add content and manage it BUT they did not need all the extra features that come with Wordpress or Drupal like workflows, versioning, intricate roles etc.
Also they had a huge need to easily deploy all of this work. For example the Help system can have updates deployed to all of the sites via one Github commit.</description></item><item><title>Feature Flags In Laravel</title><link>https://alnutile.github.io/posts/175/</link><pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/175/</guid><description>Overview Library is https://github.com/friendsofcat/laravel-feature-flag/
Listen here
Watch https://youtu.be/4nq7FyHQj8I
We are working on using FeatureFlags or Toggles in our applications. For one we are aiming to do all our work on mainline branch at all times so this would be a key coding discipline to use FeatureFlags so we can hide a feature in progress knowing it will not interfere with the application. For example if a hotfix or another feature is ready to go to production we can push that with no worries of the in progress feature.</description></item><item><title>Install Webdriver to get testing with Behat and Javascript</title><link>https://alnutile.github.io/posts/174/</link><pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/174/</guid><description>This is so I do not forget!
UPDATED: go here instead https://www.npmjs.com/package/selenium-standalone
1) sudo npm -g install webdriver-manager 2) sudo webdriver-manager update &amp;ndash;chrome 3) Get Java for the Mac Googled El Capitan Java and takes me to Apples site to get the right version of java
https://support.apple.com/kb/dl1572?locale=en_US
4) webdriver-manager start That is it!</description></item><item><title>Slack Custom Commands and Laravel to Make an American to British Translater</title><link>https://alnutile.github.io/posts/173/</link><pubDate>Sun, 17 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/173/</guid><description>Laravel or anything you are comfortable with making a Route and Response will work fine really.
This &amp;ldquo;messaging as a platform&amp;rdquo; is a new world for me, challenging my way of thinking in many ways. Some things just do not need a authentication of their own, a UI, etc they just need a place to get info from, or do something with some info etc.
In this case I made a really simple &amp;ldquo;Custom Slash Command&amp;rdquo; to translate British Slang to American and American to British (so I can sound cooler!</description></item><item><title>Then Benefits of Building a Clickable POC as a Developer</title><link>https://alnutile.github.io/posts/172/</link><pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/172/</guid><description>Listen here
This article will focus on web applications and not really be about building websites eg a company blog, college website etc.
This will cover two things. One, how helpful it can be to make a clickable Proof of Concepts (POC), not just with images, or tools the spit out html but instead just enough javascript and base theme to help &amp;ldquo;sell&amp;rdquo; the idea, or more importantly to help Product Owners see the possibilities that are not too far out of reach.</description></item><item><title>Put It All Into Version Control Even Composer!</title><link>https://alnutile.github.io/posts/171/</link><pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/171/</guid><description>Update: September 06 2016
We stopped doing this. I do not think it is a bad idea but we ended up going with CodeDeploy on AWS. So after our CI does a Composer install and all passes, CodeDeploy will just bundle everything up as a Zip file and deploy that to the server.
Or Listen here
Another article about this written by Loran Jane Mitchell Using Composer Without GitIgnoring Vendor</description></item><item><title>Why Side Projects are Good For Me</title><link>https://alnutile.github.io/posts/170/</link><pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/170/</guid><description>You can Listen here!
First let me define what a “Side Project” is. In this case a “Side Project” is something you are not being paid for and something that you have complete control over. It can even be something you are just trying out some new ideas on. The reason it can not be something you are being paid for and ideally something you are fully in charge of is so you&amp;rsquo;re not under any pressure to deliver but you have time to explore, to learn, to try new ideas and overall build confidence.</description></item><item><title>Do I Really Need This Route Anymore?</title><link>https://alnutile.github.io/posts/169/</link><pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/169/</guid><description>Clean out old code can be hard. When your application has numerous javascript widgets, blade templates and forms you can not easily say what routes are being used. But with just a few artisan commands we can easily make this happen.
Also this can help with knowing what routes your Tests are NOT covering.
Package can be found here as well.
The Commands to Get Started php artisan make:model RouteUsage
php artisan make:middleware RouteUsageTracker
php artisan make:migration route_usage_tracker_table
php artisan make:console RouteReport
Migration &amp;lt;?</description></item><item><title>Logout User After Inactivity Laravel and Milddleware</title><link>https://alnutile.github.io/posts/168/</link><pubDate>Sat, 14 Nov 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/168/</guid><description>Original Post http://laravel-tricks.com/tricks/session-timeout-for-logged-in-user
This Middleware made it super easy to satisfy a requirement to log the user out after 15 minutes of in activity.
I added only a few touchups.
One was the getTimeOut this was so I can work locally and override this by setting it to a large number. I could even use it to just bypass the whole things for a bit since on local I rather not deal with this.</description></item><item><title>CentOS or RedHat and Laravel</title><link>https://alnutile.github.io/posts/167/</link><pubDate>Thu, 05 Nov 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/167/</guid><description>Got Ideas from here An Ansible Tutorial
Just wrapped up setting up two RedHat servers (version 7) and one CentOS Virtual box so I could deploy a Laravel site.
Code is here
Thanks to Ansible it was not as bad as it could have been.
I am not an ansible expert just getting into it as we need to do this more. What these scripts will do is
Setup a CentOS Vagrant box Setup a Server for Laravel and Queues SupervisorD Setup up SSHD to be key based only you can remove this Setup Cron to run scheduler Setup SSL if you make the keys for this Redirect to https for site Local VM Step one is to install Ansible on your Mac and then vim /etc/ansible/hosts</description></item><item><title>Quick Tip Forcing More Complex Passwords in Laravel</title><link>https://alnutile.github.io/posts/166/</link><pubDate>Wed, 21 Oct 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/166/</guid><description>With the great Laravel Docs I will quickly show how to &amp;ldquo;encourage&amp;rdquo; the user to set a better password.
Going through the standard docs for Authentication we end up with a registration form.
Then in the AuthController that comes with Laravel I modify it a bit.
protected function validator(array $data)
{
$messages = ['password.regex' =&amp;gt; &amp;quot;Your password must contain 1 lower case character 1 upper case character one number&amp;quot;];
return Validator::make($data, [
'name' =&amp;gt; 'required|max:255',
'email' =&amp;gt; 'required|email|max:255|unique:users',
'password' =&amp;gt; 'required|confirmed|min:8|regex:/^(?</description></item><item><title>Image Uploads, Laravel, Angular and Flow.js</title><link>https://alnutile.github.io/posts/165/</link><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/165/</guid><description>Here is one combination out of many to make this happen.
The libraries are
https://github.com/flowjs/ng-flow
and
https://github.com/flowjs/flow-php-server
Model and Imageable Resource What I like about this is we can make 1 controller to manage uploads. That controller will upload the file, place it into the correct folder, and setup the relationship to the resource.
In this example the Resource will be a Contact.
So I then follow Laravel docs to create the Polymorphic Imageable/Photo example http://laravel.</description></item><item><title>Simple Example of Making Code Easier to Read</title><link>https://alnutile.github.io/posts/164/</link><pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/164/</guid><description>Just a quick example
Before
public function updateMarketoFolder($folder)
{
/**
* If parent id found in array then use it else use root
*/
if(isset($this-&amp;gt;folders_and_meta_data[$folder['id']]))
{
$folder_meta_data = $this-&amp;gt;folders_and_meta_data[$folder['id']];
}
elseif(isset($folder['parent']) &amp;amp;&amp;amp; isset($folder['parent']['id']) &amp;amp;&amp;amp; isset($this-&amp;gt;folders_and_meta_data[$folder['parent']['id']]))
{
$folder_meta_data = $this-&amp;gt;folders_and_meta_data[$folder['parent']['id']];
}
else
{
$folder_meta_data = $this-&amp;gt;folders_and_meta_data['root'];
}
if(isset($folder['name']))
$this-&amp;gt;names[] = $folder['name'] . '--' . $folder_meta_data-&amp;gt;id;
$this-&amp;gt;folders_and_meta_data[$folder['id']] = $folder_meta_data;
}
Here is what we can do to make it easier to come back to six months later.</description></item><item><title>Spark Setup Issue</title><link>https://alnutile.github.io/posts/163/</link><pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/163/</guid><description>During the install https://github.com/laravel/spark I kept getting this error
Problem 1
- Installation request for laravel/spark-installer ~1.0 -&amp;gt; satisfiable by laravel/spark-installer[v1.0.0].
- Conclusion: remove illuminate/support v4.2.17
- laravel/spark-installer v1.0.0 requires illuminate/support ~5.0 -&amp;gt; satisfiable by illuminate/support[v5.0.0, v5.0.22, v5.0.25, v5.0.26, v5.0.28, v5.0.33, v5.0.4, v5.1.1, v5.1.13, v5.1.16, v5.1.2, v5.1.6, v5.1.8].
- Can only install one of: illuminate/support[v5.0.0, v4.2.17].
- Can only install one of: illuminate/support[v5.0.22, v4.2.17].
- Can only install one of: illuminate/support[v5.</description></item><item><title>Adding Expose IDS to Laravel MiddleWare</title><link>https://alnutile.github.io/posts/162/</link><pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/162/</guid><description>The library is https://github.com/enygma/expose
&amp;ldquo;Expose is an Intrusion Detection System for PHP loosely based on the PHPIDS project (and using it&amp;rsquo;s ruleset for detecting potential threats).&amp;rdquo;
After seeing it in the latest PHPArch magazine on security I wanted to give it a try.
Of course this is far from a complete look.
Step 1 Make the MiddleWare
php artisan make:middleware ExposeMiddleware
Then add Expose as noted in the docs.</description></item><item><title>Note To Self: A VirtualBox machine with the name 'homestead' already exists.</title><link>https://alnutile.github.io/posts/161/</link><pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/161/</guid><description>Since I know this will happen again I want to remind myself and others how to fix it.
I had this error A VirtualBox machine with the name 'homestead' already exists. when doing my normal vagrant up. I got some help at http://stackoverflow.com/questions/26993903/a-virtualbox-machine-with-the-name-homestead-already-exists but it was not made too clear.
Here are the exact steps for me to fix this
Run vboxmanage list vms
This will output a list
&amp;quot;homestead&amp;quot; {5dc30604-8ebe-4060-8966-4881958e6bf5}
&amp;quot;boot2docker-vm&amp;quot; {38af33d4-7ebc-4498-a80e-39711a08b413}
&amp;quot;settler_default_1434987271004_24349_1440846292799_16470&amp;quot; {2c80bf94-99b8-4b51-95a0-034dddae8c33}
Then I took the id of homestead 5dc30604-8ebe-4060-8966-4881958e6bf5 and did</description></item><item><title>Laravel and Angular Widgets e.g. Non SPA (Single Page Application) Pattern</title><link>https://alnutile.github.io/posts/160/</link><pubDate>Wed, 26 Aug 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/160/</guid><description>Not all apps need to be an SPA (Single Page Application). Sure they have their place but in most cases the task might benefit from just a Blade template and Angular widget. This saves you from having to write an angular route which can be a tedious duplication of work. Also Blade is fast and fun to work with.
Step One Add Data to Global Window Using the Transform PHP Vars to JavaScript you can easily start to inject some content into your templates, if needed, to setup the data your Angular widget can use to build out it&amp;rsquo;s elements.</description></item><item><title>Laravel 5.1 and Oauth</title><link>https://alnutile.github.io/posts/159/</link><pubDate>Fri, 14 Aug 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/159/</guid><description>Laravel 5.1 and Oauth2 Server Video coming soon&amp;hellip;
Example repo is here https://github.com/alnutile/oauth_how_to
The library we will use is
https://github.com/lucadegasperi/oauth2-server-laravel
This will setup a server both client_type and password_type for Grant Types.
Coming to Terms with Oauth Coming to terms with this stuff is long and tedious. The docs are here https://github.com/lucadegasperi/oauth2-server-laravel/ wiki will help and then these lead to the League docs as well http://oauth2.thephpleague.com/
There is also a podcast interview with the Alex Bilbie who made the League Oauth Library http://fullstackradio.</description></item><item><title>Talking to the Methods Not the Properties</title><link>https://alnutile.github.io/posts/158/</link><pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/158/</guid><description>Just a team related style guide item.
When talking to properties in a class talk via a getter.
&amp;lt;?php
class Foo {
protected $client;
function bar()
{
return $this-&amp;gt;client-&amp;gt;getAll();
}
}
Would then become
&amp;lt;?php
class Foo {
protected $client;
function bar()
{
return $this-&amp;gt;getClient-&amp;gt;getAll();
}
function getClient()
{
return $this-&amp;gt;client;
}
}
There are a few reasons for this
Consistent style for the team Changes to that property can be done in one place.</description></item><item><title>Using your project docs inside the application</title><link>https://alnutile.github.io/posts/157/</link><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/157/</guid><description>The applications I work on have markdown docs. These can be in the docs/ folder for example as docs/webhooks.md
But some of these docs have value to the user of the UI not just the developer, and when we include these docs inside the application repo it is a TON easier to just update them as you fix and make new features in the codebase.
You can have the best of both worlds with a simple to use library https://github.</description></item><item><title>Behat for Product Owners</title><link>https://alnutile.github.io/posts/156/</link><pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/156/</guid><description>As a developer putting all the business requirements into action and then showing that it is working as expected can be hard. 10 different google docs, 3 different views of what are the goals etc.
And as a Product Owner you are not sure if the work is done without always clicking around. And more importantly you do not even know if the developer really gets what you want.
This is where Behat / Gherkin (cause that name really gets Product Owners feeling comfortable) can help out.</description></item><item><title>HasMany Through a Many to Many</title><link>https://alnutile.github.io/posts/155/</link><pubDate>Wed, 29 Jul 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/155/</guid><description>This thread helped a lot http://laravel.io/forum/03-04-2014-hasmanythrough-with-many-to-many
In the end I had this query
class MetaData extends Model {
public function meta_values()
{
return $this-&amp;gt;belongsToMany(\App\MetaValue::class);
}
public function meta_data_types()
{
return $this-&amp;gt;belongsToMany(\App\MetaValue::class)
-&amp;gt;leftJoin('meta_data_type_meta_value', 'meta_values.id', '=', 'meta_data_type_meta_value.meta_value_id')
-&amp;gt;leftJoin('meta_data_types', 'meta_data_types.id', '=', 'meta_data_type_meta_value.meta_data_type_id')
-&amp;gt;groupBy('meta_data_types.id')
-&amp;gt;select('meta_data_types.*');
}
Model meta_data_types had not direct relation to this MetaData model class. But MetaData did relate to meta_values.
So using that info I could get the related MetaValues and then the related MetaDataTypes and that was it.</description></item><item><title>Adding RSS to Your Site</title><link>https://alnutile.github.io/posts/154/</link><pubDate>Sun, 12 Jul 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/154/</guid><description>Using this library https://packagist.org/packages/thujohn/rss
We simply install but using a forked version so it works with L5
&amp;quot;require&amp;quot;: {
&amp;quot;php&amp;quot;: &amp;quot;&amp;gt;=5.5.9&amp;quot;,
&amp;quot;laravel/framework&amp;quot;: &amp;quot;5.1.*&amp;quot;,
&amp;quot;thujohn/rss&amp;quot;: &amp;quot;dev-master&amp;quot;
},
&amp;quot;repositories&amp;quot;: [
{
&amp;quot;type&amp;quot;: &amp;quot;vcs&amp;quot;,
&amp;quot;url&amp;quot;: &amp;quot;https://github.com/majortom731/rss-l4.git&amp;quot;
}
],
composer update
And as they note in the docs
'providers' =&amp;gt; array(
'Thujohn\Rss\RssServiceProvider',
)
Now in my route I simply put
Route::get('feed', function() {
$feed = Thujohn\Rss\RssFacade::feed('2.0', 'UTF-8');
$feed-&amp;gt;channel(array('title' =&amp;gt; 'Incomings.io Blog and News', 'description' =&amp;gt; 'Latest News and Blog postings for Incomings.</description></item><item><title>Bower and Elixir</title><link>https://alnutile.github.io/posts/153/</link><pubDate>Tue, 07 Jul 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/153/</guid><description>Trying to make this workflow more easy. Right now it seems that since bower ends up putting all assets into bower_components (css and js) and elixir wants assets by default in resources/assets/css and js that I need to have an easy way to get the files via bower and then get them to the needed folders.
For most project we actually leave the files in the git repo for faster ui testing builds and we rarely run updates but when we do it would be nice for bower to also be able to work and not mess any of the above settings not cause me to have to manually move files around.</description></item><item><title>Quick way to Request Json from Angular and return from Laravel</title><link>https://alnutile.github.io/posts/152/</link><pubDate>Mon, 06 Jul 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/152/</guid><description>I simply want to make sure to return json from my app more easily even on errors. So in Angular I set my app.js as such
(function(){
'use strict';
angular.module('app', []);
angular.module('app').run(
function($http)
{
$http.defaults.headers.common.Accept = 'application/json';
}
);
})();
Then in my Laravel routes I can
public function index(Request $request)
{
$blogs = Blog::orderBy('created_at', 'desc')-&amp;gt;paginate(5);
$customPagination = new CustomPagination($blogs);
if($request-&amp;gt;header('Accept') == 'application/json')
return $blogs;
return view('blogs.index', compact('blogs', 'customPagination'));
}
Then I can share the same route with Angular that I do with my Blade templates as needed.</description></item><item><title>Laravel 5.1 Behat and Codeship</title><link>https://alnutile.github.io/posts/151/</link><pubDate>Sat, 04 Jul 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/151/</guid><description>The new integration testing features with Laravel 5.1 make Behat almost not needed BUT we do a lot of AngularJs work and instead of using karma to test the ui we enjoy using behat since we like the Gherkin Syntax and how we can easily code custom steps in PHP.
Here are some steps to getting behat going on Codeship so you get full CI even of Angular.
This is all based off of https://github.</description></item><item><title>Conventions to Help Minimize your ENV File</title><link>https://alnutile.github.io/posts/150/</link><pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/150/</guid><description>UPDATE
I think we can also do AWS_BUCKET=foo_$APP_ENV directly in the env file, see https://mattstauffer.co/blog/laravel-5.0-environment-detection-and-environment-variables
Andrew Cavanagh The .env file can be a real pain and get pretty big. And even though there is a tool, I made :), to move it around easily here is a thought on reducing it a bit so it is the same on all environments.
Typically we have dev, stage, production, testing and local.</description></item><item><title>Codeship and Laravel for Continuous Integration</title><link>https://alnutile.github.io/posts/148/</link><pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/148/</guid><description>Getting going on Codeship and Laravel is pretty easy.
Once you setup codeship to work with your github account just pull in your repo and set your Testing scripts as follows. (they have a ui for ENV variables as well)
Codeship Testing Settings [easier copy paste bottom of article] You can do this in their UI as well. But at this point I am
Setting up the composer token for any private repos that application might have Setting up .</description></item><item><title>Start to end Billing using Stripe, Cashier and Laravel 5.1</title><link>https://alnutile.github.io/posts/149/</link><pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/149/</guid><description>Start to end Billing and Laravel As usual the Laravel docs rock but sometimes it is nice to see this from start to end.
With that said read those docs first and then come back here. Also the public repo can be seen here
Setup your Stripe Yup this is easy. Note the test/live dash board. Super nice to see the different processes.
Turn it to test and make your plans.</description></item><item><title>Logging in Iron.io Workers</title><link>https://alnutile.github.io/posts/147/</link><pubDate>Thu, 04 Jun 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/147/</guid><description>Previously I wrote about how to use Lumen and Iron.io this adds to that by modifying the logging technique.
As noted the worker is basically a class that sets things up, hands off the payload to the handler and returns the results.
&amp;lt;?php
use App\CompareFuseHandler;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Log;
require_once __DIR__ . '/libs/bootstrap.php';
$payload = getPayload(true);
fire($payload);
function fire($payload)
{
$logs = storage_path('logs/lumen.log');
Log::info(sprintf(&amp;quot;Starting Worker at %s&amp;quot;, \Carbon\Carbon::now()));
try
{
//Empty Logs
$handler = App::make('App\CompareFuseHandler');
$handler-&amp;gt;handle($payload);
echo &amp;quot;Success See Logs Below: \n&amp;quot;;
Log::info(sprintf(&amp;quot;Ending Worker at %s&amp;quot;, \Carbon\Carbon::now()));
echo File::get($logs);
}
catch(\Exception $e)
{
echo &amp;quot;Error See Logs Below: \n&amp;quot;;
Log::info(sprintf(&amp;quot;Ending Worker at %s&amp;quot;, \Carbon\Carbon::now())); echo File::get($logs);
}
}
The nice thing about above is that all throughout my handler class I can start the do Log::info('foo') to store up a report for the end of the process on either Success or Error.</description></item><item><title>Writing Commands and Scheduling in Laravel 5.1</title><link>https://alnutile.github.io/posts/146/</link><pubDate>Fri, 29 May 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/146/</guid><description>Wow, writing Artisan Commands just become even easier. And plugging it into Scheduler makes for a great combination.
For example we need to clean out a folder every so many minutes. The example below I also for fun play around with progress and table output.
Note too protected $signature = 'approve:cleanuploads {--minutes=10}'; simplifies theargument and options features.
&amp;lt;?php namespace App\Console\Commands;
use Carbon\Carbon;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\File;
class CleanUploadsCommands extends Command
{
protected $rootPath = 'public/storage';
protected $maxMinutes = 10;
protected $deleted = [];
protected $signature = 'approve:cleanuploads {--minutes=10}';
protected $description = 'Clean all the uploads in the storage folder for security reasons';
protected $pdfFiles = [];
protected $files = [];
public function __construct()
{
parent::__construct();
}
public function handle()
{
$this-&amp;gt;maxMinutes = $this-&amp;gt;option('minutes');
$this-&amp;gt;anyPdfFilesHere();
$this-&amp;gt;deletePdfFiles();
$this-&amp;gt;outputResults();
}
protected function anyPdfFilesHere()
{
$this-&amp;gt;files = File::allFiles(base_path($this-&amp;gt;rootPath));
foreach($this-&amp;gt;files as $file)
{
if (File::mimeType($file) == 'application/pdf')
{
$this-&amp;gt;pdfFiles[] = $file;
}
}
}
private function deletePdfFiles()
{
if(count($this-&amp;gt;pdfFiles) &amp;gt; 0)
{
$this-&amp;gt;output-&amp;gt;progressStart(count($this-&amp;gt;pdfFiles));
foreach($this-&amp;gt;pdfFiles as $file)
{
$modified = File::lastModified($file);
$minutes = Carbon::createFromTimestamp($modified)-&amp;gt;diffInMinutes();
if($minutes &amp;gt; $this-&amp;gt;maxMinutes)
{
$this-&amp;gt;setDeleted(['filename' =&amp;gt; $file]);
File::delete($file);
$this-&amp;gt;output-&amp;gt;progressAdvance();
}
}
}
}
private function outputResults()
{
if(count($this-&amp;gt;deleted) &amp;gt; 0)
{
$this-&amp;gt;output-&amp;gt;progressFinish();
$headers = ['File Name and Path'];
$this-&amp;gt;table($headers, $this-&amp;gt;getDeleted());
}
else
{
$this-&amp;gt;comment(sprintf(&amp;quot;No files older than %d minutes&amp;quot;, $this-&amp;gt;maxMinutes));
}
}
public function getDeleted()
{
return $this-&amp;gt;deleted;
}
public function setDeleted($deleted)
{
$this-&amp;gt;deleted[] = $deleted;
}
}
Then in the Kernel.</description></item><item><title>Easily Create Fixture Data from Remote Services and Refresh Mock Data</title><link>https://alnutile.github.io/posts/145/</link><pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/145/</guid><description>Oops Codeship and Laravel is here
Easily Create Fixture Data from Remote Services and Refresh Mock Data We have integration tests that hit remote apis like Github, S3, DynomoDB, our own APIs etc and we do not want to hit those during out tests but we also want to make sure we have the real data. So when one of those APIs change then our mock data can be refreshed to see if our systems really work with it.</description></item><item><title>Adding Cache to your Laravel Site</title><link>https://alnutile.github.io/posts/144/</link><pubDate>Fri, 22 May 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/144/</guid><description>Using Laravel&amp;rsquo;s built in Cache facade is super easy. I will quickly cover how to use it for showing your Posts and showing a Post.
Example 1 Show a Post This example will first check the Cache to see if there is a match for post_ID of the post if not it will make one. Also I happen to do the same for the sidebar.
public function show($id)
{
$post = Cache::rememberForever('post_' .</description></item><item><title>Iron.io and Lumen</title><link>https://alnutile.github.io/posts/143/</link><pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/143/</guid><description>Lumen Iron Worker What and why A worker is a great way to run tasks as needed taking the load off your applications server and greatly speeding up the process of a task as you can run numerous workers at once.
A lot of this comes from http://dev.iron.io/worker/beta/getting_started/ and http://dev.iron.io/worker/beta/cli/ and their examples
Topics covered Creating a Lumen Worker Creating a statically linked binary in the worker Testing the worker locally with Docker Entering your docker environment Design patterns Install Lumen composer create-project laravel/lumen --prefer-dist
Add to composer.</description></item><item><title>Quick way to mock data for Behat in Laravel</title><link>https://alnutile.github.io/posts/142/</link><pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/142/</guid><description>Below allows me to use this type of step in my tests
Scenario: Given I update a Domain get 200 Given I mock &amp;quot;App\Sites\Domain&amp;quot; with properties: &amp;quot;&amp;quot;&amp;quot;
id: &amp;quot;mock-update-1&amp;quot;
site_id: &amp;quot;mock-site-1&amp;quot;
domain: &amp;quot;foo2.com
&amp;quot;&amp;quot;&amp;quot;
Given I have the payload: &amp;quot;&amp;quot;&amp;quot;
{
&amp;quot;data&amp;quot;:
{
&amp;quot;id&amp;quot;: &amp;quot;mock-update-1&amp;quot;,
&amp;quot;site_id&amp;quot;: &amp;quot;mock-site-1&amp;quot;,
&amp;quot;domain&amp;quot;: &amp;quot;foo2.com&amp;quot;
}
}
&amp;quot;&amp;quot;&amp;quot;
Then I request &amp;quot;PUT /api/v1/sites/mock-site-1/domains/mock-update-1&amp;quot;
Then I get a &amp;quot;200&amp;quot; response Here is the code in my FeatureContext.php</description></item><item><title>Code for making a Shortcut tool for your App</title><link>https://alnutile.github.io/posts/141/</link><pubDate>Sun, 29 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/141/</guid><description>This allows the user to easily make shortcuts to urls they are on and give them names.
video
The Migration &amp;lt;?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
class CreateShortcutsTable extends Migration {
/**
* Run the migrations.
*
* @return void
*/
public function up()
{
Schema::create('shortcuts', function(Blueprint $table)
{
$table-&amp;gt;string('id', 36)-&amp;gt;primary();
$table-&amp;gt;string('url');
$table-&amp;gt;string('name');
$table-&amp;gt;string('user_id', 36);
$table-&amp;gt;timestamps();
});
}
/**
* Reverse the migrations.
*
* @return void
*/
public function down()
{
Schema::drop('shortcuts');
}
}
The Model You will see me using scopes as I wanted to make a really simple POC</description></item><item><title>Using Faker and ENV vars with Behat</title><link>https://alnutile.github.io/posts/140/</link><pubDate>Fri, 27 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/140/</guid><description>UPDATED April 01 2015
Realized I needed more &amp;ldquo;tokens&amp;rdquo; and I was already using my .env file for info for Seeding and for our different servers. So the Trait now pulls those in.
This is a simple trait to use in your FeatureContext file to then get the power of Faker in your Behat tests
The Trait &amp;lt;?php
trait TokenFaker {
public function checkForTokens($arg)
{
$arg = str_replace($this-&amp;gt;replaceAbleTokens(), $this-&amp;gt;loadTokensValues(), $arg);
return $arg;
}
protected function replaceAbleTokens()
{
return array_merge($this-&amp;gt;getManualTokensKeys(), $this-&amp;gt;getEnvTokensKeys());
}
protected function getManualTokensKeys()
{
return [
'TOKEN_EMAIL',
'TOKEN_UUID',
'TOKEN_USERNAME',
'TOKEN_URL'];
}
protected function loadTokensValues()
{
return array_merge($this-&amp;gt;getManualTokenValues(), $this-&amp;gt;getEnvTokensValues());
}
protected function getManualTokenValues()
{
return [
$this-&amp;gt;faker-&amp;gt;email,
$this-&amp;gt;faker-&amp;gt;uuid,
$this-&amp;gt;faker-&amp;gt;word,
$this-&amp;gt;faker-&amp;gt;url
];
}
protected function getEnvTokensValues()
{
return array_values($_ENV);
}
protected function getEnvTokensKeys()
{
return array_keys($_ENV);
}
}
The Feature Context In my Feature Context I setup Faker and instantiate it and use the trait</description></item><item><title>Using a BurnDown Chart to Pace Yourself</title><link>https://alnutile.github.io/posts/139/</link><pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/139/</guid><description>A sprint starts and you feel unsure or overly sure of being able to complete all the work in that sprint. And depending on that you crank at the start working long hours in stress of not getting done in time or not enough focus (too much twitter) thinking you have it under control only to stress at the end of the sprint! It would be as if I started out for a jog not knowing how long the route was in a full sprint.</description></item><item><title>Behat and PhantomJs</title><link>https://alnutile.github.io/posts/138/</link><pubDate>Mon, 16 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/138/</guid><description>Using PhantomJS both with Selenium and in replace of Selenium With Selenium Here is my example behat profile for this one
phantom_via_selenium:
paths:
features: app/tests/acceptance/features/ui
bootstrap: app/tests/acceptance/contexts
context:
parameters:
base_url: https://behat.dev:443
asset_path: '/tmp/'
extensions:
Behat\MinkExtension\Extension:
default_session: selenium2
goutte:
guzzle_parameters:
curl.options:
CURLOPT_SSL_VERIFYPEER: false
CURLOPT_CERTINFO: false
CURLOPT_TIMEOUT: 120
ssl.certificate_authority: false
selenium2:
wd_host: &amp;quot;http://selenium-server.dev:4444/wd/hub&amp;quot;
capabilities:
browser: phantomjs
base_url: 'https://behat.dev:443'
browser_name: 'phantomjs'
And as usual you start up selenium.
In both cases the test is this one</description></item><item><title>PHP Error: Maximum function nesting level of '100' reached, aborting Behat</title><link>https://alnutile.github.io/posts/137/</link><pubDate>Fri, 13 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/137/</guid><description>This started to happen on Codeship and local for me and other developers. Though one developer had a higher setting for max nesting as noted here I wanted to not worry about this so I just locked down Symfony and Behat in our composer.json file
&amp;quot;require-dev&amp;quot;: {
&amp;quot;symfony/dependency-injection&amp;quot;: &amp;quot;2.7.x-dev#9fcd589dfb67697f1e3e34611b97eb1be2cd85be&amp;quot;,
&amp;quot;php-vcr/php-vcr&amp;quot;: &amp;quot;dev-master&amp;quot;,
&amp;quot;phpunit/phpunit&amp;quot;: &amp;quot;~4.0&amp;quot;,
&amp;quot;phpspec/phpspec&amp;quot;: &amp;quot;~2.1&amp;quot;,
&amp;quot;php-vcr/phpunit-testlistener-vcr&amp;quot;: &amp;quot;dev-master&amp;quot;,
&amp;quot;mockery/mockery&amp;quot;: &amp;quot;*@dev&amp;quot;,
&amp;quot;fzaninotto/faker&amp;quot;: &amp;quot;*&amp;quot;,
&amp;quot;guzzlehttp/guzzle&amp;quot;: &amp;quot;4.*&amp;quot;,
&amp;quot;pda/pheanstalk&amp;quot;: &amp;quot;~3.0&amp;quot;,
&amp;quot;knplabs/github-api&amp;quot;: &amp;quot;1.2.1&amp;quot;,
&amp;quot;way/generators&amp;quot;: &amp;quot;~3.0&amp;quot;,
&amp;quot;symfony/Yaml&amp;quot;:&amp;quot;2.</description></item><item><title>Iron.io Laravel and Workers, Microservices</title><link>https://alnutile.github.io/posts/136/</link><pubDate>Mon, 09 Mar 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/136/</guid><description>We are starting to use Iron.io and their workers for a lot of the tasks that our apps need to do. For example one app needs to scan websites for images and text and report on them. In our case that is 2 workers, one with the code needed to get the text we want and the other images. Another worker runs behat tests to take screenshots and reports back to the called with the results.</description></item><item><title>Multi Domain Nginx Redirect</title><link>https://alnutile.github.io/posts/135/</link><pubDate>Sat, 28 Feb 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/135/</guid><description>http://wordpress.stackexchange.com/questions/106445/multisite-redirect-loop-for-a-single-www-domain
Basically the site went from foo-prod.stagingarea.us to wearelive.com but since it was an internal app I wanted to make sure the old url still worked and redirected as needed to the new url
server {
listen 80;
server_name foo-prod.stagingarea.us;
return 301 https://$host$request_uri;
}
server {
listen 443;
server_name foo-prod.stagingarea.us;
if ($host ~* ^foo-prod.stagingarea.us) {
rewrite ^(.*)$ https://wearelive.com$1 permanent;
}
Interesting note is server_name does not contain the primary name wearlive.</description></item><item><title>Sending Dates to Angular from Laravel</title><link>https://alnutile.github.io/posts/134/</link><pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/134/</guid><description>This might not be ideal but so far it allows me to more easily sort dates and filter dates in Angular.
From the Laravel model I add these two methods
/**
* See docs http://laravel.com/docs/5.0/eloquent#date-mutators
*/
public function getDates()
{
return array('created_at');
}
public function getCreatedAtAttribute($attr) {
return Carbon::parse($attr)-&amp;gt;timestamp; //Change the format to whichever you desire
}
Then in Angular I can use the filters
{{ vm.created_at | date:'medium'}}</description></item><item><title>Dealing with Oauth2 Server and Laravel for both a local app login and for remote apps using Lucadegasperi/oauth2-server-laravel</title><link>https://alnutile.github.io/posts/133/</link><pubDate>Mon, 23 Feb 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/133/</guid><description>This is all based around this library https://github.com/lucadegasperi/oauth2-server-laravel
I am building and API to be used by an iOs and Android client I will be making soon. But I also needed the filter system to deal with my local Laravel view that was using the api via an Angular driven widget so the user can go to the website as well.
So the website is where the user can go to do change settings, subscription updates etc, but in that case they are logged in via the Laravel login form.</description></item><item><title>Simple Look at Laravel Events</title><link>https://alnutile.github.io/posts/132/</link><pubDate>Sun, 08 Feb 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/132/</guid><description>Events Getting Started This is part of a larger Laravel Guide I am working on in this case the example is in the Events folder
Start the example
php artisan serve --port=8081
Then visit
http://localhost:8081/example1
So if you look in
app/routes.php
You see route example1 will fire and event and there are two listeners
Do they run async or sync If you hit that route you see the sleep taking effect so it is syncronous</description></item><item><title>Laravel-Flysystem and Creating Time Limited Public Urls on S3</title><link>https://alnutile.github.io/posts/131/</link><pubDate>Thu, 05 Feb 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/131/</guid><description>We needed to offer timed links to the urls and we are using Laravel-Flysystem
Aaron Smith found this how to but I wanted it to work with existing use of FlySystem.
I ended up moving the code into a trait so we could use this one feature
&amp;lt;?php namespace AlfredNutileInc\CoreApp\Helpers;
use GrahamCampbell\Flysystem\Facades\Flysystem;
use Illuminate\Support\Facades\Log;
trait S3Helper {
protected $path_for_assets;
protected $expire_time;
public $driver = 'awss3';
/**
* @return string
*/
public function getDriver()
{
return $this-&amp;gt;driver;
}
/**
* @param string $driver
*/
public function setDriver($driver)
{
$this-&amp;gt;driver = $driver;
}
public function iterateOverFiles($files)
{
foreach($files as $key =&amp;gt; $file)
{
if(isset($file['path'])) {
$files[$key]['url'] = $this-&amp;gt;getSignedUrl($file['path']);
}
}
return $files;
}
protected function getFiles()
{
$this-&amp;gt;path_for_assets = $this-&amp;gt;project_id .</description></item><item><title>Laravel Behat and Selenium</title><link>https://alnutile.github.io/posts/130/</link><pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/130/</guid><description>Laracasts has some great videos and libraries for Laravel 5 and Behat integration.
Examples
https://github.com/laracasts/Behat-Laravel-Extension
and
https://laracasts.com/lessons/laravel-5-and-behat-bffs
Two things that I still need and get from this though that I do not think I can get from those are
Laravel 4.2 support which obviously is not going to work with the above L5 libraries :) Mocking APIs when running under APP_ENV=local or testing Also I think with the libraries above only goutte drivers work for the APP_ENV setting.</description></item><item><title>Linux, Behat and installing ChromeDriver</title><link>https://alnutile.github.io/posts/129/</link><pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/129/</guid><description>Setting up Chrome driver with Behat and Selenium2
Side note for Mac brew install chromedriver
ChromeDriver Once you find the path Chrome was installed you place the driver in there. For Ubuntu 14.04 it was
/opt/google/chrome/chromedriver
I got the driver from https://code.google.com/p/selenium/wiki/ChromeDriver#Overriding_the_Chrome_binary_location
Starting Selenium I still need to look up and try setting this in the behat.yml for now I just ran it this way
java -jar selenium-server-standalone-2.0rc2.jar -Dwebdriver.chrome.driver=/opt/google/chrome/chromedriver
That is it.</description></item><item><title>Sqlite and Laravel</title><link>https://alnutile.github.io/posts/128/</link><pubDate>Sun, 18 Jan 2015 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/128/</guid><description>It is really really nice to use this for testing and local since any reseed work is quick.
Overall the swap out is easy and I do not think, so far, there has been any issues going to mysql on production.
The only two things to set over all is
Seeding In my DatabaseSeeder.php file I set this
&amp;lt;?php
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\DB;
class DatabaseSeeder extends Seeder {
/**
* Run the database seeds.</description></item><item><title>Timing PHPUnit Tests</title><link>https://alnutile.github.io/posts/127/</link><pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/127/</guid><description>Maybe there is a better way to do this? But using this article https://fatalfailure.wordpress.com/2011/08/22/detecting-slow-tests-with-phpunit/ I was able to find a hanging test.
Setup I already have an xml file at the root of my project so I added to that that listener.
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;phpunit backupGlobals=&amp;quot;false&amp;quot;
backupStaticAttributes=&amp;quot;false&amp;quot;
bootstrap=&amp;quot;tests/bootstrap.php&amp;quot;
colors=&amp;quot;true&amp;quot;
convertErrorsToExceptions=&amp;quot;true&amp;quot;
convertNoticesToExceptions=&amp;quot;true&amp;quot;
convertWarningsToExceptions=&amp;quot;true&amp;quot;
processIsolation=&amp;quot;false&amp;quot;
stopOnFailure=&amp;quot;true&amp;quot;
syntaxCheck=&amp;quot;false&amp;quot;
&amp;gt;
&amp;lt;listeners&amp;gt;
&amp;lt;listener file=&amp;quot;./app/tests/listeners/TestTimesListener.php&amp;quot; /&amp;gt;
&amp;lt;/listeners&amp;gt;
&amp;lt;testsuites&amp;gt;
&amp;lt;testsuite name=&amp;quot;Application Test Suite&amp;quot;&amp;gt;
&amp;lt;directory&amp;gt;./app/tests/BehatEditor/Tests&amp;lt;/directory&amp;gt;
&amp;lt;directory&amp;gt;./app/tests/TheHub/Tests&amp;lt;/directory&amp;gt;
&amp;lt;exclude&amp;gt;./app/tests/BehatEditor/Tests/Migrations&amp;lt;/exclude&amp;gt;
&amp;lt;exclude&amp;gt;.</description></item><item><title>Reusable UI/API CRUD Laravel and Angular</title><link>https://alnutile.github.io/posts/126/</link><pubDate>Fri, 26 Dec 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/126/</guid><description>related repo
Working on a recent project it finally hit me how repetitive then need was to make a Resource at the API level and to make the UI to Create, Retrieve, Update, Delete, Index. And how easy it would be to make a foundation for this to use for each Resource keeping the UI goals consistent and simple between these Resources. With this came also a set of API tests in Behat that could also be used with the project.</description></item><item><title>Laravel Blade and Angular brackets</title><link>https://alnutile.github.io/posts/124/</link><pubDate>Fri, 19 Dec 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/124/</guid><description>I use one AngularController.php to render main.blade.php file that then renders angular. The only other blade file is the login page. I could have done this in the routes.php file but since the routes file has the login page I decided to place it in this controller.
&amp;lt;?php namespace App\Http\Controllers;
use Illuminate\Support\Facades\Blade;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\View;
use Laracasts\Utilities\JavaScript\Facades\JavaScript;
/**
* @Middleware(&amp;quot;auth&amp;quot;)
*/
class AngularController extends BaseController {
use UserHelper;
/**
* @var UserService
*/
private $userService;
public function __construct(UserService $userService)
{
$this-&amp;gt;userService = $userService;
}
/**
* @Get(&amp;quot;behat&amp;quot;, as=&amp;quot;behat.</description></item><item><title>Angular History Based BreadCrumbs</title><link>https://alnutile.github.io/posts/123/</link><pubDate>Fri, 12 Dec 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/123/</guid><description>Originally I was going to go with one of the more well known packages but then I realized I wanted to show the history of the users states not the children of the state they are on. For example when the user lands on the website at say the path projects and then goes to projects/foo their breadcrumbs will look like this
Projects / Project Foo
And if they then go to project/foo/reports then it would be</description></item><item><title>Embed Template Data in View (Angular, Laravel)</title><link>https://alnutile.github.io/posts/122/</link><pubDate>Tue, 02 Dec 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/122/</guid><description>Sometimes, when your frontend shares the same view rendering of the backend, you can store data in the window object. This can save you queries to the backend when, for example, Profile Data that shows on every pages request.
Embed output into window or $window In the Controller I am using to output the Angular template (app/views/main.blade.php for example) I inject the window data that I want all pages to have.</description></item><item><title>Quick fixture data and mocking external APIs</title><link>https://alnutile.github.io/posts/121/</link><pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/121/</guid><description>We are using a number of external APIs on a project (Pusher, Iron.io, Github, Saucelabs etc). Github is key as we are using it to store and retrieve files from for editing on the site. When running phpunit it is easy to mock these Classes but when running behat tests or protractor we had to do to things to make it possible to mock the tests and not hit the external APIs.</description></item><item><title>Mocking Queue Service for faster Behat Testing</title><link>https://alnutile.github.io/posts/120/</link><pubDate>Sun, 23 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/120/</guid><description>As I wrote about here I am using behat to tests our APIs. I could have used Laravel&amp;rsquo;s guzzle and phpunit integration to test the controllers but I decided to go with Behat. But this means when hitting those endpoints I need to find another way to mock services.
Since Laravel has you register Providers you can easily replace or override a provider. In this case the &amp;ldquo;&amp;lsquo;Illuminate\Queue\QueueServiceProvider&amp;rsquo;&amp;rdquo; provider with my own.</description></item><item><title>Docker, MailCatcher and Laravel</title><link>https://alnutile.github.io/posts/118/</link><pubDate>Fri, 21 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/118/</guid><description>I wrote an article on Mailcatcher and Homestead here but as I move into docker I wanted the same setup for my docker website container which was super easy.
First I downloaded this docker images and ran the command as he noted. Once done I had the website up and running.
From there I just started my website container and made a link.
docker run -d -p 80:80 --name website --link mailcatcher:mailcatcher -v $PWD:/share alnutile/nginxlaravel:0.</description></item><item><title>Redirecting back to original Angular.js destination from Laravel Auth</title><link>https://alnutile.github.io/posts/119/</link><pubDate>Fri, 21 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/119/</guid><description>UPDATE
You can see in the comments some updated info.
When a user visits an Angular url (not html5) like http://foo.com/app#some/long/path
Then gets redirected to http://foo.com/auth/login because they are not logged in. It would be nice to send them right back after that.
These steps will make that possible.
Include this file in your authentication page.
#intended.js
(function(){
'use strict';
var intended = window.location.hash;
(intended.length &amp;gt; 0) ? jQuery.cookie('intended', '/app' + intended) : jQuery.</description></item><item><title>PHP quick fixture data for phpunit testing</title><link>https://alnutile.github.io/posts/117/</link><pubDate>Thu, 20 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/117/</guid><description>You can use VCR or other libraries to make fixture data. But sometimes you can just make the request and save the results using this technique. From then on you mock and return the data.
Get the data. In this example I had a Client that would get data and return it for import. I was testing out the class that would take this data and import it and do other things.</description></item><item><title>Nginx force SSL</title><link>https://alnutile.github.io/posts/116/</link><pubDate>Tue, 18 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/116/</guid><description>Need to quickly setup ssl and default to that for our sites.
This article made it simple stupid for getting the certs setup.
Then I wrapped up the redirect as seen below
server {
listen 80;
listen 443 ssl;
server_name somesite-dev.stagingarea.info;
root /home/someuser/somesite-dev.stagingarea.info/public;
ssl on;
ssl_certificate /etc/nginx/ssl/nginx.crt;
ssl_certificate_key /etc/nginx/ssl/nginx.key;
# Prevent a look
if ($ssl_protocol = &amp;quot;&amp;quot;) {
rewrite ^ https://$server_name$request_uri? permanent;
}
index index.html index.htm index.php;
charset utf-8;
}
Thanks to this post as well http://serverfault.</description></item><item><title>Laravel and Angular Time/Date Display</title><link>https://alnutile.github.io/posts/114/</link><pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/114/</guid><description>Angular seems to, by default, easily deal with milliseconds, https://docs.angularjs.org/api/ng/filter/date.
Laravel outputs created_at as a YYYY-MM-DD HH:MM:SS format that just does not work well with the Angular date filter.
It is really simple to change the output of the date in Laravel just add this to your Model or BaseModel or even better Trait
/**
* Leave as Timestamps for Angular
* @return array
*/
public function getDates()
{
return [];
}
public function getCreatedAtAttribute($value)
{
$value = date('U', strtotime($value));
return $value * 1000;
}
public function getUpdatedAtAttribute($value)
{
$value = date('U', strtotime($value));
return $value * 1000;
}
This is noted in the docs as well http://laravel.</description></item><item><title>Moving Forge Deploy Script to Envoy</title><link>https://alnutile.github.io/posts/115/</link><pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/115/</guid><description>As we start to move off of Forge I still want the automation to take place after all tests pass.
In Codeship or Locally I just follow some instructions from here http://laravel.com/docs/4.2/ssh
Locally Setup Envoy globally as noted.
Run envoy init
And then I pasted this into my Envoy.blade.php
@servers(['dev' =&amp;gt; 'behat_dev'])
@task('deploy_dev', ['on' =&amp;gt; 'dev'])
date
cd /home/forge/foo-dev
git pull origin dev
composer config -g github-oauth.github.com sometoken
composer install
composer dump-autoload
php artisan dump-autoload
php artisan migrate
php artisan migrate:refresh --seed
~/node_modules/bower/bin/bower install
npm install
php artisan queue:restart
@endtask
Setup you .</description></item><item><title>Laravel 4.2 and Dotenv to set environment</title><link>https://alnutile.github.io/posts/113/</link><pubDate>Sun, 09 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/113/</guid><description>To start using Dotenv now it is very simple.
One include the library #composer.js
&amp;quot;require&amp;quot;: {
&amp;quot;laravel/framework&amp;quot;: &amp;quot;4.2.*&amp;quot;,
&amp;quot;vlucas/phpdotenv&amp;quot;: &amp;quot;1.0.*@dev&amp;quot;
},
Two update your start.php #bootstrap/start.php line 27
Dotenv::load(__DIR__ .'/../');
$env = $app-&amp;gt;detectEnvironment(
function()
{
return getenv('APP_ENV');
}
);
Make sure to set your .env file #.env
APP_ENV='local'
That is it you are set to use it for all your environments.
Update
For Heroku I used this instead
$env = $app-&amp;gt;detectEnvironment(
function()
{
if(!</description></item><item><title>Speeding up PHPunit tests and Behat in Laravel for Database refreshes</title><link>https://alnutile.github.io/posts/112/</link><pubDate>Thu, 06 Nov 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/112/</guid><description>This article covers some good tips on this. Ideally you do not hit the database in unit tests but sometimes you do. Also in behat it hits the db all the time since it is at the Acceptance level.
Sqlite It is a great database and works. We easily can use it on running tests. When seeding the db I have my main seeding class doing this
&amp;lt;?php
use Illuminate\Database\Seeder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\DB;
class DatabaseSeeder extends Seeder {
/**
* Run the database seeds.</description></item><item><title>Angular Pusher Factory to Centralize Code (also using Laravel to set constants and properties)</title><link>https://alnutile.github.io/posts/111/</link><pubDate>Fri, 24 Oct 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/111/</guid><description>This will cover
Making an Angular factory to centralize Pusher setup in Angular Passing settings form Laravel to Angular (though could be just Angular and a .env file as well) Passing Constants into the Angular App to pass these settings around, in this case to the Pusher Factory. Setup your constants This is where I call in the info I need to use later on.
(function(){
function config($stateProvider, $urlRouterProvider) {
$urlRouterProvider.</description></item><item><title>CSRF Tokens and Angular.js</title><link>https://alnutile.github.io/posts/110/</link><pubDate>Wed, 15 Oct 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/110/</guid><description>This is key to preventing Cross-site request forgery. Basically you log in and do some work on one site, then go to a malicious site and now they can send POST requests to the sites you have authentication to. But by passing a token we can prevent that issue.
The steps
Make a token path Make a token service to use again and again in Angular.js Add it as a resolve to the route in Angular.</description></item><item><title>Temporary Auth Updates L5</title><link>https://alnutile.github.io/posts/109/</link><pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/109/</guid><description>Auth updates First make sure your composer update has the latest Laravel and check that there are not relevant fixes already via laravel/docs master laravel/framework master or laravel/laravel dev
Moved evn files to the new format and only 1 is needed now having the
APP_ENV='local' setting for the environment.
Then update the path in the AuthController to go to auth/login
#app/Http/Controllers/Auth/AuthController
public function login(LoginRequest $request)
{
if ($this-&amp;gt;auth-&amp;gt;attempt($request-&amp;gt;only('email', 'password')))
{
return redirect('/');
}
return redirect('/auth/login')-&amp;gt;withErrors([
'email' =&amp;gt; 'The credentials you entered did not match our records.</description></item><item><title>Chrome and Behat</title><link>https://alnutile.github.io/posts/108/</link><pubDate>Sun, 05 Oct 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/108/</guid><description>Getting Chrome run was &amp;ldquo;easy&amp;rdquo; thanks to this post
My install has behat running inside of a vagrant box so my behat.yml talks to Selenium running on my Mac and uses my Macs Chrome
default:
paths:
features: behat/features
bootstrap: features/bootstrap
formatter:
name: pretty
extensions:
Behat\MinkExtension\Extension:
default_session: selenium2
goutte: null
selenium2:
wd_host: &amp;quot;http://192.168.33.1:4444/wd/hub&amp;quot;
capabilities: { &amp;quot;browserName&amp;quot;: &amp;quot;chrome&amp;quot;, &amp;quot;browser&amp;quot;: &amp;quot;chrome&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;25&amp;quot;, 'chrome': {'switches':['--no-sandbox']}}
base_url: 'http://cms.dev:8000/'
browser_name: chrome
I placed chromedriver in /opt and just ran this</description></item><item><title>Design Guide - Controllers, Services and IOC</title><link>https://alnutile.github.io/posts/107/</link><pubDate>Mon, 22 Sep 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/107/</guid><description>Design Guides Controllers - contains application logic and passing user input data to service Services - The middleware between controller and repository. Gather data from controller, performs validation and business logic, and calling repositories for data manipulation. Repositories - layer for interaction with models and performing DB operations Models - common laravel model files with relationships defined In and Out Burgers Between the user&amp;rsquo;s request and the response is the application.</description></item><item><title>Multi Threaded Queue Processing</title><link>https://alnutile.github.io/posts/106/</link><pubDate>Wed, 10 Sep 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/106/</guid><description>I needed a way to run a bunch of jobs in parallel and I am use to using the Symfony Process Component for that.
So this post will show how I did this in Laravel 4.3 via the Queue so I can remember next time.
What will come out of this is a workflow as seen here
We will create two Artisan Commands. This allows us to use Symfony Process to run numerous console commands in the background.</description></item><item><title>Team Style Guides and Mind Set</title><link>https://alnutile.github.io/posts/105/</link><pubDate>Sun, 24 Aug 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/105/</guid><description>Been sharing this info with team members a bit lately and want to post it here for reference. Though there is no ONE way to do any of this there are ways that scale better than others. But more importantly having one way as a team to do things can be key to projects from beginning to end (eg the rest of the projects life!)
Project Style Guides The Clean Coder by Robert Martin book is a look at being a &amp;ldquo;Professional&amp;rdquo; coder and all that comes with it.</description></item><item><title>Sorting related models in Laravel</title><link>https://alnutile.github.io/posts/104/</link><pubDate>Fri, 15 Aug 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/104/</guid><description>There are a number of related models to this one model that I store in the Models $relations property
protected static $relations = [
'owner',
'apns',
'zoning_urls',
'structures.address',
'structures.comments.user.profiles',
'listings',
'attachments',
'structures.structure_type',
'property_owner',
'primary_property_type',
'address',
'property_specialist.profiles',
'listings.team'
];
This allows me to easily reuse this for each query
$found = $found-&amp;gt;load(static::$relations);
But there is one model I removed from that list to do a dynamic query/sorting on it
$found = $this-&amp;gt;property-&amp;gt;with([
'verifiers' =&amp;gt; function($query) {
$query-&amp;gt;with('user.</description></item><item><title>Behat for testing RESTful APIs</title><link>https://alnutile.github.io/posts/103/</link><pubDate>Wed, 13 Aug 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/103/</guid><description>The code for behat&amp;rsquo;s FeatureContext comes from this repo and book https://github.com/philsturgeon/build-apis-you-wont-hate
I will bring it together so before long you can run tests like this
The road map will be
Quick Setup Notes GET requests POST request Tie into your framework Seeding step Query your db step PUT request Quick Setup Notes Setting up behat is beyond the scope of this. If you want try alnutile/behat-seed to get going on testing since it can be used to hit any API.</description></item><item><title>Boris REPL and you Applicatoin (Silex in this case)</title><link>https://alnutile.github.io/posts/102/</link><pubDate>Sun, 10 Aug 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/102/</guid><description>This video will cover the details http://youtu.be/RHdxSsCDmNQ
Just a few notes though https://github.com/d11wtq/boris is a better place for getting started overall.
Borisrc This lives in the root of my application which includes the startup file for the application.
&amp;lt;?php
#.borisrc
$core = require_once(__DIR__.'/bootstrap/start.php');
$boris = new \Boris\Boris('base_app&amp;gt; ');
$boris-&amp;gt;setLocal(array('core' =&amp;gt; $core));
$boris-&amp;gt;start();
The start.php file I am using for the core startup needed by index.php, this and later a command line class to run the queue daemon and other things</description></item><item><title>Drush and Homestead Vagrant Box</title><link>https://alnutile.github.io/posts/100/</link><pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/100/</guid><description>Had some trouble doing the normal composer install so I went with the manual install noted here https://github.com/drush-ops/drush
Basically I downloaded and unzipped the repo to /usr/local/sbin. Then I did a symlink to /usr/bin
cd /usr/bin
sudo ln -s /usr/local/sbin/drush/drush .
Then in /usr/local/sbin/drush I ran
sudo composer install</description></item><item><title>Polymorphic relationship Laravel</title><link>https://alnutile.github.io/posts/99/</link><pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/99/</guid><description>This example will show a typical &amp;ldquo;Attachment&amp;rdquo; need. The Laravel docs really do cover alot as seen here especially &amp;ldquo;Polymorphic Relation Table Structure”. I cover many to many polymorphic relationships here
I will cover an example of an Attachment that has some fields. And it is related to a model, in this example &amp;ldquo;Post&amp;rdquo;
Using the Way Generators to make this resource.
php artisan generate:resource attachment --fields=&amp;quot;attachable_type:string, attachable_id:integer, name:string, file_name:string, note:text, tag:string”
As noted in the laravel docs our table for Attachments would look something like this</description></item><item><title>SSL and Homestead</title><link>https://alnutile.github.io/posts/101/</link><pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/101/</guid><description>This is like most nginx the only trick was adding the port forward on Homestead
#scripts/homestead.rb
# Configure Port Forwarding To The Box
config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 80, host: 8000
config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 443, host: 44300
config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 3306, host: 33060
config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 5432, host: 54320
config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 11300, host: 11300
I set it to 44300
Then just follow along here
http://laravel.io/forum/07-06-2014-enabling-ssl-on-a-homestead-vm which leads to here https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04 for the rest</description></item><item><title>Quick way to traverse a nested php arrray</title><link>https://alnutile.github.io/posts/98/</link><pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/98/</guid><description>The RecursiveIteratorIterator makes it super easy to traverse a nested array.
Here is an example though the docs are pretty clear there. For me it was in a class so I defined the array keys at the top of the Class
protected $merged_profile_options = [];
protected $data_values = [
'browser' =&amp;gt; null,
'name' =&amp;gt; null,
'version' =&amp;gt; null,
'platform' =&amp;gt; null,
'base_url' =&amp;gt; null,
'repo' =&amp;gt; null,
'filename' =&amp;gt; null,
'branch' =&amp;gt; null,
'status' =&amp;gt; null,
'user_uuid' =&amp;gt; null,
'remote_job_id' =&amp;gt; null,
'job_id' =&amp;gt; null,
];
Then later on iterated over that array.</description></item><item><title>Using VCR for PHP API Testing</title><link>https://alnutile.github.io/posts/97/</link><pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/97/</guid><description>Testing that your code works against an API can take up lots of un-needed time. With this php-vcr library you can do ONE real request that saves a fixture file that will automatically be used with each additional requests!
They have decent docs on setting up but I will walk through them here.
I will base this off a seed phpunit repo I have https://github.com/alnutile/base_library_repo
You will need to add to the composer.</description></item><item><title>Saucelabs PHP Client</title><link>https://alnutile.github.io/posts/96/</link><pubDate>Fri, 11 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/96/</guid><description>It is built off of the php-github-api client seen here by KnpLabs . They made a really nice client that uses Guzzle and an AbstractionAPI to make it easy to code out different classes around the API endpoints.
Anyways I have had such a good experience with github one I figured it would be nice to have one for the Saucelabs work I do.
https://github.com/alnutile/saucelabs_client more features will be added shortly as it is being used in a couple of decent size projects.</description></item><item><title>Many to Many Polymorphic Relations from Laravel to Angular and back</title><link>https://alnutile.github.io/posts/95/</link><pubDate>Sat, 05 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/95/</guid><description>This will cover having a polymorphic relationship in Laravel, showing it on a form in Angular and saving it back to Laravel. Overall it is well documented here at the great docs at Laravel but this post might help in a few areas.
As someone defines Polymorphic Relationships there
&amp;ldquo;Polymorphic relations allow a model to belong to more than one other model, on a single association. For example, you might have a photo model that belongs to either a staff model or an order model.</description></item><item><title>Laravel Homestead and MailCatcher</title><link>https://alnutile.github.io/posts/93/</link><pubDate>Wed, 02 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/93/</guid><description>Using MailCatcher http://mailcatcher.me/ I can see the emails sent by the website.
First checkout https://github.com/fideloper/Vaprobash/pull/348 to get your box ready All I did was
Log into the vagrant box and run sudo apt-get install libsqlite3-dev
Then
sudo apt-get install ruby1.9.1-dev -y
sudo gem install mailcatcher
Then
sudo gem install mailcatcher -V
Set your mail.php config This is found in app/config and should be copied to app/config/local so it only applies to local</description></item><item><title>Laravel Sentry and UUID</title><link>https://alnutile.github.io/posts/94/</link><pubDate>Wed, 02 Jul 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/94/</guid><description>Update October 10 10:07 Have hit a few issues with this model but still working okay.
To start this trait does some of the work to manage incoming POST data.
&amp;lt;?php namespace BehatEditor\Helpers;
use Rhumsaa\Uuid\Uuid;
trait UuidHelper {
protected $uuid;
protected $saved;
public function getUuid()
{
return $this-&amp;gt;uuid;
}
public function setUuid($uuid = null)
{
if($uuid === null)
{
$uuid = $this-&amp;gt;generateNewId()-&amp;gt;toString();
}
$this-&amp;gt;uuid = $uuid;
return $this;
}
/**
* Get a new version 4 (random) UUID.</description></item><item><title>Laravel Homestead and Beanstalkd Console</title><link>https://alnutile.github.io/posts/92/</link><pubDate>Mon, 30 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/92/</guid><description>I am doing some queue work and wanted beanstalkd console installed so I can see the status of the queue
Using Laravel Homestead as the vagrant box http://laravel.com/docs/homestead I needed to
Download beanstalkd console https://github.com/ptrofimov/beanstalk_console Setup Homesteads yml file Provision the box Setup my local hosts file to a url Finally run php artisan queue:listen to have my app call to the queue. And that was about it.</description></item><item><title>Restangular and nested responses</title><link>https://alnutile.github.io/posts/91/</link><pubDate>Sat, 21 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/91/</guid><description>this was key to dealing with this type of results
{
&amp;quot;data&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;Foo&amp;quot;
},
&amp;quot;message&amp;quot;: {
&amp;quot;Post Updated&amp;quot;
}
}
So I had to set this in a app.js config area
//app,js
app.config(function(RestangularProvider) {
// add a response intereceptor
RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {
var extractedData;
extractedData = data.data;
return extractedData;
});
});</description></item><item><title>Behat Test more than number of elements</title><link>https://alnutile.github.io/posts/90/</link><pubDate>Fri, 20 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/90/</guid><description>There is a Mink step to check for the number of elements
//MinkDictionary.php
/**
* Checks, that (?P&amp;lt;num&amp;gt;\d+) CSS elements exist on the page
*
* @Then /^(?:|I )should see (?P&amp;lt;num&amp;gt;\d+) &amp;quot;(?P&amp;lt;element&amp;gt;[^&amp;quot;]*)&amp;quot; elements?$/
*/
public function assertNumElements($num, $element)
{
$this-&amp;gt;assertSession()-&amp;gt;elementsCount('css', $element, intval($num));
}
But I needed one just to make sure there are some elements on the page, more than 1 for example on a reports page. I guess I could have checked for just 1 eg &amp;ldquo;#behat ol li&amp;rdquo; but I think this can come in handy for our reporting tests.</description></item><item><title>When you have to use Angular inside of Drupal</title><link>https://alnutile.github.io/posts/89/</link><pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/89/</guid><description>The angularjs module for drupal will direct you to setup a menu path for Angular.js to get it&amp;rsquo;s template files.
So the Angular route would look like this
//app.js
behat_reports.config(['$routeProvider',
function ($routeProvider) {
$routeProvider.
when('/', {
templateUrl: '/behat_editor_reports_service_v2/tpl/behat_editor_reports_service_reports_tpl',
controller: 'ReportsAll'
}).
otherwise({
redirectTo: '/'
});
}]);
What I am suggesting is that when bootstraping Angular is to set the path to the &amp;ldquo;html&amp;rdquo; template folder. Then your Angular app route can look like this</description></item><item><title>Transforming Output from the Database to the View/REST layer</title><link>https://alnutile.github.io/posts/88/</link><pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/88/</guid><description>Having watched the screen cast here by Jeffery Way and reading Phil Sturgeon&amp;rsquo;s Build APIs You Won&amp;rsquo;t Hate I used this approach on a recent project.
Basically, and they both cover it really well, instead of returning the data right to the ui/rest endpoint from the database I pass it through a class to transform the data formats, field name etc. This has been extremely helpful as we also work out some wording of fields that I can not do easily in this one class.</description></item><item><title>Showing nested relationships details</title><link>https://alnutile.github.io/posts/87/</link><pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/87/</guid><description>This is soooo easy but this is always something this easy can be missed. In this example we have a Property Model with Buildings that have an address.
So the model files look like this
//Property.php
//structures = buildings
public function structures()
{
return $this-&amp;gt;hasMany('Structure');
}
//Structure.php
public function address()
{
return $this-&amp;gt;belongsTo(&amp;quot;Address&amp;quot;);
}
So when I query a property I now get
{
&amp;quot;id&amp;quot;: 1,
&amp;quot;structures&amp;quot;: [
{
&amp;quot;id&amp;quot;: 6,
&amp;quot;address_id&amp;quot;: 9,
&amp;quot;address&amp;quot;: {
&amp;quot;id&amp;quot;: 9,
&amp;quot;city&amp;quot;: &amp;quot;Melvinport&amp;quot;,
&amp;quot;state&amp;quot;: &amp;quot;MT&amp;quot;,
&amp;quot;zip&amp;quot;: &amp;quot;75182&amp;quot;,
&amp;quot;lat&amp;quot;: -18.</description></item><item><title>Simple Laravel CMS Example</title><link>https://alnutile.github.io/posts/86/</link><pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/86/</guid><description>Quick intro to Laravel using a custom CMS app I made The repo is here
This is mainly to show an example of a small CMS being built in Laravel. CMS (Content Management System) that is at it&amp;rsquo;s most basic level, Authentication, Simple Content Types etc.
What we will cover.
Installing the &amp;ldquo;CMS&amp;rdquo; and what Page Types it comes with Looking at the folder layout &amp;ldquo;Where is&amp;hellip;.&amp;rdquo; App config setting up the site PHP Artisan command to migrate the site Routes Page example looking at the wysiwyg, Controller, View etc Tags - lets add a many to many relationship This is NOT the end all setup just an example.</description></item><item><title>Quick Gulp file to run php-unit tests</title><link>https://alnutile.github.io/posts/85/</link><pubDate>Sun, 25 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/85/</guid><description>MUCH BETTER WAY HERE
This is setup for Laravel but can work for any app. Most of this is due to the great Laracasts on Gulp
Download and setup gulp
First make a package.json file in the root of your app and just put curly brackets in it.
touch package.json
vim package.json
//package.json
{
}
Then run the needed node commands
npm install -g gulp
npm install gulp --save-dev
npm install gulp-notify --save-dev
npm install gulp-phpunit --save-dev
Now the package.</description></item><item><title>Laravel and non email authentication</title><link>https://alnutile.github.io/posts/84/</link><pubDate>Tue, 20 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/84/</guid><description>Note to self. The Laravel docs are here that cover Authentication. But when it came time to use a filter and a non email based user name I had to modify the auth.basic filter, or any filter you want to use.
It ended up looking like this since I wanted user_account and not email to be the username for authentication.
//app/filters.php
Route::filter('auth.basic', function()
{
return Auth::basic('user_account');
});
You can see this option here</description></item><item><title>Behat Seed Repo</title><link>https://alnutile.github.io/posts/77/</link><pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/77/</guid><description>The aim of this repo is to make it super easy to get going with behat. All you will need to get outside of this repo is
Selenium Jar file download Composer Saucelabs Account (Optional) After you install and setup those items you will be able to run tests locally or via Saucelabs and have a base setup to add new/custom steps as needed.
Selenium Easy This is the one jar file you need</description></item><item><title>Using Beanstalkd to Schedule the release of a post in Laravel</title><link>https://alnutile.github.io/posts/78/</link><pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/78/</guid><description>Phase 1 of my master plan is to regularly write more posts on misc web and coding in general related topics. And sometimes I can sit and write a few of them but it would be best not to release them all at once for a lot of reason.
So this will cover the way I setup a schedule feature to my post creation process. Yes there are libraries for this but I just wanted to have fun making this feature.</description></item><item><title>Using Dot Env files to manage settings</title><link>https://alnutile.github.io/posts/76/</link><pubDate>Sun, 18 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/76/</guid><description>Wow. Included in Laravel http://laravel.com/docs/configuration#protecting-sensitive-configuration
removed due to old news
http://mattstauffer.co/blog/laravel-forge-using-environment-variables-for-environment-detection/
Update I really like the second link and how it sets up a .env file first to just return a simple string. After that you can have the .env.production.php or .env.local.php that laravel can look for.
//bootstrap/start.php
$env = $app-&amp;gt;detectEnvironment(function()
{
if (file_exists(__DIR__ . '/../.env')) {
return include(__DIR__ . '/../.env');
} else {
return 'production';
}
});
Quite simple at that point to separate all of the environments.</description></item><item><title>Using Scopes in Laravel</title><link>https://alnutile.github.io/posts/69/</link><pubDate>Fri, 16 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/69/</guid><description>I have about 4 models that all share 2 common queries. I want all of them that are &amp;ldquo;Published&amp;rdquo; and or Ordered by a field called Order.
This does help with some DRY goals, but you could easily change or add to a scope as needed to update all the queries involved etc. Especially if at a later point you break this out into a Repository Patter to use a different ORM.</description></item><item><title>Quick way to add text to a hidden ckeditor field</title><link>https://alnutile.github.io/posts/68/</link><pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/68/</guid><description>Since I am not testing ckeditor this is a way to get text into a sometimes required field.
//FeaturesContext.php
/**
* @Then /^I fill in wysiwyg on field &amp;quot;([^&amp;quot;]*)&amp;quot; with &amp;quot;([^&amp;quot;]*)&amp;quot;$/
*/
public function iFillInWysiwygOnFieldWith($arg, $arg2)
{
$js = &amp;lt;&amp;lt;&amp;lt;HEREDOC
jQuery(&amp;quot;textarea[name='$arg']&amp;quot;).css('visibility', 'visible');
jQuery(&amp;quot;textarea[name='$arg']&amp;quot;).show();
HEREDOC;
$this-&amp;gt;getSession()-&amp;gt;executeScript($js);
$this-&amp;gt;fillField($arg, $arg2);
}
This will go into FeaturesContext.php. Then to you test you can pass the name and text to place into the field
Then I fill in wysiwyg on field &amp;quot;body&amp;quot; with &amp;quot;Project via Test 1&amp;quot;
If you want to test Ckeditor then just look for a class that it applies to your text editor to know it is showing.</description></item><item><title>Github CLI to get Teams and Members of an Org</title><link>https://alnutile.github.io/posts/67/</link><pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/67/</guid><description>Needed to make a quick library for pulling down this info and making it a CSV file.
The libraries made this super easy. But it was hard to get all the emails since these can only been seen if in the users profile.
the link https://github.com/alnutile/org_reports</description></item><item><title>Mink Assertions</title><link>https://alnutile.github.io/posts/66/</link><pubDate>Tue, 06 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/66/</guid><description>Just a reminder this file as a good list of steps I can use. (will post more here shortly)
Mink 1.3 [behat/mink-extension/src/Behat/MinkExtension/Context/MinkDictionary.php](https://github.com/Behat/MinkExtension/blob/1.3/src/Behat/MinkExtension/Context/MinkDictionary.php)</description></item><item><title>Adding Column using sqlite caused error 'Cannot add a NOT NULL column with default value NULL'</title><link>https://alnutile.github.io/posts/64/</link><pubDate>Sun, 04 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/64/</guid><description>After the security update I had to add a remember_token to my user table. security update
Since I am using sqllite locally I ended up with this error
&amp;gt;php artisan migrate
[Illuminate\Database\QueryException]
SQLSTATE[HY000]: General error: 1 Cannot add a NOT NULL column with default value NULL (SQL: alter table &amp;quot;users&amp;quot; add column &amp;quot;remember_token&amp;quot; text not null)
Finally this post made it clear I had to make this nullable
//migration file
/**
* Run the migrations.</description></item><item><title>Drupal and Composer install or update</title><link>https://alnutile.github.io/posts/65/</link><pubDate>Sun, 04 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/65/</guid><description>Using composer and drupal, even d7, is great. But an update or install can leave you with a broken drupal registry.
So here is a workflow that is pretty bullet proof.
In this example drupal&amp;rsquo;s composer folder where composer.json lives is located in /var/www/drupal/sites/default/files/composer
So in there is composer.json and composer.lock
So when you need to install a new composer library and you updated your json file you can run</description></item><item><title>php artisan migrate:reset not working</title><link>https://alnutile.github.io/posts/63/</link><pubDate>Sun, 04 May 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/63/</guid><description>This was an issue for me using sqlite. There was a simple fix noted in the irclogs of Laravel!
So under my require-dev or require I placed
//composer.json
&amp;quot;require&amp;quot;: {
&amp;quot;laravel/framework&amp;quot;: &amp;quot;4.1.*&amp;quot;,
&amp;quot;way/generators&amp;quot;: &amp;quot;dev-master&amp;quot;,
&amp;quot;doctrine/dbal&amp;quot;: &amp;quot;~2.3&amp;quot;
},
ran composer update and all was well again!</description></item><item><title>Angular and Scope - or - How not to waste time figuring out why a scope value is not 'working'</title><link>https://alnutile.github.io/posts/62/</link><pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/62/</guid><description>The creator of Angular notes it in this video which is well worth the watch.
Basically when using includes or directives etc you may not be getting a scope value as easily because it is child scope and you may be looking in the parent scope.
For example This include if I have an include and it references a model attribute like this
//Some include
&amp;lt;input ng-model=&amp;quot;firstname&amp;quot;&amp;gt;
I may not get the results from that input that I expect.</description></item><item><title>Behat Checkbox</title><link>https://alnutile.github.io/posts/61/</link><pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/61/</guid><description>Just a reminder to check if a checkbox is checked or not.
Feature: Behat bug
Scenario:
Given I am on &amp;quot;/bug.html&amp;quot;
When I check &amp;quot;foo&amp;quot;
Then the &amp;quot;foo&amp;quot; checkbox should be checked
or
Feature: Behat bug
Scenario:
Given I am on &amp;quot;/bug.html&amp;quot;
When I check &amp;quot;foo&amp;quot;
Then the &amp;quot;foo&amp;quot; checkbox should not be checked
https://github.com/Behat/Behat/issues/298</description></item><item><title>Adding Markdown Editor to your Blog/CMS</title><link>https://alnutile.github.io/posts/60/</link><pubDate>Mon, 28 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/60/</guid><description>In this case it is Laravel but any PHP framework could use this.
Get the Library I used the dflydev-markdown library which uses php-markdown as it&amp;rsquo;s base. 1
As it notes I load it up with composer.json and I am ready to use it.
Inject the class into your controller At the controller level I inject it like this
//BaseController.php
use dflydev\markdown\MarkdownExtraParser;
class BaseController {
public $mk;
public function __construct(MarkdownExtraParser $mk = null)
{
$this-&amp;gt;mk = ($mk == null) ?</description></item><item><title>Ng-if and Scope</title><link>https://alnutile.github.io/posts/47/</link><pubDate>Sat, 26 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/47/</guid><description>Scratched my head on this one for a few.
Inside of ng-if is a new scope. So a model on $scope.modelName will have to be referenced as $parent.modelName in the view.
Basically it worked on another page so I knew it should work here. When I moved it out of ng-if it worked so it had to be related to that. Finally this post made some sense of it
So now my filter works.</description></item><item><title>Running multiple tasks asynchronously with Drush, Drupal and MT</title><link>https://alnutile.github.io/posts/59/</link><pubDate>Fri, 18 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/59/</guid><description>I will not even try to write about this but instead share the most well written technical page I have read in a long time&amp;nbsp;http://deeson-online.co.uk/labs/multi-processing-part-1-how-make-drush-rush
He covers how to make a drush command run multiple processes in parallel&amp;nbsp;depending on how many threads you give it. I show in the image below me starting up the command to run 9 behat tests sent to Saucelabs with 4&amp;nbsp;threads (could not go over that)</description></item><item><title>Angular.js, CKEditor, and REST including file uploads</title><link>https://alnutile.github.io/posts/50/</link><pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/50/</guid><description>I wanted to share the steps I followed to get this WYSIWYG editor working with Angular and to allow uploads. By the end of it you will see how to Plug CKeditor into your Angular app Setup the config options in your Angular Controller and your view Setup your REST endpoints to take the needed requests Show image gallery Upload image Show Files to link to Upload file to link to This can work for really any backend, Laravel, Drupal, Node etc.</description></item><item><title>Saucelabs Timeout</title><link>https://alnutile.github.io/posts/49/</link><pubDate>Thu, 10 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/49/</guid><description>There are two settings I add to my yml file to prevent a timeout, command-timeout and max-duration.
Last I checked though I had to add a different repo to my composer.json
Now you get 10 minutes on both</description></item><item><title>Building the UI first with Angular, Mocked Data and REST</title><link>https://alnutile.github.io/posts/58/</link><pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/58/</guid><description>Lately I have had a few projects using a RESTful backend to output JSON formatted data and a javascript front end. All of them are different technologies but the front end is in Angular.js.
So using the Angular mock module I have been able to build out the front end with no backend. I started to do this for speed reasons but realized a number of huge benefits.
Angular has some good docs on how to mock this data and use this $httpbackend module here.</description></item><item><title>Angular Watching a model and it's filters</title><link>https://alnutile.github.io/posts/43/</link><pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/43/</guid><description>I had to update other items on the page including an CSV export as the user made filter changes on the site.
I had to pass the results of ng-repeat into a model and then the filters as seen here
And in my controller I added a watcher to process the new results as needed.
This simple solution I had some trouble grasping.</description></item><item><title>Behat Resources</title><link>https://alnutile.github.io/posts/42/</link><pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/42/</guid><description>I&amp;#39;ve been working on behat related work for some time now and here is a list of things I would like to centralize and share
Vagrant install of behat and behatEditor https://github.com/alnutile/behat-vagrant
BehatEditor https://github.com/alnutile/behat_editor it will link off to serveral projects
Github Integration
Saucelabs Integration
Angular Reporting tool
Google doc that goes over how to get started
There is a new version of the tool coming out soon and a service you can see that starts of it here http://angular.</description></item><item><title>Angular Seed Testing Setup</title><link>https://alnutile.github.io/posts/19/</link><pubDate>Wed, 12 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/19/</guid><description>This took a few settings to get it working.
For one I put the correct paths in for karma and webdriver
I then had to download mocks http://code.angularjs.org/1.2.14/angular-mocks.js even though I used angular-seed and setup my module to include this &amp;#39;ngMockE2E&amp;#39;
This page was a good starting point http://docs.angularjs.org/api/ngMockE2E/service/$httpBackend
Then there is the testing end 2 end frame work https://github.com/angular/protractor/tree/master/docs/ that allowed me to easily write non-unit tests
&amp;nbsp;</description></item><item><title>Angular Drupal and CSRF</title><link>https://alnutile.github.io/posts/48/</link><pubDate>Tue, 11 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/48/</guid><description>quick tip on getting and setting your token for drupal when doing a put, post, destroy against a drupal site.&amp;Acirc;&amp;nbsp;
Mostly gotten from here
Might even be better to reset the formant for X-CSRF-Token to the default one Angular is looking for X-CSRFToken</description></item><item><title>Mocking drupal database queries</title><link>https://alnutile.github.io/posts/46/</link><pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/46/</guid><description>formatting issue will update the code examples soon
I have a Class I want to test with phpunit but it makes several queries to a drupal database. I rather not bootstrapdrupal just to make sure this Class is returning the results as expected.
For example the SiteClass has a method called index. That method takes the uuid for a user and finds all the sites related to that user. Then using that uuid I have some other non drupal data that relates to it.</description></item><item><title>CORS and Laravel</title><link>https://alnutile.github.io/posts/4/</link><pubDate>Thu, 06 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/4/</guid><description>When doing some API work using Laravel as the REST server I was getting a common error &amp;quot;No &amp;#39;Access-Control-Allow-Origin&amp;#39; header is present on the requested resource.&amp;quot; which happens when the REST server is on a different domain than the client server.
I installed this package&amp;nbsp;https://github.com/barryvdh/laravel-cors&amp;nbsp;and it now works fine.</description></item><item><title>Behat Vagrant install and local testing</title><link>https://alnutile.github.io/posts/57/</link><pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/57/</guid><description>Setting up Vagrant for Behat
ol.lst-kix_xa82982e1krb-7.start{counter-reset:lst-ctn-kix_xa82982e1krb-7 0}.lst-kix_xa82982e1krb-4li{counter-increment:lst-ctn-kix_xa82982e1krb-4}ol.lst-kix_xa82982e1krb-5.start{counter-reset:lst-ctn-kix_xa82982e1krb-5 0}.lst-kix_xa82982e1krb-1li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-1,lower-latin) ". "}.lst-kix_xa82982e1krb-0li{counter-increment:lst-ctn-kix_xa82982e1krb-0}.lst-kix_xa82982e1krb-3li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-3,decimal) ". "}.lst-kix_xa82982e1krb-3li{counter-increment:lst-ctn-kix_xa82982e1krb-3}ol.lst-kix_xa82982e1krb-8{list-style-type:none}ol.lst-kix_xa82982e1krb-0.start{counter-reset:lst-ctn-kix_xa82982e1krb-0 0}.lst-kix_xa82982e1krb-6li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-6,decimal) ". "}.lst-kix_xa82982e1krb-4li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-4,lower-latin) ". "}.lst-kix_xa82982e1krb-1li{counter-increment:lst-ctn-kix_xa82982e1krb-1}.lst-kix_xa82982e1krb-0li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-0,decimal) ". "}.lst-kix_xa82982e1krb-7li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-7,lower-latin) ". "}ol.lst-kix_xa82982e1krb-3.start{counter-reset:lst-ctn-kix_xa82982e1krb-3 0}ol.lst-kix_xa82982e1krb-6.start{counter-reset:lst-ctn-kix_xa82982e1krb-6 0}ol.lst-kix_xa82982e1krb-1{list-style-type:none}ol.lst-kix_xa82982e1krb-0{list-style-type:none}.lst-kix_xa82982e1krb-7li{counter-increment:lst-ctn-kix_xa82982e1krb-7}ol.lst-kix_xa82982e1krb-3{list-style-type:none}ol.lst-kix_xa82982e1krb-2{list-style-type:none}ol.lst-kix_xa82982e1krb-5{list-style-type:none}ol.lst-kix_xa82982e1krb-2.start{counter-reset:lst-ctn-kix_xa82982e1krb-2 0}ol.lst-kix_xa82982e1krb-4{list-style-type:none}ol.lst-kix_xa82982e1krb-4.start{counter-reset:lst-ctn-kix_xa82982e1krb-4 0}ol.lst-kix_xa82982e1krb-7{list-style-type:none}ol.lst-kix_xa82982e1krb-6{list-style-type:none}.lst-kix_xa82982e1krb-6li{counter-increment:lst-ctn-kix_xa82982e1krb-6}.lst-kix_xa82982e1krb-8li{counter-increment:lst-ctn-kix_xa82982e1krb-8}.lst-kix_xa82982e1krb-5li{counter-increment:lst-ctn-kix_xa82982e1krb-5}ol.lst-kix_xa82982e1krb-8.start{counter-reset:lst-ctn-kix_xa82982e1krb-8 0}.lst-kix_xa82982e1krb-5li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-5,lower-roman) ". "}ol.lst-kix_xa82982e1krb-1.start{counter-reset:lst-ctn-kix_xa82982e1krb-1 0}.lst-kix_xa82982e1krb-8li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-8,lower-roman) ". "}.lst-kix_xa82982e1krb-2li{counter-increment:lst-ctn-kix_xa82982e1krb-2}.lst-kix_xa82982e1krb-2li:before{content:"" counter(lst-ctn-kix_xa82982e1krb-2,lower-roman) ". "}ol{margin:0;padding:0}.c0{widows:2;orphans:2;height:11pt;direction:ltr}.c3{widows:2;orphans:2;direction:ltr;margin-left:36pt}.c10{max-width:468pt;background-color:#ffffff;padding:72pt 72pt 72pt 72pt}.c4{widows:2;orphans:2;direction:ltr}.c2{color:#1155cc;text-decoration:underline}.c11{padding-top:10pt;page-break-after:avoid}.c12{margin:0;padding:0}.c6{color:inherit;text-decoration:inherit}.c1{font-weight:bold}.c9{text-decoration:underline}.c13{color:#ff2500}.c8{font-size:10pt}.c5{margin-left:36pt}.c7{padding-left:0pt}.title{widows:2;padding-top:0pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:21pt;font-family:"Trebuchet MS";padding-bottom:0pt;page-break-after:avoid}.subtitle{widows:2;padding-top:0pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-style:italic;font-size:13pt;font-family:"Trebuchet MS";padding-bottom:10pt;page-break-after:avoid}li{color:#000000;font-size:11pt;font-family:"Arial"}p{color:#000000;font-size:11pt;margin:0;font-family:"Arial"}h1{widows:2;padding-top:10pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:16pt;font-family:"Trebuchet MS";padding-bottom:0pt;page-break-after:avoid}h2{widows:2;padding-top:10pt;line-height:1.15;orphans:2;text-align:left;color:#000000;font-size:13pt;font-family:"Trebuchet MS";font-weight:bold;padding-bottom:0pt;page-break-after:avoid}h3{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:12pt;font-family:"Trebuchet MS";font-weight:bold;padding-bottom:0pt;page-break-after:avoid}h4{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:11pt;text-decoration:underline;font-family:"Trebuchet MS";padding-bottom:0pt;page-break-after:avoid}h5{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-size:11pt;font-family:"Trebuchet MS";padding-bottom:0pt;page-break-after:avoid}h6{widows:2;padding-top:8pt;line-height:1.15;orphans:2;text-align:left;color:#666666;font-style:italic;font-size:11pt;font-family:"Trebuchet MS";padding-bottom:0pt;page-break-after:avoid}
Vagrant Setup
&amp;nbsp;
You can see the video here
&amp;nbsp;
This is a fork of Steve Power&amp;#39;s work&amp;nbsp;https://github.</description></item><item><title>Twig and Drupal 7</title><link>https://alnutile.github.io/posts/53/</link><pubDate>Tue, 25 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/53/</guid><description>This will show how to use Twig in your D7 module
Setup your composer.json to pull in twig.
Then setup your template files
Then the buttons I include
finally load the template and add your variables
&amp;nbsp;</description></item><item><title>Angular and Laravel Partials</title><link>https://alnutile.github.io/posts/55/</link><pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/55/</guid><description>Blade uses {{ }} so it does not play well with Angular.js but I decided to use partials. I am not using Angular routes so I am just including partials in my controller file.
My blade file has this.
&amp;lt;div ng-include=&amp;quot;template.url&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/div&amp;gt;
Then the partial has this
&amp;lt;div class=&amp;quot;issues-to-get&amp;quot; ng-show=&amp;quot;issues.length &amp;gt; 0&amp;quot;&amp;gt;
&amp;lt;ul&amp;gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;lt;li&amp;gt;&amp;lt;label&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; value=&amp;quot;all&amp;quot; /&amp;gt;All&amp;lt;/label&amp;gt;&amp;lt;/li&amp;gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;lt;li ng-repeat=&amp;quot;issue in issues&amp;quot;&amp;gt;&amp;lt;label&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; value=&amp;quot;{{ issue.id }}&amp;quot; /&amp;gt;{{ issue.title }}&amp;lt;/label&amp;gt;&amp;lt;/li&amp;gt;</description></item><item><title>Using Github Pages for your help docs</title><link>https://alnutile.github.io/posts/54/</link><pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/54/</guid><description>Really impressed with how this came out.
Using Github pages with no theme we can use that repo to then pull in our help files to our local project via a JSON request. This separates documentation from the project so anyone on the team can checkout the git branch for the docs, make an edit and push to that branch which then shows on the site in minutes.
To start with take the repo you are using to make a new branch called gh-pages as noted here Github Docs&amp;nbsp;</description></item><item><title>GitWrapper Per Page settings KnpLabs / php-github-api</title><link>https://alnutile.github.io/posts/56/</link><pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/56/</guid><description>I need to stash more of these here as I use this API more
&amp;Acirc;&amp;Acirc;&amp;#160;
Per Page Setting
&amp;Acirc;&amp;Acirc;&amp;#160;</description></item><item><title>Guard, Laravel and phpunit</title><link>https://alnutile.github.io/posts/51/</link><pubDate>Wed, 05 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/51/</guid><description>If you already have rvm install this should be easy. Otherwise google that pain.
I set my rvm to ruby 2.0 but not sure if needed
rvm --default use 2.0
http://rvm.io/rubies/default
Then I made a Gemfile in the root folder and add this content
and run bundle install
After that was in place I ran guard init to get going and then pasted this code into the Guard file it made.</description></item><item><title>Drupal Services and Instantiating a Class</title><link>https://alnutile.github.io/posts/52/</link><pubDate>Tue, 04 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/52/</guid><description>Been using Drupal Services on a project and there are some docs on how to use a Class with this. But to instantiate it I was using a function per class method. Instead I now I have one function that can instantiate the Class and method based on the &amp;#39;callback&amp;#39; and the path 0 arg. Later I would like to just use the $_REQUEST type.
&amp;nbsp;
You can see the service below starting on line 4</description></item><item><title>Laravel Project Management Site</title><link>https://alnutile.github.io/posts/44/</link><pubDate>Mon, 03 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/44/</guid><description>Still has some work to be done for sure.&amp;nbsp;
https://github.com/alnutile/pml4
The goal will be a PM site that integrates with the github api since I have endless issues with clients getting confused using the Github interface for tickets. So this system will wrap around that.
In the mean time
Projects are&amp;nbsp;in place with many to many on Users
Issues are&amp;nbsp;in place with a one to many on Projects, a One to One User</description></item><item><title>Exploring Code and Laravel</title><link>https://alnutile.github.io/posts/40/</link><pubDate>Sun, 02 Feb 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/40/</guid><description>One thing I really enjoy about any of Jeffrey Way&amp;#39;s books or videos is how he emphasizes exploring code. &amp;nbsp;
Laravel does have great docs but for me it has been best to first dig through the code. Coming from years of another PHP framework, digging though that code could still lead to not being certain about the answer just because it is was a bit different or more abstract than what I am seeing in Laravel or even Rails.</description></item><item><title>Nesting Laravel 4 Routes</title><link>https://alnutile.github.io/posts/41/</link><pubDate>Fri, 31 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/41/</guid><description>Make sure your route file is set to show this
For my example is is projects and they have issues
So my route looks like this
#routes.php
Route::resource('projects', 'ProjectsController');
Route::resource('projects.issues', 'IssuesController');
So now my URLs will look lik this
/projects/4/issues &amp;lt;--shows all issues
/projects/4/issues/2 &amp;lt;--shows issue 2 in project 4
Finally on the Project Show page I have these linkRoute&amp;rsquo;s in place
&amp;lt;tr&amp;gt;
@endif
&amp;lt;td&amp;gt;{{ $issue['id'] }}&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;{{ HTML::linkRoute('projects.issues.show', $issue['name'], array($project-&amp;gt;id, $issue['id'])) }}&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;{{ $issue['active'] }}&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;{{ $issue['description'] }}&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
and</description></item><item><title>Using headless tests with Mink and Behat</title><link>https://alnutile.github.io/posts/9/</link><pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/9/</guid><description>Took a bit to find the right setting.
The yml file should look like
default:
&amp;nbsp; paths:
&amp;nbsp; &amp;nbsp; features: &amp;#39;features&amp;#39;
&amp;nbsp; extensions:
&amp;nbsp; &amp;nbsp; Behat\MinkExtension\Extension:
&amp;nbsp; &amp;nbsp; &amp;nbsp; goutte:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; guzzle_parameters:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; curl.options:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; CURLOPT_PORT: 8000
&amp;nbsp; &amp;nbsp; &amp;nbsp; selenium2: ~
&amp;nbsp; &amp;nbsp; &amp;nbsp; base_url: &amp;#39;http://localhost:8000&amp;#39;
&amp;nbsp; &amp;nbsp; &amp;nbsp; browser_name: safari
This way the goutte driver will use the correct port.</description></item><item><title>Node.js error</title><link>https://alnutile.github.io/posts/39/</link><pubDate>Sun, 19 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/39/</guid><description>&amp;quot;failed to fetch from registry&amp;quot;
But it was json endpoint was at that url so it was not a problem with the endpoint.
http://stackoverflow.com/questions/12913141/installing-from-npm-fails had a command that helped
npm config set registry http://registry.npmjs.org/
Now it all worked.
Though this article may have been a better one to follow&amp;nbsp;http://shashikantjagtap.net/using-zombie-js-driver-with-behats-minkextension/</description></item><item><title>Behat and bad HTML</title><link>https://alnutile.github.io/posts/38/</link><pubDate>Sat, 11 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/38/</guid><description>Some of the sites we are testing have HTML that has multiple ID that are the same. Or elements that do not really have enough info to get a class, name, label or ID out of.
This has been a challenge and there are a few custom steps made to help get through this
 Switching to an Iframe with no name or id
This was hard since the default was to target the ID of the frame or name.</description></item><item><title>Behat Mink and using Javascript / jQuery to test attributes</title><link>https://alnutile.github.io/posts/37/</link><pubDate>Mon, 06 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/37/</guid><description>Using Behat and Mink I had to make a test that would verify the height of content on the screen compared to the rest of the window size. For example it had to be 30% of the screen or more.
You can see the code below.
It allows the user to pass in the expected height % and the element they would like to target. I will optmize it to allow more options than just ID.</description></item><item><title>Keep it (functions/methods) small and simple</title><link>https://alnutile.github.io/posts/36/</link><pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/36/</guid><description>I have been doing some work using&amp;nbsp;Oop and have a lot of re-factoring to do since I did not keep my methods small and simple. Often they use other methods or presume a certain amount of constructed parameters.
When I was working strictly in procedural programming I would make my functions small and tie them together like the Unix command line tools. But then I had issues with having to pass too many variables all around.</description></item><item><title>Ubuntu 12.04 and PHP 5.4</title><link>https://alnutile.github.io/posts/45/</link><pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/45/</guid><description>Note to self
Super easy steps to setup PHP 5.4 on Ubuntu 12.04
http://www.dev-metal.com/how-to-install-latest-php-5-4-x-on-ubuntu-12-04-lts-precise-pangolin/</description></item><item><title>Bash History</title><link>https://alnutile.github.io/posts/32/</link><pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/32/</guid><description>This simple command &amp;quot;history&amp;quot; shows a numbered list of your past commands.
&amp;nbsp;1720 &amp;nbsp;sudo chgrp -R www-data batch
&amp;nbsp;1721 &amp;nbsp;sudo chmod -R 766 batch
&amp;nbsp;1722 &amp;nbsp;ls -al
&amp;nbsp;1723 &amp;nbsp;sudo chmod -R 776 batch
&amp;nbsp;1724 &amp;nbsp;cd batch/full/
&amp;nbsp;1725 &amp;nbsp;pwd
&amp;nbsp;1726 &amp;nbsp;exit
&amp;nbsp;1727 &amp;nbsp;mv build.xml.ant /var/www/test/site/sites/default/files/behat_yml/batch/full/
&amp;nbsp;1728 &amp;nbsp;cd /var/www/test/site/sites/default/files/behat_yml/batch/full/
&amp;nbsp;
From there you can choose a number from the output and run
!1725
To quickly rerun the command</description></item><item><title>Drupal FAPI Validation Error</title><link>https://alnutile.github.io/posts/31/</link><pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/31/</guid><description>when setting options in an option list dyamically you may run into &amp;quot;An illegal choice has been detected&amp;quot;&amp;nbsp;
You will have to set those fileds #validate =&amp;gt; TRUE as seen bellow
&amp;nbsp;</description></item><item><title>Drush and Features-Export</title><link>https://alnutile.github.io/posts/29/</link><pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/29/</guid><description>When at the command line with drush making features keep in mind you may need to use quotes. Example
drush features-export --destination=&amp;quot;sites/all/modules/custom&amp;quot; behat_site_settings dependencies:behat menu_custom:main-menu menu_links:main-menu:&amp;quot;&amp;lt;front&amp;gt;&amp;quot; menu_links:main-menu:&amp;quot;user/login&amp;quot; menu_links:main-menu:user menu_links:navigation_:&amp;quot;behat/testarea&amp;quot;&amp;nbsp;
Without the quotes around the menu links you would get an error from bash.
&amp;nbsp;</description></item><item><title>PHPSH</title><link>https://alnutile.github.io/posts/35/</link><pubDate>Mon, 21 Oct 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/35/</guid><description>Interactive command line on a Mac. So far this helped out
brew tap josegonzalez/php
brew install phpsh
and finally add this to the ~/.bash_profile
export PYTHONPATH=/usr/local/lib/python2.7/site-packages&amp;nbsp;
and then re source your .bash_profile
souce ~/.bash_profile
now phpsh at the command line will give you an interactive shell&amp;nbsp;</description></item><item><title>Quick Script to update Heroku database</title><link>https://alnutile.github.io/posts/33/</link><pubDate>Fri, 11 Oct 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/33/</guid><description>Just need to go from dev to basic on some sites. Later I will fix up the script to pass in the plan type and pg_wait.</description></item><item><title>Behat and Drupal episode 1</title><link>https://alnutile.github.io/posts/34/</link><pubDate>Mon, 23 Sep 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/34/</guid><description>Intro to Behat and Drupal more coming soon. The goals will be to&amp;nbsp;
Using Behat to run Drupal Selenium&amp;nbsp;tests.
Introduce an easy language for Project Managers and Product Owners to write a tests
Using a GUI to write tests.
....
Here is the intro video</description></item><item><title>Bootstrap Generator Gem Ruby on Rails</title><link>https://alnutile.github.io/posts/10/</link><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/10/</guid><description>This particular gem overrides the default output of scaffold. Making your generated view files bootstrap ready.
Bootstrap Generators&amp;nbsp;
&amp;nbsp;</description></item><item><title>Heroku in Heroku</title><link>https://alnutile.github.io/posts/30/</link><pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/30/</guid><description>As I build out these sites I had to run heroku commands on heroku since the admin site needs to setup Domains and Subdomain on each new site. I was glad they had the&amp;nbsp;https://github.com/heroku/heroku.rb&amp;nbsp;gem&amp;nbsp;that made it possible to make an interface for administrators to add domains and subdomains to their heroku site.&amp;nbsp;
In my controller I included the heroku-api as the node on the github page.
After that, on an update or a create I check if the domain exists.</description></item><item><title>HerokuApps and Multiple Domains</title><link>https://alnutile.github.io/posts/27/</link><pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/27/</guid><description>There are some great docs online for figuring out how to setup heroku domains.
https://devcenter.heroku.com/articles/custom-domains as well as others.
The feature I had to get setup was that for every new herokuapp I spun up under my account/clients account it had to make a sub-domain under that SaaS owners zone/domain.
For example the owner wanted all of these apps to show up under freesurvey.com (not really but just an example url)&amp;nbsp;so each one they spun up would be, for example yoursite.</description></item><item><title>Hosting is Dead?</title><link>https://alnutile.github.io/posts/28/</link><pubDate>Fri, 30 Aug 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/28/</guid><description>Hosting is Dead? https://www.getpantheon.com/resources/hostingisdead
Okay so they have a good reason to say that. But it is still worth a read.
Some points I have experienced in the past
Server and Site Updates
&amp;quot;The person tasked with updating security patches had other priorities, and couldn&amp;rsquo;t stay on top of it. Or, the new developers you just brought in for a site
refresh are constantly requesting SSH keys and passwords. You&amp;rsquo;ve lost track of who had access to what in the past.</description></item><item><title>Ruby on Rails with CMS and other fun stuff</title><link>https://alnutile.github.io/posts/25/</link><pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/25/</guid><description>Been working about a month now on a Ruby on Rails project. The goal of the product is to make a site that can be spun up numerous times as a Saas product. I has to include&amp;nbsp;
CMS elements
Settings area to change logo, colors etc.
Connect to a remote SOAP API to create cloneable content from and users.
User admin area with Roles
Reporting
Ckeditor that integrates with Paperclip on non-cms pages.</description></item><item><title>Paperclip and S3 and Ckeditor</title><link>https://alnutile.github.io/posts/24/</link><pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/24/</guid><description>This took a bit. On the first site it was easy. I went through these directions to get ckeditor setup with paperclip.
And paperclip is easy to setup with S3 but on this site you are reading now the url Amazon used was not s3.amazonaws.com/nutilesblog but s3-us-west-2.amazonaws.com/nutilesblog&amp;nbsp;
Paperclip was defaulting to s3 and I had trouble getting the combinations for this setting right. Maybe I could have set the bucket to use s3 but in the end I rather deal with the s3-us-west-2 since different clients will have different needs.</description></item><item><title>RubyMine and BetterErrors</title><link>https://alnutile.github.io/posts/23/</link><pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/23/</guid><description>https://github.com/charliesome/better_errors/wiki
good help here on loading RubyMine from BetterErrors</description></item><item><title>Installing mysql2 on a mac</title><link>https://alnutile.github.io/posts/22/</link><pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/22/</guid><description>http://stackoverflow.com/questions/5919727/bundle-install-problem-mysql-h-is-missing
This was key to get this install done.</description></item><item><title>Paperclip and S3</title><link>https://alnutile.github.io/posts/17/</link><pubDate>Tue, 16 Jul 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/17/</guid><description>Great gem for attaching images to a rails app (maybe even Laravel). This article made it clear how to set this up
https://devcenter.heroku.com/articles/paperclip-s3
And this one made it clear why my development environment was not working.
http://stackoverflow.com/questions/11760597/s3-paperclip-working-on-heroku-but-not-localhost
I had to edit my .bash_profile
But instead of restarting the terminal I just did source ~/.bash_profile and then started that rails server again in that terminal.
If only I found a tutorial on using fog and paperclip since I am already using that gem for refinerycms</description></item><item><title>Capistrano for non-rails sites</title><link>https://alnutile.github.io/posts/20/</link><pubDate>Mon, 08 Jul 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/20/</guid><description>I've been using capistrano for Rails and really impressed by how easy it makes deployment and rolllback. Sometimes though I need this type of automation on non-rails work. This type of automation can include setting up a vhost in Apache as well as Travis CI work. I know Chef-solo might be best for this but since I am already in Capistrano I might as well push it a little more.</description></item><item><title>Refinery CMS and Twitter Bootstrap</title><link>https://alnutile.github.io/posts/14/</link><pubDate>Sun, 07 Jul 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/14/</guid><description>This worked out quite easily on a project that I am working on. (not yet released)
At the command line I had to run the needed code to copy the views to my app.
Here are some commands I ran thoug this command
rake refinery:override
will show other options as well.
rake refinery:override view=refinery/_site_bar
rake refinery:override view=refinery/_content_page
rake refinery:override view=refinery/_menu
rake refinery:override view=refinery/_head</description></item><item><title>Technologies for a Saas</title><link>https://alnutile.github.io/posts/16/</link><pubDate>Sun, 07 Jul 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/16/</guid><description>I had to review for a client what CMS to choose. Keeping in mind the CMS was only part of the product and a small part. Small in that the big value to the product seem to fall more on the APP part of the project that allowed the user to make a question set from an JSON based API. So a bulk of the work would be building that.</description></item><item><title>Angular.js Ticket System</title><link>https://alnutile.github.io/posts/18/</link><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/18/</guid><description>Fun side project to make a ticket system in Angular.js.
Still have to build out the authentication system and ideally move the api into Rails.
And of course wrap up a few other things ( -;
http://angular.alfrednutile.info/
Or the video
http://www.youtube.com/watch?v=RjCJNn7wpj0</description></item><item><title>My first Rails site for the masses.</title><link>https://alnutile.github.io/posts/15/</link><pubDate>Thu, 27 Jun 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/15/</guid><description>First Rails site for the masses for me. Thanks to Progressive Exchange http://www.progressiveexchange.org/welcome.htm
I was able to volunteer for a webapp for Doctors for America http://www.drsforamerica.org/
So not only do I get to learn Ruby on Rails and practice but I get to build something for a good group and purpose.
This app had to allow staff to enter and manage Speaker Requests and Speakers data as well as allow the public to view a Calendar of the upcoming events, filter as needed and submit a requests.</description></item><item><title>Vagrant and Laravel</title><link>https://alnutile.github.io/posts/13/</link><pubDate>Tue, 25 Jun 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/13/</guid><description>Most likely for any internal server I had to run command
php artisan serve &amp;ndash;host=&amp;ldquo;0.0.0.0&amp;rdquo;
to access the port forwarding feature of vagrant
Update: I had to also make sure to set the forward to the same as the original 8000 So my Vagrant file looked like this gist</description></item><item><title>Making lists from acts_as_taggable</title><link>https://alnutile.github.io/posts/7/</link><pubDate>Sun, 09 Jun 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/7/</guid><description>This took some time to figure out but I finally found a post on stack exchange. Even RailsCasts has a how-to on making a tag cloud, as well as act_as_taggable&amp;rsquo;s guthub page. But I just could not see how to limit to a context other than :tag
So maybe I was missing the obvious but all I wanted was to output a clickable list on a sidebar so users can filter content from that list.</description></item><item><title>Questions that may come in handy when interviewing</title><link>https://alnutile.github.io/posts/12/</link><pubDate>Sun, 09 Jun 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/12/</guid><description>Can you clearly define the roles and responsibilities you need me to fill? What would you need consider my hire a success in the next 6 months? In the next year? GitHub has a 0% employee turn over rate. How does your company try to prevent turnover? Using the past few years of your organization financial records do you have a sense of growth and constant revenue increase for this year?</description></item><item><title>Hack For Change Challenge</title><link>https://alnutile.github.io/posts/11/</link><pubDate>Mon, 03 Jun 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/11/</guid><description>Participated in the Hack For Change challenge in Western Mass.
All the challenges where inspiring, I took part in the &amp;ldquo;Unlocking Prison Phone Data&amp;rdquo; because it seemed like the most difficult challenge.
A blog post about it is here
Overall it was a lot of scrapping and command line work done by Gyepi Sam, doing some amazing work in Perl and all command line. It was great to see. Pulling down files, processing the PDFs via OCR and pushing them into the Postgres db.</description></item><item><title>ActiveAdmin Rails</title><link>https://alnutile.github.io/posts/8/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/8/</guid><description>Pretty amazing drop in interface to manage a site. I am building a Speakers Bureau for a non-profit and ended up using this to make that part of the build easier.
http://activeadmin.info/
My only fear was bringing in way more than I needed but so far it is okay because of how hookable it is.
I have dealt with other systems that can be a pain to hook so I am still always nervous about that moment when the hook takes more time than if you built it your self.</description></item><item><title>Great tip on Git and Jenkins to auto deploy</title><link>https://alnutile.github.io/posts/3/</link><pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/3/</guid><description>with every git push I would like jenkins to run it's tests then deploy the branch if it passes.
This git plugin for jenkins notes you can setup a post-receive hook in git.
https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin
Git goes over what is available here
http://git-scm.com/book/en/Customizing-Git-Git-Hooks
All I did was add post-receive to the git repo and added the curl command in the script noted in the plugin above and now Jenkins will auto run on every git push origin development
Nice!</description></item><item><title>Going Angular.js</title><link>https://alnutile.github.io/posts/2/</link><pubDate>Fri, 12 Apr 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/2/</guid><description>Going Angular
Took some time to rewrite my drupal/bootstrap site into Angular.js and slim php.
Using slim and a seed project I quickly had a rest api to get the different content types, Blog, Page etc.
I am using the Page content type to make other dynamic parts to the site like Footer and Header.
After a quick migration from drupal to a more basic MySQL db layout (soon mongodb?</description></item><item><title>Javascript Based Product Viewer</title><link>https://alnutile.github.io/posts/6/</link><pubDate>Fri, 22 Mar 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/6/</guid><description>Due to NDA limitations I had to remove links to the final product Latest Project Virtual Design Tool. [ url removed due to nda issues ) -: ]Some points that were fun, new, and challenging.Model, View, Controller mindet.Building the RESTful service/API firstTrying to follow a feature driven development plan.Having smaller tasks and more points of QAHaving smaller points to check in with the client to review the finished tasks and not wait till the &amp;ldquo;end&amp;rdquo;.</description></item><item><title>Global Redirect module after spaces / purl install does not</title><link>https://alnutile.github.io/posts/26/</link><pubDate>Tue, 15 Jan 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/26/</guid><description>Sometime when using spaces and purl there are Pages Not Found even though they are there. This is one reason. There is a space that purl is looking for a url starting with eg test. Some day you make a node test/testmore and decide later to use drupal&amp;#39;s redirect to save the url test/testmore and delete the node (or unpublish it) But since spaces and purl is keeping an eye on test it will not work.</description></item><item><title>DrupalCamp Western Mass</title><link>https://alnutile.github.io/posts/1/</link><pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/1/</guid><description>I will be presenting on 2 topics.
Using a VM for development the url can be seen below. http://drupalcampma.com/virtual-box-ubuntu-local-development-strategy
jQuery/Ajax without using the Drupal FAPI http://drupalcampma.com/using-jquery-and-ajax-outside-drupal-fapi
Though this drupal backbone session looks great! http://drupalcampma.com/drupal-and-backbonejs</description></item><item><title>jQuery Address</title><link>https://alnutile.github.io/posts/5/</link><pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/5/</guid><description>Simple example of jQuery.address in use. As you click the top &amp;ldquo;black&amp;rdquo; menu area the pages will load via Ajax (and title) notice also the URL. Then if you click back it forces a reload. There is very little code needed to make this work. Other than the ajax callback I run this on page load (eg pressing back on the browser button)
//Jquery Address clicking back
$.address.externalChange(function(){
if($.address.value() !== '/') {
updateMe($.</description></item><item><title>NDA</title><link>https://alnutile.github.io/posts/21/</link><pubDate>Fri, 11 Jul 2008 00:00:00 +0000</pubDate><guid>https://alnutile.github.io/posts/21/</guid><description>Some sites are under NDA. So if you see this message at some point after clicking a link it is due to that. If you have questions about the link you clicked feel free to email me at alfrednutile@gmail.com</description></item></channel></rss>